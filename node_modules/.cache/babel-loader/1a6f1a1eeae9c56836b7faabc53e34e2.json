{"remainingRequest":"D:\\software\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\software\\front\\src\\store\\modules\\user.js","dependencies":[{"path":"D:\\software\\front\\src\\store\\modules\\user.js","mtime":1670666519700},{"path":"D:\\software\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDovc29mdHdhcmUvZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgdXNlckFQSSBmcm9tICdAL2FwaS91c2VyJzsKaW1wb3J0IHsgc2V0VG9rZW4sIHJlbW92ZVRva2VuIH0gZnJvbSAnQC91dGlscy9hdXRoJzsKaW1wb3J0IHJvdXRlciwgeyByZXNldFJvdXRlciB9IGZyb20gJ0Avcm91dGVyJzsKdmFyIHN0YXRlID0gewogIHVzZXJJbmZvOiB7fSwKICByb2xlczogW10sCiAgY29udGVzdFR5cGVzOiBbXQp9Owp2YXIgbXV0YXRpb25zID0gewogIFNFVF9UT0tFTjogZnVuY3Rpb24gU0VUX1RPS0VOKHN0YXRlLCB0b2tlbikgewogICAgc3RhdGUudG9rZW4gPSB0b2tlbjsKICB9LAogIFNFVF9VU0VSSU5GTzogZnVuY3Rpb24gU0VUX1VTRVJJTkZPKHN0YXRlLCB1c2VySW5mbykgewogICAgc3RhdGUudXNlckluZm8gPSB1c2VySW5mbzsKICB9LAogIFNFVF9ST0xFUzogZnVuY3Rpb24gU0VUX1JPTEVTKHN0YXRlLCByb2xlcykgewogICAgc3RhdGUucm9sZXMgPSByb2xlczsKICB9LAogIFNFVF9DT05URVNUVFlQRVM6IGZ1bmN0aW9uIFNFVF9DT05URVNUVFlQRVMoc3RhdGUsIHR5cGVzKSB7CiAgICBzdGF0ZS5jb250ZXN0VHlwZXMgPSB0eXBlczsKICB9Cn07CnZhciBhY3Rpb25zID0gewogIC8vIOeUqOaIt+eZu+W9lQogIGxvZ2luOiBmdW5jdGlvbiBsb2dpbihfcmVmLCB1c2VySW5mbykgewogICAgdmFyIGNvbW1pdCA9IF9yZWYuY29tbWl0OwogICAgdXNlckluZm8uYWNjb3VudCA9IHVzZXJJbmZvLmFjY291bnQudHJpbSgpOwogICAgdXNlckluZm8ucGFzc3dvcmQgPSB1c2VySW5mby5wYXNzd29yZC50cmltKCk7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICB1c2VyQVBJLmxvZ2luKHVzZXJJbmZvKS50aGVuKGZ1bmN0aW9uIChyZXNwKSB7CiAgICAgICAgdmFyIHRva2VuID0gcmVzcC5kYXRhOwogICAgICAgIHNldFRva2VuKHRva2VuKTsKICAgICAgICByZXNvbHZlKCk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgIH0pOwogICAgfSk7CiAgfSwKICAvLyDojrflj5bnlKjmiLfkv6Hmga8KICBnZXRVc2VySW5mbzogZnVuY3Rpb24gZ2V0VXNlckluZm8oX3JlZjIpIHsKICAgIHZhciBjb21taXQgPSBfcmVmMi5jb21taXQsCiAgICAgICAgZGlzcGF0Y2ggPSBfcmVmMi5kaXNwYXRjaDsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgIHVzZXJBUEkuZ2V0VXNlckluZm8oKS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBpZiAoIXJlcy5kYXRhKSB7CiAgICAgICAgICByZWplY3QoJ+mqjOivgeWksei0pe+8jOivt+mHjeaWsOeZu+W9lScpOwogICAgICAgIH0gLy8g5Li76aKY6Imy5Li656m655qE5pu05pS5CgoKICAgICAgICByZXMuZGF0YS51c2VySW5mby50aGVtZUNvbG9yID8gJycgOiByZXMuZGF0YS51c2VySW5mby50aGVtZUNvbG9yID0gJyMwMDkxNDAnOwogICAgICAgIGNvbW1pdCgnU0VUX1VTRVJJTkZPJywgcmVzLmRhdGEudXNlckluZm8pOwogICAgICAgIGNvbW1pdCgnU0VUX1JPTEVTJywgcmVzLmRhdGEucm9sZXMpOwogICAgICAgIGNvbW1pdCgnU0VUX0NPTlRFU1RUWVBFUycsIHJlcy5kYXRhLmNvbnRlc3RUeXBlcyk7CiAgICAgICAgcmVzb2x2ZShyZXMuZGF0YSk7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgIHJlamVjdChlcnJvcik7CiAgICAgIH0pOwogICAgfSk7CiAgfSwKICAvLyDnlKjmiLfnmbvlh7oKICBsb2dvdXQ6IGZ1bmN0aW9uIGxvZ291dChfcmVmMykgewogICAgdmFyIGNvbW1pdCA9IF9yZWYzLmNvbW1pdCwKICAgICAgICBzdGF0ZSA9IF9yZWYzLnN0YXRlLAogICAgICAgIGRpc3BhdGNoID0gX3JlZjMuZGlzcGF0Y2g7CiAgICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkgewogICAgICB1c2VyQVBJLmxvZ291dCgpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgIGNvbW1pdCgnU0VUX1VTRVJJTkZPJywge30pOwogICAgICAgIGNvbW1pdCgnU0VUX1JPTEVTJywgW10pOwogICAgICAgIGNvbW1pdCgnU0VUX0NPTlRFU1RUWVBFUycsIFtdKTsKICAgICAgICByZW1vdmVUb2tlbigpOwogICAgICAgIHJlc2V0Um91dGVyKCk7IC8vIHJlc2V0IHZpc2l0ZWQgdmlld3MgYW5kIGNhY2hlZCB2aWV3cwoKICAgICAgICBkaXNwYXRjaCgndGFnc1ZpZXcvZGVsQWxsVmlld3MnLCBudWxsLCB7CiAgICAgICAgICByb290OiB0cnVlCiAgICAgICAgfSk7CiAgICAgICAgcmVzb2x2ZSgpOwogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgICByZWplY3QoZXJyb3IpOwogICAgICB9KTsKICAgIH0pOwogIH0sCiAgLy8g5Yig6ZmkIHRva2VuIHJvbGVzCiAgcmVzZXRUb2tlbjogZnVuY3Rpb24gcmVzZXRUb2tlbihfcmVmNCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICBjb21taXQoJ1NFVF9ST0xFUycsIFtdKTsKICAgICAgcmVtb3ZlVG9rZW4oKTsKICAgICAgcmVzb2x2ZSgpOwogICAgfSk7CiAgfSwKICAvLyDmm7TmlrDnlKjmiLfkv6Hmga8KICB1cGRhdGVVc2VySW5mbzogZnVuY3Rpb24gdXBkYXRlVXNlckluZm8oX3JlZjUsIHVzZXJJbmZvKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjUuY29tbWl0OwogICAgcmV0dXJuIGNvbW1pdCgnU0VUX1VTRVJJTkZPJywgdXNlckluZm8pOwogIH0sCiAgLy8g5Yqo5oCB57yW6L6R5p2D6ZmQCiAgY2hhbmdlUm9sZXM6IGZ1bmN0aW9uIGNoYW5nZVJvbGVzKF9yZWY2LCByb2xlKSB7CiAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICB2YXIgY29tbWl0LCBkaXNwYXRjaCwgX3lpZWxkJGRpc3BhdGNoLCByb2xlcywgYWNjZXNzUm91dGVzOwoKICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWY2LmNvbW1pdCwgZGlzcGF0Y2ggPSBfcmVmNi5kaXNwYXRjaDsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICByZXR1cm4gZGlzcGF0Y2goJ2dldFVzZXJJbmZvJyk7CgogICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgX3lpZWxkJGRpc3BhdGNoID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICByb2xlcyA9IF95aWVsZCRkaXNwYXRjaC5yb2xlczsKICAgICAgICAgICAgICByZXNldFJvdXRlcigpOyAvLyBnZW5lcmF0ZSBhY2Nlc3NpYmxlIHJvdXRlcyBtYXAgYmFzZWQgb24gcm9sZXMKCiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgICAgcmV0dXJuIGRpc3BhdGNoKCdwZXJtaXNzaW9uL2dlbmVyYXRlUm91dGVzJywgcm9sZXMsIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICBhY2Nlc3NSb3V0ZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIC8vIGR5bmFtaWNhbGx5IGFkZCBhY2Nlc3NpYmxlIHJvdXRlcwogICAgICAgICAgICAgIHJvdXRlci5hZGRSb3V0ZXMoYWNjZXNzUm91dGVzKTsgLy8gcmVzZXQgdmlzaXRlZCB2aWV3cyBhbmQgY2FjaGVkIHZpZXdzCgogICAgICAgICAgICAgIGRpc3BhdGNoKCd0YWdzVmlldy9kZWxBbGxWaWV3cycsIG51bGwsIHsKICAgICAgICAgICAgICAgIHJvb3Q6IHRydWUKICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpKCk7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogc3RhdGUsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMsCiAgYWN0aW9uczogYWN0aW9ucwp9Ow=="},{"version":3,"sources":["D:/software/front/src/store/modules/user.js"],"names":["userAPI","setToken","removeToken","router","resetRouter","state","userInfo","roles","contestTypes","mutations","SET_TOKEN","token","SET_USERINFO","SET_ROLES","SET_CONTESTTYPES","types","actions","login","commit","account","trim","password","Promise","resolve","reject","then","resp","data","catch","error","getUserInfo","dispatch","res","themeColor","logout","root","resetToken","updateUserInfo","changeRoles","role","accessRoutes","addRoutes","namespaced"],"mappings":"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","sourcesContent":["import userAPI from '@/api/user'\r\nimport { setToken, removeToken } from '@/utils/auth'\r\nimport router, { resetRouter } from '@/router'\r\n\r\nconst state = {\r\n  userInfo: {},\r\n  roles: [],\r\n  contestTypes: []\r\n}\r\n\r\nconst mutations = {\r\n  SET_TOKEN: (state, token) => {\r\n    state.token = token\r\n  },\r\n  SET_USERINFO: (state, userInfo) => {\r\n    state.userInfo = userInfo\r\n  },\r\n  SET_ROLES: (state, roles) => {\r\n    state.roles = roles\r\n  },\r\n  SET_CONTESTTYPES: (state, types) => {\r\n    state.contestTypes = types\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  // 用户登录\r\n  login({ commit }, userInfo) {\r\n    userInfo.account = userInfo.account.trim()\r\n    userInfo.password = userInfo.password.trim()\r\n    return new Promise((resolve, reject) => {\r\n      userAPI.login(userInfo).then(resp => {\r\n        const token = resp.data\r\n        setToken(token)\r\n        resolve()\r\n      }).catch(error => {\r\n        reject(error)\r\n      })\r\n    })\r\n  },\r\n  // 获取用户信息\r\n  getUserInfo({ commit, dispatch }) {\r\n    return new Promise((resolve, reject) => {\r\n      userAPI.getUserInfo().then(res => {\r\n        if (!res.data) {\r\n          reject('验证失败，请重新登录')\r\n        }\r\n        // 主题色为空的更改\r\n        res.data.userInfo.themeColor ? '' : res.data.userInfo.themeColor = '#009140'\r\n        commit('SET_USERINFO', res.data.userInfo)\r\n        commit('SET_ROLES', res.data.roles)\r\n        commit('SET_CONTESTTYPES', res.data.contestTypes)\r\n        resolve(res.data)\r\n      }).catch(error => {\r\n        reject(error)\r\n      })\r\n    })\r\n  },\r\n\r\n  // 用户登出\r\n  logout({ commit, state, dispatch }) {\r\n    return new Promise((resolve, reject) => {\r\n      userAPI.logout().then(() => {\r\n        commit('SET_USERINFO', {})\r\n        commit('SET_ROLES', [])\r\n        commit('SET_CONTESTTYPES', [])\r\n        removeToken()\r\n        resetRouter()\r\n        // reset visited views and cached views\r\n        dispatch('tagsView/delAllViews', null, { root: true })\r\n\r\n        resolve()\r\n      }).catch(error => {\r\n        reject(error)\r\n      })\r\n    })\r\n  },\r\n\r\n  // 删除 token roles\r\n  resetToken({ commit }) {\r\n    return new Promise(resolve => {\r\n      commit('SET_ROLES', [])\r\n      removeToken()\r\n      resolve()\r\n    })\r\n  },\r\n\r\n  // 更新用户信息\r\n  updateUserInfo({ commit }, userInfo) {\r\n    return commit('SET_USERINFO', userInfo)\r\n  },\r\n\r\n  // 动态编辑权限\r\n  async changeRoles({ commit, dispatch }, role) {\r\n    // const token = role + '-token'\r\n    // commit('SET_TOKEN', token)\r\n    // setToken(token)\r\n\r\n    const { roles } = await dispatch('getUserInfo')\r\n    resetRouter()\r\n    // generate accessible routes map based on roles\r\n    const accessRoutes = await dispatch('permission/generateRoutes', roles, { root: true })\r\n    // dynamically add accessible routes\r\n    router.addRoutes(accessRoutes)\r\n\r\n    // reset visited views and cached views\r\n    dispatch('tagsView/delAllViews', null, { root: true })\r\n  }\r\n}\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state,\r\n  mutations,\r\n  actions\r\n}\r\n\r\n"]}]}