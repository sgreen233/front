{"remainingRequest":"D:\\software\\front\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\software\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\software\\front\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\front\\front\\src\\components\\SimpleSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software\\front\\front\\src\\components\\SimpleSelect.vue","mtime":1715830118032},{"path":"D:\\software\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715830111371},{"path":"D:\\software\\front\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1715830110683},{"path":"D:\\software\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715830111371},{"path":"D:\\software\\front\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1715830117510}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SimpleSelect.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <el-select v-model=\"selectValue\" v-loading=\"loading\" class=\"simple-select\" :placeholder=\"placeholder\" :size=\"size\" :multiple=\"multiple\" :disabled=\"disabled\" :filterable=\"filterable\" @change=\"handleChange\">\r\n      <el-option v-for=\"item in options\" :key=\"item.id\" :label=\"item.name\" :value=\"item.id\" :value-key=\"item.id\" />\r\n    </el-select>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport listAPI from '@/api/list'\r\nimport _ from 'lodash'\r\nexport default {\r\n  props: {\r\n    value: { type: [Number, String, Array], default: () => null },\r\n    field: { type: String, default: '' },\r\n    keyWords: { type: String, default: '' },\r\n    multiple: { type: Boolean, default: () => false },\r\n    placeholder: { type: String, default: '请选择' },\r\n    searchKey: { type: Object, default: () => ({}) },\r\n    regKey: { type: Object, default: () => ({}) },\r\n    sortJson: { type: Object, default: () => ({ properties: 'TheOrder', direction: 'ASC' }) },\r\n    size: { type: String, default: '' },\r\n    filterable: { type: Boolean, default: false },\r\n    autoInit: { type: Boolean, default: true },\r\n    disabled: { type: Boolean, default: false },\r\n    autoSelect: { type: Boolean, default: true },\r\n    changeLabel: { type: String, default: '' }\r\n  },\r\n  data() {\r\n    return {\r\n      options: [],\r\n      loading: false,\r\n      selectValue: this.value\r\n    }\r\n  },\r\n  computed: {\r\n    // selectValue: {\r\n    //   get: function() {\r\n    //     return this.value\r\n    //   },\r\n    //   set: function(val) {\r\n    //     //this.value = val\r\n    //   }\r\n    // }\r\n  },\r\n  watch: {\r\n    value: {\r\n      async handler(val) {\r\n        if (this.autoInit) {\r\n          if (!(this.options) || (this.options.length === 0)) {\r\n            await this.initOptions()\r\n          }\r\n        }\r\n        this.changeSelection()\r\n      },\r\n      immediate: true\r\n    },\r\n    searchKey: {\r\n      async handler(val) {\r\n        await this.initOptions()\r\n        await this.changeSelection()\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    }\r\n  },\r\n  created() {\r\n    if (this.autoInit) {\r\n      this.initOptions()\r\n    }\r\n  },\r\n  methods: {\r\n    async changeSelection(val) {\r\n      if (this.options.length === 0) {\r\n        await this.initOptions()\r\n      }\r\n      if (val != null) {\r\n        this.selectValue = val\r\n      } else if (this.value != null) {\r\n        if (this.multiple && typeof this.value === 'object') {\r\n          this.selectValue = this.value.filter(item => this.options.map(item2 => item2.id).includes(item))\r\n        } else {\r\n          if (this.options.map(item => item.id).includes(parseInt(this.value))) {\r\n            this.selectValue = parseInt(this.value)\r\n          }\r\n        }\r\n      } else {\r\n        this.selectValue = null\r\n      }\r\n    },\r\n    async initOptions() {\r\n      this.loading = true\r\n      try {\r\n        const resp = await listAPI.getSomeRecords({\r\n          keyWords: this.keyWords,\r\n          searchKey: this.searchKey,\r\n          sort: this.sortJson,\r\n          reg: this.regKey\r\n        })\r\n        this.options = _.cloneDeep(resp.data.content)\r\n        if (this.changeLabel !== '') {\r\n          this.options.forEach(item => {\r\n            this.$set(item, 'name', item[this.changeLabel])\r\n          })\r\n        }\r\n        this.$emit('init-finish', this.field, this.options)\r\n      } catch (error) {\r\n        this.loading = false\r\n      }\r\n      if (this.autoSelect) {\r\n        if (this.selectValue == null && this.options.length > 0) {\r\n          this.selectValue = this.options[0].id\r\n          this.$emit('update-value', this.selectValue, this.field, this.options.filter((value, index) => { return value.id === this.selectValue }))\r\n        }\r\n      }\r\n      this.loading = false\r\n    },\r\n    handleChange(val) {\r\n      this.$emit('update-value', val, this.field, this.options.filter((value, index) => { return value.id === val }))\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components"}]}