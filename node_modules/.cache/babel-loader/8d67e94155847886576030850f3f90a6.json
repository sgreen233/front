{"remainingRequest":"D:\\software\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\software\\front\\src\\api\\other.js","dependencies":[{"path":"D:\\software\\front\\src\\api\\other.js","mtime":1670666519093},{"path":"D:\\software\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDovc29mdHdhcmUvZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgcmVxdWVzdCBmcm9tICdAL3V0aWxzL3JlcXVlc3QnOwppbXBvcnQgeyBnZXRFbmNyeXB0S2V5V29yZCB9IGZyb20gJ0AvdXRpbHMvcnNhRW5jcnlwdCc7CmV4cG9ydCBkZWZhdWx0IHsKICBnZXRLZXk6IGdldEtleSwKICBnZXRXaG9sZUtleTogZ2V0V2hvbGVLZXksCiAgYXBwbHlVbmlBZG1pbjogYXBwbHlVbmlBZG1pbiwKICBjcmVhdGVDb250ZXN0Rm91bmRJbmZvOiBjcmVhdGVDb250ZXN0Rm91bmRJbmZvLAogIGFwcGx5UmVnaXN0ZXJUZWFtOiBhcHBseVJlZ2lzdGVyVGVhbSwKICByZWNvbW1lbmRUZWFtczogcmVjb21tZW5kVGVhbXMsCiAgYWxsb2NhdGVBbGxFeHBlcnRzOiBhbGxvY2F0ZUFsbEV4cGVydHMsCiAgY2FsY3VsYXRlQWxsQ29udGVzdFNjb3JlOiBjYWxjdWxhdGVBbGxDb250ZXN0U2NvcmUsCiAgY2FsY3VsYXRlUHJvbW90aW9uOiBjYWxjdWxhdGVQcm9tb3Rpb24sCiAgYWxsb2NhdGVBbGxFeHBlcnRzd2l0aEdyb3VwOiBhbGxvY2F0ZUFsbEV4cGVydHN3aXRoR3JvdXAsCiAgY3JlYXRlQ2VydGlmaWNhdGU6IGNyZWF0ZUNlcnRpZmljYXRlLAogIGF1dG9Jbml0VGV4dDogYXV0b0luaXRUZXh0Cn07CgpmdW5jdGlvbiBnZXRLZXkoKSB7CiAgcmV0dXJuIHJlcXVlc3QoewogICAgdXJsOiAnL2NvbW1vbi9nZXRLZXknLAogICAgbWV0aG9kOiAncG9zdCcKICB9KTsKfQoKZnVuY3Rpb24gZ2V0V2hvbGVLZXkoa2V5LCB2YWx1ZSkgewogIHZhbHVlID0gdmFsdWUgPiA5ID8gdmFsdWUgOiAnMCcgKyB2YWx1ZTsKICByZXR1cm4ga2V5ICsgdmFsdWUgKyBrZXkuc3BsaXQoJycpLnJldmVyc2UoKS5qb2luKCcnKTsKfSAvLyDmoKHnuqfnrqHnkIblkZjnlLPor7cKCgpmdW5jdGlvbiBhcHBseVVuaUFkbWluKG5vZGUpIHsKICByZXR1cm4gcmVxdWVzdCh7CiAgICB1cmw6ICcvYXBwbHkvYXBwbHlVbmlBZG1pbicsCiAgICBtZXRob2Q6ICdwb3N0JywKICAgIGRhdGE6IHsKICAgICAgbm9kZTogSlNPTi5zdHJpbmdpZnkobm9kZSkKICAgIH0KICB9KTsKfSAvLyDnq57otZvliJvlu7oKCgpmdW5jdGlvbiBjcmVhdGVDb250ZXN0Rm91bmRJbmZvKG5vZGUpIHsKICByZXR1cm4gcmVxdWVzdCh7CiAgICB1cmw6ICcvQ29udGVzdEZsb3cvY3JlYXRlRm91bmRJbmZvJywKICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgZGF0YTogewogICAgICBub2RlOiBKU09OLnN0cmluZ2lmeShub2RlKQogICAgfQogIH0pOwp9IC8vIOaKpeWQjemYn+S8jeWIm+W7ui/kv67mlLnkv53lrZgKCgpmdW5jdGlvbiBhcHBseVJlZ2lzdGVyVGVhbShub2RlKSB7CiAgcmV0dXJuIHJlcXVlc3QoewogICAgdXJsOiAnL2FwcGx5L2FwcGx5UmVnaXN0ZXJUZWFtJywKICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgZGF0YTogewogICAgICBub2RlOiBKU09OLnN0cmluZ2lmeShub2RlKQogICAgfQogIH0pOwp9IC8vIOagoei1my/liJ3otZvmjqjojZAKCgpmdW5jdGlvbiByZWNvbW1lbmRUZWFtcyh1c2VySWQsIG5vZGUpIHsKICByZXR1cm4gcmVxdWVzdCh7CiAgICB1cmw6ICcvYXBwbHkvcmVjb21tZW5kVGVhbXMnLAogICAgbWV0aG9kOiAncG9zdCcsCiAgICBkYXRhOiB7CiAgICAgIHVzZXJJZDogdXNlcklkLAogICAgICBub2RlOiBKU09OLnN0cmluZ2lmeShub2RlKQogICAgfQogIH0pOwp9IC8vIOS4k+WutuWIhumFjS/ph43mlrDliIbphY0KCgpmdW5jdGlvbiBhbGxvY2F0ZUFsbEV4cGVydHMoZXhwZXJ0cywgY29udGVzdCwgdGVhbVN0YXR1cykgewogIHJldHVybiByZXF1ZXN0KHsKICAgIHVybDogJy9Db250ZXN0Rmxvdy9hbGxvY2F0ZUFsbEV4cGVydHMnLAogICAgbWV0aG9kOiAncG9zdCcsCiAgICBkYXRhOiB7CiAgICAgIGV4cGVydHM6IGV4cGVydHMsCiAgICAgIGNvbnRlc3Q6IGNvbnRlc3QsCiAgICAgIHRlYW1TdGF0dXM6IHRlYW1TdGF0dXMKICAgIH0KICB9KTsKfSAvLyDkuJPlrrbliIbphY0v6YeN5paw5YiG6YWNCgoKZnVuY3Rpb24gYWxsb2NhdGVBbGxFeHBlcnRzd2l0aEdyb3VwKGNvbnRlc3QsIGdyb3VwcywgdGVhbVN0YXR1cykgewogIHJldHVybiByZXF1ZXN0KHsKICAgIHVybDogJy9Db250ZXN0Rmxvdy9hbGxvY2F0ZUFsbEV4cGVydHN3aXRoR3JvdXAnLAogICAgbWV0aG9kOiAncG9zdCcsCiAgICBkYXRhOiB7CiAgICAgIGNvbnRlc3Q6IGNvbnRlc3QsCiAgICAgIGdyb3VwczogZ3JvdXBzLAogICAgICB0ZWFtU3RhdHVzOiB0ZWFtU3RhdHVzCiAgICB9CiAgfSk7Cn0gLy8g6K6h566XL+mHjeeul+aAu+WIhgoKCmZ1bmN0aW9uIGNhbGN1bGF0ZUFsbENvbnRlc3RTY29yZShjb250ZXN0SW5mb0lkLCBmbG93VHlwZUlkKSB7CiAgcmV0dXJuIHJlcXVlc3QoewogICAgdXJsOiAnL0NvbnRlc3RGbG93L2NhbGN1bGF0ZUFsbENvbnRlc3RTY29yZScsCiAgICBtZXRob2Q6ICdwb3N0JywKICAgIGRhdGE6IHsKICAgICAgY29udGVzdEluZm9JZDogY29udGVzdEluZm9JZCwKICAgICAgZmxvd1R5cGVJZDogZmxvd1R5cGVJZAogICAgfQogIH0pOwp9IC8vIOiuoeeuly/ph43nrpfmmYvnuqfmg4XlhrUKCgpmdW5jdGlvbiBjYWxjdWxhdGVQcm9tb3Rpb24oZGF0YSkgewogIHJldHVybiByZXF1ZXN0KHsKICAgIHVybDogJy9Db250ZXN0Rmxvdy9jYWxjdWxhdGVQcm9tb3Rpb24nLAogICAgbWV0aG9kOiAncG9zdCcsCiAgICBkYXRhOiB7CiAgICAgIGRhdGE6IGRhdGEKICAgIH0KICB9KTsKfSAvLyDnlJ/miJDor4HkuaYKCgpmdW5jdGlvbiBjcmVhdGVDZXJ0aWZpY2F0ZShfeCkgewogIHJldHVybiBfY3JlYXRlQ2VydGlmaWNhdGUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQovKioNCiAqIOS4i+i9veS4reW/g++8jOmZhOS7tueUn+aIkOiHs+WvjOaWh+acrOahhg0KICogQHBhcmFtIHsqfSBpZCDmoI/nm67lhoXlrrlpZA0KICogQHJldHVybnMNCiAqLwoKCmZ1bmN0aW9uIF9jcmVhdGVDZXJ0aWZpY2F0ZSgpIHsKICBfY3JlYXRlQ2VydGlmaWNhdGUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoX3JlZikgewogICAgdmFyIGtleVdvcmRzLCBwYWdlSW5mbywgdHJlZUluZm8sIHNlYXJjaEtleSwgc29ydCwgcmVnLCBhbmRvcjsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAga2V5V29yZHMgPSBfcmVmLmtleVdvcmRzLCBwYWdlSW5mbyA9IF9yZWYucGFnZUluZm8sIHRyZWVJbmZvID0gX3JlZi50cmVlSW5mbywgc2VhcmNoS2V5ID0gX3JlZi5zZWFyY2hLZXksIHNvcnQgPSBfcmVmLnNvcnQsIHJlZyA9IF9yZWYucmVnLCBhbmRvciA9IF9yZWYuYW5kb3I7CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICByZXR1cm4gZ2V0RW5jcnlwdEtleVdvcmQoa2V5V29yZHMpOwoKICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAga2V5V29yZHMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBfY29udGV4dC50MCA9IHJlcXVlc3Q7CiAgICAgICAgICAgIF9jb250ZXh0LnQxID0ga2V5V29yZHM7CiAgICAgICAgICAgIF9jb250ZXh0LnQyID0gcGFnZUluZm87CiAgICAgICAgICAgIF9jb250ZXh0LnQzID0gdHJlZUluZm87CiAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxMDsKICAgICAgICAgICAgcmV0dXJuIGdldEVuY3J5cHRLZXlXb3JkKEpTT04uc3RyaW5naWZ5KHNlYXJjaEtleSkpOwoKICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgIF9jb250ZXh0LnQ0ID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQudDUgPSBzb3J0OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTQ7CiAgICAgICAgICAgIHJldHVybiBnZXRFbmNyeXB0S2V5V29yZChKU09OLnN0cmluZ2lmeShyZWcpKTsKCiAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICBfY29udGV4dC50NiA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0LnQ3ID0gYW5kb3I7CiAgICAgICAgICAgIF9jb250ZXh0LnQ4ID0gewogICAgICAgICAgICAgIGtleVdvcmRzOiBfY29udGV4dC50MSwKICAgICAgICAgICAgICBwYWdlSW5mbzogX2NvbnRleHQudDIsCiAgICAgICAgICAgICAgdHJlZUluZm86IF9jb250ZXh0LnQzLAogICAgICAgICAgICAgIHNlYXJjaEtleTogX2NvbnRleHQudDQsCiAgICAgICAgICAgICAgc29ydDogX2NvbnRleHQudDUsCiAgICAgICAgICAgICAgcmVnOiBfY29udGV4dC50NiwKICAgICAgICAgICAgICBhbmRvcjogX2NvbnRleHQudDcKICAgICAgICAgICAgfTsKICAgICAgICAgICAgX2NvbnRleHQudDkgPSB7CiAgICAgICAgICAgICAgdXJsOiAnL0NvbnRlc3RGbG93L2NyZWF0ZUNlcnRpZmljYXRlJywKICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICAgICAgICBkYXRhOiBfY29udGV4dC50OAogICAgICAgICAgICB9OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCAoMCwgX2NvbnRleHQudDApKF9jb250ZXh0LnQ5KSk7CgogICAgICAgICAgY2FzZSAxOToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlKTsKICB9KSk7CiAgcmV0dXJuIF9jcmVhdGVDZXJ0aWZpY2F0ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBhdXRvSW5pdFRleHQoaWQpIHsKICByZXR1cm4gcmVxdWVzdCh7CiAgICB1cmw6ICcvY2hhbm5lbC9hdXRvLWluaXQtdGV4dCcsCiAgICBtZXRob2Q6ICdwb3N0JywKICAgIGRhdGE6IHsKICAgICAgaWQ6IGlkCiAgICB9CiAgfSk7Cn0="},{"version":3,"sources":["D:/software/front/src/api/other.js"],"names":["request","getEncryptKeyWord","getKey","getWholeKey","applyUniAdmin","createContestFoundInfo","applyRegisterTeam","recommendTeams","allocateAllExperts","calculateAllContestScore","calculatePromotion","allocateAllExpertswithGroup","createCertificate","autoInitText","url","method","key","value","split","reverse","join","node","data","JSON","stringify","userId","experts","contest","teamStatus","groups","contestInfoId","flowTypeId","keyWords","pageInfo","treeInfo","searchKey","sort","reg","andor","id"],"mappings":"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","sourcesContent":["import request from '@/utils/request'\r\nimport { getEncryptKeyWord } from '@/utils/rsaEncrypt'\r\n\r\nexport default {\r\n  getKey,\r\n  getWholeKey,\r\n  applyUniAdmin,\r\n  createContestFoundInfo,\r\n  applyRegisterTeam,\r\n  recommendTeams,\r\n  allocateAllExperts,\r\n  calculateAllContestScore,\r\n  calculatePromotion,\r\n  allocateAllExpertswithGroup,\r\n  createCertificate,\r\n  autoInitText\r\n}\r\n\r\nfunction getKey() {\r\n  return request({\r\n    url: '/common/getKey',\r\n    method: 'post'\r\n  })\r\n}\r\n\r\nfunction getWholeKey(key, value) {\r\n  value = value > 9 ? value : '0' + value\r\n  return key + value + key.split('').reverse().join('')\r\n}\r\n\r\n// 校级管理员申请\r\nfunction applyUniAdmin(node) {\r\n  return request({\r\n    url: '/apply/applyUniAdmin',\r\n    method: 'post',\r\n    data: {\r\n      node: JSON.stringify(node)\r\n    }\r\n  })\r\n}\r\n\r\n// 竞赛创建\r\nfunction createContestFoundInfo(node) {\r\n  return request({\r\n    url: '/ContestFlow/createFoundInfo',\r\n    method: 'post',\r\n    data: {\r\n      node: JSON.stringify(node)\r\n    }\r\n  })\r\n}\r\n// 报名队伍创建/修改保存\r\nfunction applyRegisterTeam(node) {\r\n  return request({\r\n    url: '/apply/applyRegisterTeam',\r\n    method: 'post',\r\n    data: {\r\n      node: JSON.stringify(node)\r\n    }\r\n  })\r\n}\r\n// 校赛/初赛推荐\r\nfunction recommendTeams(userId, node) {\r\n  return request({\r\n    url: '/apply/recommendTeams',\r\n    method: 'post',\r\n    data: {\r\n      userId: userId,\r\n      node: JSON.stringify(node)\r\n    }\r\n  })\r\n}\r\n// 专家分配/重新分配\r\nfunction allocateAllExperts(experts, contest, teamStatus) {\r\n  return request({\r\n    url: '/ContestFlow/allocateAllExperts',\r\n    method: 'post',\r\n    data: {\r\n      experts: experts,\r\n      contest: contest,\r\n      teamStatus: teamStatus\r\n    }\r\n  })\r\n}\r\n\r\n// 专家分配/重新分配\r\nfunction allocateAllExpertswithGroup(contest, groups, teamStatus) {\r\n  return request({\r\n    url: '/ContestFlow/allocateAllExpertswithGroup',\r\n    method: 'post',\r\n    data: {\r\n      contest: contest,\r\n      groups: groups,\r\n      teamStatus: teamStatus\r\n    }\r\n  })\r\n}\r\n\r\n// 计算/重算总分\r\nfunction calculateAllContestScore(contestInfoId, flowTypeId) {\r\n  return request({\r\n    url: '/ContestFlow/calculateAllContestScore',\r\n    method: 'post',\r\n    data: { contestInfoId, flowTypeId }\r\n  })\r\n}\r\n\r\n// 计算/重算晋级情况\r\nfunction calculatePromotion(data) {\r\n  return request({\r\n    url: '/ContestFlow/calculatePromotion',\r\n    method: 'post',\r\n    data: { data }\r\n  })\r\n}\r\n\r\n// 生成证书\r\nasync function createCertificate({ keyWords, pageInfo, treeInfo, searchKey, sort, reg, andor }) {\r\n  keyWords = await getEncryptKeyWord(keyWords)\r\n  return request({\r\n    url: '/ContestFlow/createCertificate',\r\n    method: 'post',\r\n    data: {\r\n      keyWords,\r\n      pageInfo,\r\n      treeInfo,\r\n      searchKey: await getEncryptKeyWord(JSON.stringify(searchKey)),\r\n      sort,\r\n      reg: await getEncryptKeyWord(JSON.stringify(reg)),\r\n      andor\r\n    }\r\n  })\r\n}\r\n/**\r\n * 下载中心，附件生成至富文本框\r\n * @param {*} id 栏目内容id\r\n * @returns\r\n */\r\nfunction autoInitText(id) {\r\n  return request({\r\n    url: '/channel/auto-init-text',\r\n    method: 'post',\r\n    data: { id }\r\n  })\r\n}\r\n"]}]}