{"remainingRequest":"D:\\software\\front\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\software\\front\\front\\src\\api\\list.js","dependencies":[{"path":"D:\\software\\front\\front\\src\\api\\list.js","mtime":1715830117996},{"path":"D:\\software\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715830111371},{"path":"D:\\software\\front\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1715830110683}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L3NvZnR3YXJlL2Zyb250L2Zyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHJlcXVlc3QgZnJvbSAnQC91dGlscy9yZXF1ZXN0JzsKaW1wb3J0IHsgZ2V0RW5jcnlwdEtleVdvcmQgfSBmcm9tICdAL3V0aWxzL3JzYUVuY3J5cHQnOwppbXBvcnQgY29uc3RhbnQgZnJvbSAnQC9jb25zdGFudCc7CmV4cG9ydCBkZWZhdWx0IHsKICBlZGl0T25lTm9kZTogZWRpdE9uZU5vZGUsCiAgZGVsT25lT3JNYW55Tm9kZXM6IGRlbE9uZU9yTWFueU5vZGVzLAogIGNoYW5nZU5vZGVPcmRlcjogY2hhbmdlTm9kZU9yZGVyLAogIGdldFNvbWVSZWNvcmRzOiBnZXRTb21lUmVjb3Jkcwp9OyAvLyDliJfooajnu5PmnoTnmoTmlrDlop4v57yW6L6RCgpmdW5jdGlvbiBlZGl0T25lTm9kZShfeCwgX3gyKSB7CiAgcmV0dXJuIF9lZGl0T25lTm9kZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9IC8vIOWIoOmZpOS4gOS4quaIluiAheWkmuS4quiKgueCuQoKCmZ1bmN0aW9uIF9lZGl0T25lTm9kZSgpIHsKICBfZWRpdE9uZU5vZGUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoa2V5V29yZHMsIG5vZGUpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgIHJldHVybiBnZXRFbmNyeXB0S2V5V29yZChrZXlXb3Jkcyk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBrZXlXb3JkcyA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoInJldHVybiIsIHJlcXVlc3QoewogICAgICAgICAgICAgIHVybDogJy9kYXRhTGlzdC9lZGl0T25lTm9kZScsCiAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgICAga2V5V29yZHM6IGtleVdvcmRzLAogICAgICAgICAgICAgICAgbm9kZTogSlNPTi5zdHJpbmdpZnkobm9kZSkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwogIHJldHVybiBfZWRpdE9uZU5vZGUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gZGVsT25lT3JNYW55Tm9kZXMoX3gzLCBfeDQpIHsKICByZXR1cm4gX2RlbE9uZU9yTWFueU5vZGVzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0gLy8g5YiX6KGo57uT5p6E55qE6IqC54K55LiK5LiL56e7CgoKZnVuY3Rpb24gX2RlbE9uZU9yTWFueU5vZGVzKCkgewogIF9kZWxPbmVPck1hbnlOb2RlcyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoa2V5V29yZHMsIGlkcykgewogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gZ2V0RW5jcnlwdEtleVdvcmQoa2V5V29yZHMpOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAga2V5V29yZHMgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQyLnQwID0gcmVxdWVzdDsKICAgICAgICAgICAgX2NvbnRleHQyLnQxID0ga2V5V29yZHM7CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gNzsKICAgICAgICAgICAgcmV0dXJuIGdldEVuY3J5cHRLZXlXb3JkKGlkcy5qb2luKGNvbnN0YW50LlNQTElUX09QRVJBVE9SLkNPTU1BKSk7CgogICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICBfY29udGV4dDIudDIgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQyLnQzID0gewogICAgICAgICAgICAgIGtleVdvcmRzOiBfY29udGV4dDIudDEsCiAgICAgICAgICAgICAgaWRzOiBfY29udGV4dDIudDIKICAgICAgICAgICAgfTsKICAgICAgICAgICAgX2NvbnRleHQyLnQ0ID0gewogICAgICAgICAgICAgIHVybDogJy9kYXRhTGlzdC9kZWxPbmVPck1hbnlOb2RlcycsCiAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgICAgICAgZGF0YTogX2NvbnRleHQyLnQzCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCAoMCwgX2NvbnRleHQyLnQwKShfY29udGV4dDIudDQpKTsKCiAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMik7CiAgfSkpOwogIHJldHVybiBfZGVsT25lT3JNYW55Tm9kZXMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gY2hhbmdlTm9kZU9yZGVyKF94NSwgX3g2LCBfeDcsIF94OCwgX3g5KSB7CiAgcmV0dXJuIF9jaGFuZ2VOb2RlT3JkZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfSAvLyDliJfooajnu5PmnoTnmoTmn6Xor6IKCgpmdW5jdGlvbiBfY2hhbmdlTm9kZU9yZGVyKCkgewogIF9jaGFuZ2VOb2RlT3JkZXIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGtleVdvcmRzLCBub2RlSWQsIHVwLCBtb3ZlU2VhcmNoS2V5cywgbW92ZVJlZ0tleXMpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIGdldEVuY3J5cHRLZXlXb3JkKGtleVdvcmRzKTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGtleVdvcmRzID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuYWJydXB0KCJyZXR1cm4iLCByZXF1ZXN0KHsKICAgICAgICAgICAgICB1cmw6ICcvZGF0YUxpc3QvY2hhbmdlTm9kZU9yZGVyJywKICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgICBrZXlXb3Jkczoga2V5V29yZHMsCiAgICAgICAgICAgICAgICBub2RlSWQ6IG5vZGVJZCwKICAgICAgICAgICAgICAgIHVwOiB1cCwKICAgICAgICAgICAgICAgIG1vdmVTZWFyY2hLZXlzOiBtb3ZlU2VhcmNoS2V5cywKICAgICAgICAgICAgICAgIG1vdmVSZWdLZXlzOiBtb3ZlUmVnS2V5cwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkpOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTMpOwogIH0pKTsKICByZXR1cm4gX2NoYW5nZU5vZGVPcmRlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBnZXRTb21lUmVjb3JkcyhfeDEwKSB7CiAgcmV0dXJuIF9nZXRTb21lUmVjb3Jkcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBfZ2V0U29tZVJlY29yZHMoKSB7CiAgX2dldFNvbWVSZWNvcmRzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNChfcmVmKSB7CiAgICB2YXIga2V5V29yZHMsIHBhZ2VJbmZvLCB0cmVlSW5mbywgc2VhcmNoS2V5LCBzb3J0LCByZWcsIGFuZG9yOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU0JChfY29udGV4dDQpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAga2V5V29yZHMgPSBfcmVmLmtleVdvcmRzLCBwYWdlSW5mbyA9IF9yZWYucGFnZUluZm8sIHRyZWVJbmZvID0gX3JlZi50cmVlSW5mbywgc2VhcmNoS2V5ID0gX3JlZi5zZWFyY2hLZXksIHNvcnQgPSBfcmVmLnNvcnQsIHJlZyA9IF9yZWYucmVnLCBhbmRvciA9IF9yZWYuYW5kb3I7CiAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGdldEVuY3J5cHRLZXlXb3JkKGtleVdvcmRzKTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGtleVdvcmRzID0gX2NvbnRleHQ0LnNlbnQ7CiAgICAgICAgICAgIF9jb250ZXh0NC50MCA9IHJlcXVlc3Q7CiAgICAgICAgICAgIF9jb250ZXh0NC50MSA9IGtleVdvcmRzOwogICAgICAgICAgICBfY29udGV4dDQudDIgPSBwYWdlSW5mbzsKICAgICAgICAgICAgX2NvbnRleHQ0LnQzID0gdHJlZUluZm87CiAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTA7CiAgICAgICAgICAgIHJldHVybiBnZXRFbmNyeXB0S2V5V29yZChKU09OLnN0cmluZ2lmeShzZWFyY2hLZXkpKTsKCiAgICAgICAgICBjYXNlIDEwOgogICAgICAgICAgICBfY29udGV4dDQudDQgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgX2NvbnRleHQ0LnQ1ID0gc29ydDsKICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSAxNDsKICAgICAgICAgICAgcmV0dXJuIGdldEVuY3J5cHRLZXlXb3JkKEpTT04uc3RyaW5naWZ5KHJlZykpOwoKICAgICAgICAgIGNhc2UgMTQ6CiAgICAgICAgICAgIF9jb250ZXh0NC50NiA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICBfY29udGV4dDQudDcgPSBhbmRvcjsKICAgICAgICAgICAgX2NvbnRleHQ0LnQ4ID0gewogICAgICAgICAgICAgIGtleVdvcmRzOiBfY29udGV4dDQudDEsCiAgICAgICAgICAgICAgcGFnZUluZm86IF9jb250ZXh0NC50MiwKICAgICAgICAgICAgICB0cmVlSW5mbzogX2NvbnRleHQ0LnQzLAogICAgICAgICAgICAgIHNlYXJjaEtleTogX2NvbnRleHQ0LnQ0LAogICAgICAgICAgICAgIHNvcnQ6IF9jb250ZXh0NC50NSwKICAgICAgICAgICAgICByZWc6IF9jb250ZXh0NC50NiwKICAgICAgICAgICAgICBhbmRvcjogX2NvbnRleHQ0LnQ3CiAgICAgICAgICAgIH07CiAgICAgICAgICAgIF9jb250ZXh0NC50OSA9IHsKICAgICAgICAgICAgICB1cmw6ICcvZGF0YUxpc3QvZ2V0U29tZVJlY29yZHMnLAogICAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICAgICAgICAgIGRhdGE6IF9jb250ZXh0NC50OAogICAgICAgICAgICB9OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgKDAsIF9jb250ZXh0NC50MCkoX2NvbnRleHQ0LnQ5KSk7CgogICAgICAgICAgY2FzZSAxOToKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTQpOwogIH0pKTsKICByZXR1cm4gX2dldFNvbWVSZWNvcmRzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0="},{"version":3,"sources":["D:/software/front/front/src/api/list.js"],"names":["request","getEncryptKeyWord","constant","editOneNode","delOneOrManyNodes","changeNodeOrder","getSomeRecords","keyWords","node","url","method","data","JSON","stringify","ids","join","SPLIT_OPERATOR","COMMA","nodeId","up","moveSearchKeys","moveRegKeys","pageInfo","treeInfo","searchKey","sort","reg","andor"],"mappings":"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","sourcesContent":["import request from '@/utils/request'\r\nimport { getEncryptKeyWord } from '@/utils/rsaEncrypt'\r\nimport constant from '@/constant'\r\n\r\nexport default {\r\n  editOneNode,\r\n  delOneOrManyNodes,\r\n  changeNodeOrder,\r\n  getSomeRecords\r\n}\r\n\r\n// 列表结构的新增/编辑\r\nasync function editOneNode(keyWords, node) {\r\n  keyWords = await getEncryptKeyWord(keyWords)\r\n  return request({\r\n    url: '/dataList/editOneNode',\r\n    method: 'post',\r\n    data: {\r\n      keyWords: keyWords,\r\n      node: JSON.stringify(node)\r\n    }\r\n  })\r\n}\r\n// 删除一个或者多个节点\r\nasync function delOneOrManyNodes(keyWords, ids) {\r\n  keyWords = await getEncryptKeyWord(keyWords)\r\n  return request({\r\n    url: '/dataList/delOneOrManyNodes',\r\n    method: 'post',\r\n    data: {\r\n      keyWords: keyWords,\r\n      ids: await getEncryptKeyWord(ids.join(constant.SPLIT_OPERATOR.COMMA))\r\n    }\r\n  })\r\n}\r\n// 列表结构的节点上下移\r\nasync function changeNodeOrder(keyWords, nodeId, up, moveSearchKeys, moveRegKeys) {\r\n  keyWords = await getEncryptKeyWord(keyWords)\r\n  return request({\r\n    url: '/dataList/changeNodeOrder',\r\n    method: 'post',\r\n    data: {\r\n      keyWords: keyWords,\r\n      nodeId: nodeId,\r\n      up: up,\r\n      moveSearchKeys: moveSearchKeys,\r\n      moveRegKeys: moveRegKeys\r\n    }\r\n  })\r\n}\r\n\r\n// 列表结构的查询\r\nasync function getSomeRecords({ keyWords, pageInfo, treeInfo, searchKey, sort, reg, andor }) {\r\n  keyWords = await getEncryptKeyWord(keyWords)\r\n  return request({\r\n    url: '/dataList/getSomeRecords',\r\n    method: 'post',\r\n    data: {\r\n      keyWords,\r\n      pageInfo,\r\n      treeInfo,\r\n      searchKey: await getEncryptKeyWord(JSON.stringify(searchKey)),\r\n      sort,\r\n      reg: await getEncryptKeyWord(JSON.stringify(reg)),\r\n      andor\r\n    }\r\n  })\r\n}\r\n"]}]}