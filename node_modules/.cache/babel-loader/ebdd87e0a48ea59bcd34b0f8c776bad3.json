{"remainingRequest":"D:\\software\\front\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\software\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\software\\front\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\front\\front\\src\\components\\SimpleDialog.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software\\front\\front\\src\\components\\SimpleDialog.vue","mtime":1715830118031},{"path":"D:\\software\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715830111371},{"path":"D:\\software\\front\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1715830110683},{"path":"D:\\software\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715830111371},{"path":"D:\\software\\front\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1715830117510}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SimpleDialog.vue"],"names":[],"mappings":"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","sourcesContent":["  <!-- 表单项，通过传入的 formItems 循环生成表单 -->\r\n  <!-- 基础入参包括：\r\n    ① *name:表单项展示名称 String\r\n    ② *field:后端所需入参(绑定值) String\r\n    ③ *type:表单种类 String\r\n    ④ options:各种子类选项 Array\r\n    ⑤ keyWords:获取下拉选项\r\n    ⑥ selectLabel:下拉框的回显字段（针对下拉框编辑时的回显）\r\n    ⑦ multiple:是否开启多选（针对下拉框）\r\n  -->\r\n<template>\r\n  <DlgBasic ref=\"dlgBasic\" :default-props.sync=\"defaultProps.defaultDBProps\" :dlgbasic-confirm=\"confirm\" :dlgbasic-submit=\"submit\" :dlgbasic-spec-confirm=\"specConfirm\" @close-dialog=\"onCloseDialog\" @open-dialog=\"openDialog\">\r\n    <template slot=\"mainForm\">\r\n      <el-form ref=\"formPanel\" :rules=\"formRules\" :model=\"form\" label-suffix=\":\" :label-width=\"labelWidth\">\r\n        <slot name=\"upItems\" />\r\n        <div v-for=\"(item, index) in formItems\" :key=\"index\">\r\n          <el-form-item v-if=\"item.type!=='textarea'\" :prop=\"item.field\" :label=\"item.name\">\r\n            <!-- 简单显示 -->\r\n            <div v-if=\"item.type==='label'\"><span v-html=\"form[item.field]\" /></div>\r\n            <!-- 双列简单显示 -->\r\n            <el-row v-else-if=\"item.type==='doubleLabel'\">\r\n              <el-col :span=\"11\">\r\n                <el-form-item :prop=\"item.field1\" :label=\"item.name1\"><span v-html=\"form[item.field1]\" /></el-form-item>\r\n              </el-col>\r\n              <el-col :span=\"2\" style=\"text-align:center\">-</el-col>\r\n              <el-col :span=\"11\">\r\n                <el-form-item :prop=\"item.field2\" :label=\"item.name2\"><span v-html=\"form[item.field2]\" /></el-form-item>\r\n              </el-col>\r\n            </el-row>\r\n            <!-- 密码框 -->\r\n            <password v-else-if=\"item.type==='password'\" v-model=\"form[item.field]\" :placeholder=\"item.placeholder?item.placeholder:'请输入'\" @input=\"resetPass\" />\r\n            <!-- <el-input v-else-if=\"item.type==='password'\" type=\"password\" v-model=\"form[item.field]\" :placeholder=\"item.placeholder?item.placeholder:'请输入'\" :disabled=\"item.disabled\" /> -->\r\n            <!-- 开关 -->\r\n            <el-switch v-else-if=\"item.type==='switch'\" v-model=\"form[item.field]\" />\r\n            <!-- 单选 -->\r\n            <el-radio-group v-else-if=\"item.type==='radio'\" v-model=\"form[item.field]\">\r\n              <el-radio v-for=\"(citem,cindex) in item.options\" :key=\"cindex+'A'\" :label=\"citem.id\">{{ citem.value }}</el-radio>\r\n            </el-radio-group>\r\n            <!-- 多选 -->\r\n            <el-checkbox-group v-else-if=\"item.type==='checkbox'\" v-model=\"form[item.field]\">\r\n              <el-checkbox v-for=\"(citem, cindex) in item.options\" :key=\"cindex+'B'\" :label=\"citem.id\">{{ citem.value }}</el-checkbox>\r\n            </el-checkbox-group>\r\n            <!-- 普通输入框 -->\r\n            <el-input v-else-if=\"item.type==='input'\" v-model=\"form[item.field]\" :maxlength=\"CONSTANT.INFO_MAX_LENGTH\" :placeholder=\"item.placeholder?item.placeholder:'请输入'\" :disabled=\"item.disabled\" />\r\n            <!-- 双列普通输入框 -->\r\n            <el-row v-else-if=\"item.type==='doubleinput'\">\r\n              <el-col :span=\"11\">\r\n                <el-form-item :prop=\"item.field1\">\r\n                  <el-input v-model=\"form[item.field1]\" :placeholder=\"item.placeholder1\" />\r\n                </el-form-item>\r\n              </el-col>\r\n              <el-col :span=\"2\" style=\"text-align:center\">-</el-col>\r\n              <el-col :span=\"11\">\r\n                <el-form-item :prop=\"item.field2\">\r\n                  <el-input v-model=\"form[item.field2]\" :placeholder=\"item.placeholder2\" />\r\n                </el-form-item>\r\n              </el-col>\r\n            </el-row>\r\n            <!-- 三列普通输入框 -->\r\n            <el-row v-else-if=\"item.type==='tripleinput'\">\r\n              <el-col :span=\"7\">\r\n                <el-form-item :prop=\"item.field1\">\r\n                  <el-input v-model=\"form[item.field1]\" :placeholder=\"item.placeholder1\" />\r\n                </el-form-item>\r\n              </el-col>\r\n              <el-col :span=\"2\" style=\"text-align:center\">-</el-col>\r\n              <el-col :span=\"7\">\r\n                <el-form-item :prop=\"item.field2\">\r\n                  <el-input v-model=\"form[item.field2]\" :placeholder=\"item.placeholder2\" />\r\n                </el-form-item>\r\n              </el-col>\r\n              <el-col :span=\"2\" style=\"text-align:center\">-</el-col>\r\n              <el-col :span=\"6\">\r\n                <el-form-item :prop=\"item.field3\">\r\n                  <el-input v-model=\"form[item.field3]\" :placeholder=\"item.placeholder3\" />\r\n                </el-form-item>\r\n              </el-col>\r\n            </el-row>\r\n            <!-- 单列时间日期框 -->\r\n            <el-date-picker v-else-if=\"item.type==='date'\" v-model=\"form[item.field]\" type=\"datetime\" placeholder=\"选择日期时间\" />\r\n            <!-- 简单下拉选择框 -->\r\n            <el-select v-else-if=\"item.type==='select_noremote'\" v-model=\"form[item.field]\" placeholder=\"请选择\">\r\n              <el-option v-for=\"(sitem,sindex) in item.options\" :key=\"sindex\" :label=\"sitem.name\" :value=\"sitem.id\" />\r\n            </el-select>\r\n            <!-- 关联数据选择框 -->\r\n            <SimpleSelect v-else-if=\"item.type==='select'\" :ref=\"'smpSel'+item.field\" v-model=\"form[item.field]\" :field=\"item.field\" :select-label=\"item.selectLabel\" :multiple=\"item.multiple\" :form.sync=\"form\" :key-words=\"item.keyWords\" :search-key=\"form[item.searchKeys]\" :reg-key=\"item.regKey\" :disabled=\"item.disabled\" :placeholder=\"item.placeholder?item.placeholder:'请选择'\" :auto-select=\"item.autoSelect\" @update-value=\"onSimpleSelectChange\" @init-finish=\"simpleSelectInitFinish\" />\r\n            <!-- 级联选择框 -->\r\n            <SimpleTreeSelect v-else-if=\"item.type==='cascader'\" v-model=\"form[item.field]\" :field=\"item.field\" :key-words=\"item.keyWords\" :disabled=\"item.disabled\" :check-strictly=\"item.checkStrictly\" :search-keys=\"item.searchKeys\" @update-value=\"onTreeSelectChange\" />\r\n            <!-- 文件上传框 -->\r\n            <SimpleUpload v-else-if=\"item.type==='uploadFile'\" v-model=\"form[item.field]\" :field=\"item.field\" :up-button-info=\"item.upButtonInfo\" :file-max-size=\"item.fileMaxSize\" :file-allowed-types=\"item.fileAllowedTypes\" :multiple=\"item.allowMultiFiles\" :allow-multi-files=\"item.allowMultiFiles\" />\r\n            <!-- 文件下载链接 -->\r\n            <el-button v-else-if=\"item.type==='downloadFile'\" type=\"text\" @click=\"downloadLinkClick(form[item.ossFileId], form[item.fileName])\">{{ form[item.fileName] }}</el-button>\r\n            <!-- 上传--卡片类型 -->\r\n            <el-upload-self v-else-if=\"item.type==='upload-card'\" v-model=\"fileList\" :limit=\"1\" show-limit list-type=\"picture-card\" :file-types=\"item.fileTypes&&item.fileTypes.length?item.fileTypes:fileTypes\" @beforeUpload=\"beforeUpload\" @filesRemove=\"remove\" />\r\n            <!-- 图标选择 -->\r\n            <el-popover v-else-if=\"item.type==='icon'\" placement=\"bottom-start\" width=\"358\" trigger=\"click\">\r\n              <!-- @show=\"resetSelected\" -->\r\n              <IconSelect ref=\"iconSelect\" @selected=\"selected\" />\r\n              <el-input slot=\"reference\" v-model=\"form.icon\" placeholder=\"点击选择图标\" readonly>\r\n                <svg-icon v-if=\"form.icon\" slot=\"prefix\" :icon-class=\"form.icon\" class=\"el-input__icon\" />\r\n                <i v-else slot=\"prefix\" class=\"el-icon-search el-input__icon\" />\r\n              </el-input>\r\n            </el-popover>\r\n          </el-form-item>\r\n        </div>\r\n        <!-- 其他特殊项 -->\r\n        <slot name=\"otherItems\" />\r\n        <div v-for=\"(item, index) in formItems\" :key=\"'area'+index\">\r\n          <el-form-item v-if=\"item.type==='textarea'\" :prop=\"item.field\" :label=\"item.name\">\r\n            <!-- 文本域输入框，始终出现在最下面 -->\r\n            <el-input v-if=\"item.type==='textarea'\" v-model=\"form[item.field]\" type=\"textarea\" :placeholder=\"item.placeholder||'写点什么...'\" :rows=\"3\" />\r\n          </el-form-item>\r\n        </div>\r\n        <slot name=\"bottomItems\" />\r\n      </el-form>\r\n    </template>\r\n  </DlgBasic>\r\n</template>\r\n\r\n<script>\r\nimport _ from 'lodash'\r\nimport DlgBasic from '@/components/DlgBasic'\r\nimport SimpleSelect from '@/components/SimpleSelect'\r\nimport ElUploadSelf from '@/components/ElUploadSelf'\r\nimport dlgAPI from '@/utils/forDialog'\r\nimport SimpleTreeSelect from '@/components/SimpleTreeSelect'\r\nimport Password from '@/components/Password'\r\nimport IconSelect from '@/components/icon-select/Index'\r\nimport SimpleUpload from '@/components/SimpleUpload'\r\nimport { resetForm } from '@/utils/common'\r\nimport fileAPI from '@/api/file.js'\r\nimport userAPI from '@/api/user'\r\nimport CONSTANT from '@/constant'\r\nexport default {\r\n  name: 'SimpleDialog',\r\n  components: { DlgBasic, SimpleSelect, ElUploadSelf, SimpleTreeSelect, Password, IconSelect, SimpleUpload },\r\n  props: {\r\n    defaultProps: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          labelWidth: '',\r\n          keyWord: ' ',\r\n          isAudit: false,\r\n          autoSaveClose: true, // 是否根据当前form变化状态自动关闭窗口，如果存储涉及多表需要多次保存，则将其设为false\r\n          formItems: [],\r\n          formRules: {},\r\n          defaultDBProps: {\r\n            footButtons: { }\r\n          }\r\n        }\r\n      }\r\n\r\n    },\r\n    simpledialogSpecConfirm: { type: Function, default: null },\r\n    simpledialogConfirm: { type: Function, default: null },\r\n    simpledialogConfirmMore: { type: Function, default: null },\r\n    simpledialogSubmit: { type: Function, default: null }\r\n  },\r\n  data() {\r\n    return {\r\n      // options: [],\r\n      // fileTypes: ['jpg', 'jpeg', 'png', 'JPG', 'JPEG', 'PNG'],\r\n      // fileList: []\r\n      form: {},\r\n      keyWord: this.defaultProps.keyWord, // keyWord必传并且不会改变\r\n      thisEvents: '',\r\n      footButtons: {}\r\n    }\r\n  },\r\n  computed: {\r\n    labelWidth() {\r\n      return this.defaultProps.labelWidth ? this.defaultProps.labelWidth : '100px'\r\n    },\r\n    isAudit() {\r\n      if (Object.prototype.hasOwnProperty.call(this.defaultProps, 'isAudit')) {\r\n        return this.defaultProps.isAudit\r\n      }\r\n      return false\r\n    },\r\n    autoSaveClose() {\r\n      if (Object.prototype.hasOwnProperty.call(this.defaultProps, 'autoSaveClose')) {\r\n        return this.defaultProps.autoSaveClose\r\n      }\r\n      return true\r\n    },\r\n    formItems() {\r\n      return this.defaultProps.formItems ? this.defaultProps.formItems : [\r\n        { name: '编码', field: 'code', type: 'input' },\r\n        { name: '名称', field: 'name', type: 'input' },\r\n        { name: '备注', field: 'remarks', type: 'textarea' }\r\n      ]\r\n    },\r\n    formRules() {\r\n      return this.defaultProps.formRules ? this.defaultProps.formRules : { name: [{ required: true, message: '名称不能为空', trigger: 'blur' }] }\r\n    }\r\n  },\r\n  watch: {\r\n    form: {\r\n      handler(val, oldVal) {\r\n        this.verifyValid()\r\n      },\r\n      deep: true\r\n    }\r\n  },\r\n  created() {\r\n    // this.footButtons = this.defaultProps.defaultDBProps.footButtons\r\n  },\r\n  mounted() {\r\n    this.thisEvents = JSON.parse(JSON.stringify(this._events))\r\n  },\r\n  methods: {\r\n    showDialog(val, form = { }, bind = false) {      \r\n      if (form !== null) {\r\n        if (bind) {\r\n          this.form = form\r\n        } else {\r\n          this.form = _.cloneDeep(form)\r\n        }\r\n      }\r\n      this.$refs.dlgBasic.showDialog(val, this.form)\r\n      setTimeout(() => { this.$refs.formPanel.clearValidate() }, 100)\r\n    },\r\n    // 窗口打开\r\n    async openDialog(row) {\r\n      this.$emit('open-dialog', row)\r\n    },\r\n    async resetPass(password) {\r\n      const phone = this.form.phone\r\n      try {\r\n        await userAPI.editPassword({ phone: phone, verCode: '1980', password: password })\r\n        this.$message.success('重置完毕')\r\n      } catch (error) {\r\n        error()\r\n      }\r\n    },\r\n    verifyValid() {\r\n      this.$nextTick(() => {\r\n        this.$refs.formPanel.validate((valid) => {\r\n          this.$refs.dlgBasic.validate = !valid\r\n        })\r\n      })\r\n    },\r\n    // #region 点击确认按钮，\r\n    // 1, 如果不想执行数据是否修改判断，直接外层spec-confirm; 2, 如果执行数据修改判断后再特殊操作，外层on-confirm；3，如果执行通用保存后外层再有操作，外层执行confirm-more\r\n    async _confirm(option, type, form = null) {\r\n      if (form != null) {\r\n        this.form = { ...form }\r\n      }\r\n      // isTree 是否为树结构\r\n      var parentId = null\r\n      var allNodeNames = null\r\n      const isTree = this.form.parentId >= -1\r\n      if (isTree) {\r\n        parentId = this.form.parentId\r\n        allNodeNames = this.form ? this.form.allNodeNames : '全部'\r\n      }\r\n      const userId = this.$store.getters.userInfo.id\r\n      var res = await dlgAPI.commonSubmitDlg(this.$refs.formPanel, this.form, this.keyWord, option, isTree, this.isAudit, userId)\r\n      if (res.message === 'successful') {\r\n        if (this.simpledialogConfirmMore && typeof this.simpledialogConfirmMore === 'function') {\r\n          await this.simpledialogConfirmMore(res.data)\r\n        }\r\n        if (type === 'continue') {\r\n          this.$refs.formPanel.resetFields()\r\n          this.form = resetForm(this.form)\r\n          if (parentId) {\r\n            this.form.allNodeNames = allNodeNames\r\n            this.form.parentId = parentId\r\n            this.form.isLeaf = true\r\n            this.form.childNum = 0\r\n          }\r\n        // } else {\r\n        //   if (this.autoSaveClose) {\r\n        //     this.$refs.dlgBasic.showDialog(false, this.form)\r\n        //   }\r\n        }\r\n      }\r\n    },\r\n    async confirm(option, type) {\r\n      if (!(this.simpledialogConfirm && typeof this.simpledialogConfirm === 'function')) {\r\n        await this._confirm(option, type)\r\n      } else {\r\n        await this.simpledialogConfirm(option, type, this.form)\r\n      }\r\n    },\r\n    async specConfirm(option, type) {\r\n      if (!(this.simpledialogSpecConfirm && typeof this.simpledialogSpecConfirm === 'function')) {\r\n        await this.$refs.dlgBasic._onConfirm()\r\n      } else {\r\n        await this.simpledialogSpecConfirm(option, type, this.form)\r\n      }\r\n    },\r\n    // #endregion\r\n\r\n    async onCloseDialog(saveType) {\r\n      if (saveType === true) {\r\n        this.$emit('update-record', this.form)\r\n      }\r\n      this.$emit('close-dialog')\r\n    },\r\n    // 获取子组件 SimpleSelect 传递的值\r\n    recieve(val, field) {\r\n      // this.form[field] = val\r\n    },\r\n    remove() {\r\n      if (this.fileList[0].id) {\r\n        this.delId = [this.fileList[0].id]\r\n      }\r\n      this.fileList = []\r\n    },\r\n\r\n    async submit() {\r\n      if (!(this.simpledialogSubmit && typeof this.simpledialogSubmit === 'function')) {\r\n        this.$set(this.form, 'isAudit', CONSTANT.AUDIT_STATUS.SUBMIT)\r\n        await this._onConfirm('submit', 'stop')\r\n      } else {\r\n        await this.simpledialogSubmit(this.form)\r\n      }\r\n    },\r\n    beforeUpload(file) {\r\n      const isLt5M = file.size / 1024 / 1024 < 5\r\n      if (!isLt5M) {\r\n        this.$message.error('上传文件大小不能超过 5MB!')\r\n      }\r\n      return isLt5M\r\n    },\r\n    // 选中图标\r\n    selected(name) {\r\n      this.form.icon = name\r\n    },\r\n    // resetSelected() {\r\n    //   this.$refs.iconSelect.reset()\r\n    // },\r\n    onSimpleSelectChange(val, field, options) {\r\n      this.$set(this.form, field, val)\r\n      this.$emit('simple-select-change', val, field, this.form, options)\r\n    },\r\n    simpleSelectInitFinish(field, options) {\r\n      this.$emit('simple-select-init-finish', field, options)\r\n    },\r\n    onTreeSelectChange(val, field) {\r\n      this.$set(this.form, field, val)\r\n      this.$emit('tree-select-change', val, field, this.form)\r\n    },\r\n\r\n    // reCloneOldData() {\r\n    //   this.$refs.dlgBasic.cloneOldData()\r\n    // },\r\n    async downloadLinkClick(id, fileName) {\r\n      var content = await fileAPI.downloadFile(id)\r\n      this.downloadFile(content, fileName)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.coordinate {\r\n  display: flex;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components"}]}