{"remainingRequest":"D:\\software\\front\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\software\\front\\front\\src\\api\\tree.js","dependencies":[{"path":"D:\\software\\front\\front\\src\\api\\tree.js","mtime":1715830117996},{"path":"D:\\software\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715830111371},{"path":"D:\\software\\front\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1715830110683}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbi5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkQ6L3NvZnR3YXJlL2Zyb250L2Zyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IHJlcXVlc3QgZnJvbSAnQC91dGlscy9yZXF1ZXN0JzsKaW1wb3J0IHsgZ2V0RW5jcnlwdEtleVdvcmQgfSBmcm9tICdAL3V0aWxzL3JzYUVuY3J5cHQnOwppbXBvcnQgY29uc3RhbnQgZnJvbSAnQC9jb25zdGFudCc7CmV4cG9ydCBkZWZhdWx0IHsKICBnZXRBbGxOb2RlczogZ2V0QWxsTm9kZXMsCiAgZGVsT25lTm9kZTogZGVsT25lTm9kZSwKICBkZWxNYW55Tm9kZTogZGVsTWFueU5vZGUsCiAgY2hhbmdlVHdvTm9kZXM6IGNoYW5nZVR3b05vZGVzLAogIGVkaXRPbmVOb2RlOiBlZGl0T25lTm9kZSwKICBnZXRBbGxCcm90aGVySW5kZXg6IGdldEFsbEJyb3RoZXJJbmRleCwKICBnZXRBbGxQYXJlbnRJbmRleDogZ2V0QWxsUGFyZW50SW5kZXgsCiAgY29tbW9uU2VhcmNoOiBjb21tb25TZWFyY2gKfTsgLy8g6I635b6X5omA5pyJ5qCR6IqC54K5CgpmdW5jdGlvbiBnZXRBbGxOb2RlcyhfeCkgewogIHJldHVybiBfZ2V0QWxsTm9kZXMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfSAvLyDkuqTmjaLkuKTkuKrmoJHoioLngrnkvY3nva4KCgpmdW5jdGlvbiBfZ2V0QWxsTm9kZXMoKSB7CiAgX2dldEFsbE5vZGVzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKF9yZWYpIHsKICAgIHZhciBrZXlXb3JkcywgX3JlZiRwYXJlbnRJZCwgcGFyZW50SWQsIF9yZWYkdmlydHVhbFJvb3RGbGFnLCB2aXJ0dWFsUm9vdEZsYWcsIF9yZWYkc2VhcmNoS2V5LCBzZWFyY2hLZXksIF9yZWYkbGF6eSwgbGF6eSwgX3JlZiRwcmVOYW1lLCBwcmVOYW1lLCBzb3J0OwoKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAga2V5V29yZHMgPSBfcmVmLmtleVdvcmRzLCBfcmVmJHBhcmVudElkID0gX3JlZi5wYXJlbnRJZCwgcGFyZW50SWQgPSBfcmVmJHBhcmVudElkID09PSB2b2lkIDAgPyAtMSA6IF9yZWYkcGFyZW50SWQsIF9yZWYkdmlydHVhbFJvb3RGbGFnID0gX3JlZi52aXJ0dWFsUm9vdEZsYWcsIHZpcnR1YWxSb290RmxhZyA9IF9yZWYkdmlydHVhbFJvb3RGbGFnID09PSB2b2lkIDAgPyB0cnVlIDogX3JlZiR2aXJ0dWFsUm9vdEZsYWcsIF9yZWYkc2VhcmNoS2V5ID0gX3JlZi5zZWFyY2hLZXksIHNlYXJjaEtleSA9IF9yZWYkc2VhcmNoS2V5ID09PSB2b2lkIDAgPyAnJyA6IF9yZWYkc2VhcmNoS2V5LCBfcmVmJGxhenkgPSBfcmVmLmxhenksIGxhenkgPSBfcmVmJGxhenkgPT09IHZvaWQgMCA/IGZhbHNlIDogX3JlZiRsYXp5LCBfcmVmJHByZU5hbWUgPSBfcmVmLnByZU5hbWUsIHByZU5hbWUgPSBfcmVmJHByZU5hbWUgPT09IHZvaWQgMCA/ICcnIDogX3JlZiRwcmVOYW1lLCBzb3J0ID0gX3JlZi5zb3J0OwogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgcmV0dXJuIGdldEVuY3J5cHRLZXlXb3JkKGtleVdvcmRzKTsKCiAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgIGtleVdvcmRzID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgcmVxdWVzdCh7CiAgICAgICAgICAgICAgdXJsOiAnL2RhdGFUcmVlL3JlYWRBbGxUcmVlTm9kZXMnLAogICAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgIGtleVdvcmRzOiBrZXlXb3JkcywKICAgICAgICAgICAgICAgIHBhcmVudElkOiBwYXJlbnRJZCwKICAgICAgICAgICAgICAgIHZpcnR1YWxSb290RmxhZzogdmlydHVhbFJvb3RGbGFnLAogICAgICAgICAgICAgICAgc2VhcmNoS2V5OiBzZWFyY2hLZXksCiAgICAgICAgICAgICAgICBsYXp5OiBsYXp5LAogICAgICAgICAgICAgICAgcHJlTmFtZTogcHJlTmFtZSwKICAgICAgICAgICAgICAgIHNvcnQ6IHNvcnQKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZSk7CiAgfSkpOwogIHJldHVybiBfZ2V0QWxsTm9kZXMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gY2hhbmdlVHdvTm9kZXMoX3gyLCBfeDMsIF94NCkgewogIHJldHVybiBfY2hhbmdlVHdvTm9kZXMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfSAvLyDliKDpmaTkuIDkuKroioLngrkKCgpmdW5jdGlvbiBfY2hhbmdlVHdvTm9kZXMoKSB7CiAgX2NoYW5nZVR3b05vZGVzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihrZXlXb3Jkcywgbm9kZUlkLCBub2RlQ2hhbmdlSWQpIHsKICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgcmV0dXJuIGdldEVuY3J5cHRLZXlXb3JkKGtleVdvcmRzKTsKCiAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgIGtleVdvcmRzID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXF1ZXN0KHsKICAgICAgICAgICAgICB1cmw6ICcvZGF0YVRyZWUvY2hhbmdlVHdvTm9kZXMnLAogICAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgIGtleVdvcmRzOiBrZXlXb3JkcywKICAgICAgICAgICAgICAgIG5vZGVJZDogbm9kZUlkLAogICAgICAgICAgICAgICAgbm9kZUNoYW5nZUlkOiBub2RlQ2hhbmdlSWQKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUyKTsKICB9KSk7CiAgcmV0dXJuIF9jaGFuZ2VUd29Ob2Rlcy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBkZWxPbmVOb2RlKF94NSwgX3g2KSB7CiAgcmV0dXJuIF9kZWxPbmVOb2RlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0gLy8g5Yig6Zmk5aSa5Liq6IqC54K5CgoKZnVuY3Rpb24gX2RlbE9uZU5vZGUoKSB7CiAgX2RlbE9uZU5vZGUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKGtleVdvcmRzLCBub2RlKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgIHJldHVybiBnZXRFbmNyeXB0S2V5V29yZChrZXlXb3Jkcyk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBrZXlXb3JkcyA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgcmVxdWVzdCh7CiAgICAgICAgICAgICAgdXJsOiAnL2RhdGFUcmVlL2RlbE9uZU5vZGUnLAogICAgICAgICAgICAgIG1ldGhvZDogJ3Bvc3QnLAogICAgICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgICAgIGtleVdvcmRzOiBrZXlXb3JkcywKICAgICAgICAgICAgICAgIG5vZGU6IEpTT04uc3RyaW5naWZ5KG5vZGUpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KSk7CgogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlMyk7CiAgfSkpOwogIHJldHVybiBfZGVsT25lTm9kZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBkZWxNYW55Tm9kZShfeDcsIF94OCkgewogIHJldHVybiBfZGVsTWFueU5vZGUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfSAvLyDnvJbovpHkuIDkuKroioLngrnvvIjljIXmi6zmlrDlop7vvIkKLy8g5LygdGhlT3JkZXLkuJTkuLotMS7ku6Pooajml6B0aGVPcmRlcuWtl+aute+8jOWFtuS7luaDheWGtemcgOimgeWvuXRoZU9yZGVy5a2X5q616L+b6KGM6LWL5YC85aSE55CGCgoKZnVuY3Rpb24gX2RlbE1hbnlOb2RlKCkgewogIF9kZWxNYW55Tm9kZSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoa2V5V29yZHMsIG5vZGVzKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ0LnByZXYgPSBfY29udGV4dDQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDI7CiAgICAgICAgICAgIHJldHVybiBnZXRFbmNyeXB0S2V5V29yZChrZXlXb3Jkcyk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBrZXlXb3JkcyA9IF9jb250ZXh0NC5zZW50OwogICAgICAgICAgICBjb25zb2xlLmxvZyhub2Rlcy5tYXAoZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICByZXR1cm4gZS5pZDsKICAgICAgICAgICAgfSkuam9pbihjb25zdGFudC5TUExJVF9PUEVSQVRPUi5DT01NQSkpOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LmFicnVwdCgicmV0dXJuIiwgcmVxdWVzdCh7CiAgICAgICAgICAgICAgdXJsOiAnL2RhdGFUcmVlL2RlbE1hbnlOb2RlJywKICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgICBrZXlXb3Jkczoga2V5V29yZHMsCiAgICAgICAgICAgICAgICBub2RlczogSlNPTi5zdHJpbmdpZnkobm9kZXMpIC8vIG5vZGVzOiBnZXRFbmNyeXB0S2V5V29yZChub2Rlcy5tYXAoZSA9PiBlLmlkKS5qb2luKGNvbnN0YW50LlNQTElUX09QRVJBVE9SLkNPTU1BKSkKCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KSk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgfQogICAgICB9CiAgICB9LCBfY2FsbGVlNCk7CiAgfSkpOwogIHJldHVybiBfZGVsTWFueU5vZGUuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gZWRpdE9uZU5vZGUoX3g5LCBfeDEwKSB7CiAgcmV0dXJuIF9lZGl0T25lTm9kZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9IC8vIOiOt+W+l+aJgOacieeItuiKgueCuQoKCmZ1bmN0aW9uIF9lZGl0T25lTm9kZSgpIHsKICBfZWRpdE9uZU5vZGUgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KGtleVdvcmRzLCBub2RlKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDUubmV4dCA9IDI7CiAgICAgICAgICAgIHJldHVybiBnZXRFbmNyeXB0S2V5V29yZChrZXlXb3Jkcyk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBrZXlXb3JkcyA9IF9jb250ZXh0NS5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ1LmFicnVwdCgicmV0dXJuIiwgcmVxdWVzdCh7CiAgICAgICAgICAgICAgdXJsOiAnL2RhdGFUcmVlL2VkaXRPbmVOb2RlJywKICAgICAgICAgICAgICBtZXRob2Q6ICdwb3N0JywKICAgICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgICBrZXlXb3Jkczoga2V5V29yZHMsCiAgICAgICAgICAgICAgICBub2RlOiBKU09OLnN0cmluZ2lmeShub2RlKQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkpOwoKICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwgX2NhbGxlZTUpOwogIH0pKTsKICByZXR1cm4gX2VkaXRPbmVOb2RlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0KCmZ1bmN0aW9uIGdldEFsbFBhcmVudEluZGV4KF94MTEsIF94MTIpIHsKICByZXR1cm4gX2dldEFsbFBhcmVudEluZGV4LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0gLy8g6I635b6X5b2T5YmN6IqC54K555qE55u05o6l54i25Lqy6IqC54K5CgoKZnVuY3Rpb24gX2dldEFsbFBhcmVudEluZGV4KCkgewogIF9nZXRBbGxQYXJlbnRJbmRleCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTYoa2V5V29yZHMsIG5vZGVJZCkgewogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU2JChfY29udGV4dDYpIHsKICAgICAgd2hpbGUgKDEpIHsKICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ni5wcmV2ID0gX2NvbnRleHQ2Lm5leHQpIHsKICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSAyOwogICAgICAgICAgICByZXR1cm4gZ2V0RW5jcnlwdEtleVdvcmQoa2V5V29yZHMpOwoKICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAga2V5V29yZHMgPSBfY29udGV4dDYuc2VudDsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5hYnJ1cHQoInJldHVybiIsIHJlcXVlc3QoewogICAgICAgICAgICAgIHVybDogJy9kYXRhVHJlZS9nZXRBbGxQYXJlbnRJbmRleCcsCiAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgICAga2V5V29yZHM6IGtleVdvcmRzLAogICAgICAgICAgICAgICAgbm9kZUlkOiBub2RlSWQKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU2KTsKICB9KSk7CiAgcmV0dXJuIF9nZXRBbGxQYXJlbnRJbmRleC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwp9CgpmdW5jdGlvbiBnZXRBbGxCcm90aGVySW5kZXgoX3gxMywgX3gxNCkgewogIHJldHVybiBfZ2V0QWxsQnJvdGhlckluZGV4LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn0gLy8g5qCR57uT5p6E5p2h5Lu255qE5YiX6KGo5p+l6K+iCgoKZnVuY3Rpb24gX2dldEFsbEJyb3RoZXJJbmRleCgpIHsKICBfZ2V0QWxsQnJvdGhlckluZGV4ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNyhrZXlXb3Jkcywgbm9kZUlkKSB7CiAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTckKF9jb250ZXh0NykgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQ3LnByZXYgPSBfY29udGV4dDcubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDI7CiAgICAgICAgICAgIHJldHVybiBnZXRFbmNyeXB0S2V5V29yZChrZXlXb3Jkcyk7CgogICAgICAgICAgY2FzZSAyOgogICAgICAgICAgICBrZXlXb3JkcyA9IF9jb250ZXh0Ny5zZW50OwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ3LmFicnVwdCgicmV0dXJuIiwgcmVxdWVzdCh7CiAgICAgICAgICAgICAgdXJsOiAnL2RhdGFUcmVlL2dldEFsbEJyb3RoZXJJbmRleCcsCiAgICAgICAgICAgICAgbWV0aG9kOiAncG9zdCcsCiAgICAgICAgICAgICAgZGF0YTogewogICAgICAgICAgICAgICAga2V5V29yZHM6IGtleVdvcmRzLAogICAgICAgICAgICAgICAgbm9kZUlkOiBub2RlSWQKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pKTsKCiAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQ3LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWU3KTsKICB9KSk7CiAgcmV0dXJuIF9nZXRBbGxCcm90aGVySW5kZXguYXBwbHkodGhpcywgYXJndW1lbnRzKTsKfQoKZnVuY3Rpb24gY29tbW9uU2VhcmNoKF9yZWYyKSB7CiAgdmFyIHRyZWVJbmZvID0gX3JlZjIudHJlZUluZm8sCiAgICAgIGxpc3RLZXlXb3JkcyA9IF9yZWYyLmxpc3RLZXlXb3JkcywKICAgICAgc2VhcmNoS2V5ID0gX3JlZjIuc2VhcmNoS2V5LAogICAgICByZWdLZXkgPSBfcmVmMi5yZWdLZXksCiAgICAgIHBhZ2VJbmZvID0gX3JlZjIucGFnZUluZm8sCiAgICAgIHNvcnRKc29uID0gX3JlZjIuc29ydEpzb247CiAgcmV0dXJuIHJlcXVlc3QoewogICAgdXJsOiAnL2RhdGFUcmVlL2NvbW1vblNlYXJjaCcsCiAgICBtZXRob2Q6ICdwb3N0JywKICAgIGRhdGE6IHsKICAgICAgdHJlZUluZm86IHRyZWVJbmZvLAogICAgICBsaXN0S2V5V29yZHM6IGxpc3RLZXlXb3JkcywKICAgICAgc2VhcmNoS2V5OiBzZWFyY2hLZXksCiAgICAgIHJlZ0tleTogcmVnS2V5LAogICAgICBwYWdlSW5mbzogcGFnZUluZm8sCiAgICAgIHNvcnRKc29uOiBzb3J0SnNvbgogICAgfQogIH0pOwp9"},{"version":3,"sources":["D:/software/front/front/src/api/tree.js"],"names":["request","getEncryptKeyWord","constant","getAllNodes","delOneNode","delManyNode","changeTwoNodes","editOneNode","getAllBrotherIndex","getAllParentIndex","commonSearch","keyWords","parentId","virtualRootFlag","searchKey","lazy","preName","sort","url","method","data","nodeId","nodeChangeId","node","JSON","stringify","nodes","console","log","map","e","id","join","SPLIT_OPERATOR","COMMA","treeInfo","listKeyWords","regKey","pageInfo","sortJson"],"mappings":"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","sourcesContent":["import request from '@/utils/request'\r\nimport { getEncryptKeyWord } from '@/utils/rsaEncrypt'\r\nimport constant from '@/constant'\r\n\r\nexport default {\r\n  getAllNodes,\r\n  delOneNode,\r\n  delManyNode,\r\n  changeTwoNodes,\r\n  editOneNode,\r\n  getAllBrotherIndex,\r\n  getAllParentIndex,\r\n  commonSearch\r\n}\r\n// 获得所有树节点\r\nasync function getAllNodes({ keyWords, parentId = -1, virtualRootFlag = true, searchKey = '', lazy = false, preName = '', sort }) {\r\n  keyWords = await getEncryptKeyWord(keyWords)\r\n  return request({\r\n    url: '/dataTree/readAllTreeNodes',\r\n    method: 'post',\r\n    data: {\r\n      keyWords,\r\n      parentId,\r\n      virtualRootFlag,\r\n      searchKey,\r\n      lazy,\r\n      preName,\r\n      sort\r\n    }\r\n  })\r\n}\r\n// 交换两个树节点位置\r\nasync function changeTwoNodes(keyWords, nodeId, nodeChangeId) {\r\n  keyWords = await getEncryptKeyWord(keyWords)\r\n  return request({\r\n    url: '/dataTree/changeTwoNodes',\r\n    method: 'post',\r\n    data: {\r\n      keyWords: keyWords,\r\n      nodeId: nodeId,\r\n      nodeChangeId: nodeChangeId\r\n    }\r\n  })\r\n}\r\n// 删除一个节点\r\nasync function delOneNode(keyWords, node) {\r\n  keyWords = await getEncryptKeyWord(keyWords)\r\n  return request({\r\n    url: '/dataTree/delOneNode',\r\n    method: 'post',\r\n    data: {\r\n      keyWords: keyWords,\r\n      node: JSON.stringify(node)\r\n    }\r\n  })\r\n}\r\n// 删除多个节点\r\nasync function delManyNode(keyWords, nodes) {\r\n  keyWords = await getEncryptKeyWord(keyWords)\r\n  console.log(nodes.map(e => e.id).join(constant.SPLIT_OPERATOR.COMMA))\r\n  return request({\r\n    url: '/dataTree/delManyNode',\r\n    method: 'post',\r\n    data: {\r\n      keyWords: keyWords,\r\n      nodes: JSON.stringify(nodes)\r\n      // nodes: getEncryptKeyWord(nodes.map(e => e.id).join(constant.SPLIT_OPERATOR.COMMA))\r\n    }\r\n  })\r\n}\r\n\r\n// 编辑一个节点（包括新增）\r\n// 传theOrder且为-1.代表无theOrder字段，其他情况需要对theOrder字段进行赋值处理\r\nasync function editOneNode(keyWords, node) {\r\n  keyWords = await getEncryptKeyWord(keyWords)\r\n  return request({\r\n    url: '/dataTree/editOneNode',\r\n    method: 'post',\r\n    data: {\r\n      keyWords: keyWords,\r\n      node: JSON.stringify(node)\r\n    }\r\n  })\r\n}\r\n// 获得所有父节点\r\nasync function getAllParentIndex(keyWords, nodeId) {\r\n  keyWords = await getEncryptKeyWord(keyWords)\r\n  return request({\r\n    url: '/dataTree/getAllParentIndex',\r\n    method: 'post',\r\n    data: {\r\n      keyWords: keyWords,\r\n      nodeId: nodeId\r\n    }\r\n  })\r\n}\r\n// 获得当前节点的直接父亲节点\r\nasync function getAllBrotherIndex(keyWords, nodeId) {\r\n  keyWords = await getEncryptKeyWord(keyWords)\r\n  return request({\r\n    url: '/dataTree/getAllBrotherIndex',\r\n    method: 'post',\r\n    data: {\r\n      keyWords: keyWords,\r\n      nodeId: nodeId\r\n    }\r\n  })\r\n}\r\n\r\n// 树结构条件的列表查询\r\nfunction commonSearch({ treeInfo, listKeyWords, searchKey, regKey, pageInfo, sortJson }) {\r\n  return request({\r\n    url: '/dataTree/commonSearch',\r\n    method: 'post',\r\n    data: {\r\n      treeInfo,\r\n      listKeyWords,\r\n      searchKey,\r\n      regKey,\r\n      pageInfo,\r\n      sortJson\r\n    }\r\n  })\r\n}\r\n"]}]}