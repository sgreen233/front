{"remainingRequest":"D:\\software\\front\\node_modules\\babel-loader\\lib\\index.js!D:\\software\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\software\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\front\\src\\components\\SimpleTreeSelect.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software\\front\\src\\components\\SimpleTreeSelect.vue","mtime":1670666519533},{"path":"D:\\software\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\software\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiRDovc29mdHdhcmUvZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiRDovc29mdHdhcmUvZnJvbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwovLwovLwovLwovLyBjYXNjYWRlcuayoeaciWxvYWRpbmflsZ7mgKcKaW1wb3J0IHRyZWVBUEkgZnJvbSAnQC9hcGkvdHJlZSc7CmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU2ltcGxlVHJlZVNlbGVjdCcsCiAgcHJvcHM6IHsKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KICAgIH0sCiAgICAvLyDniLbnuqcgdi1tb2RlbCDnu5HlrprlgLzvvIjlkI7nq6/ov5Tlm57nmoQgaWQg5YC877yJCiAgICBmaWVsZDogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnCiAgICB9LAogICAga2V5V29yZHM6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIC8vIOaQnOe0oue6p+iBlOmAiemhueWFs+mUruWtlwogICAgcGxhY2Vob2xkZXI6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAn6K+36YCJ5oupJwogICAgfSwKICAgIGNoZWNrU3RyaWN0bHk6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIC8vIOaYr+WQpuS4peagvOeahOmBteWuiOeItuWtkOiKgueCueS4jeS6kuebuOWFs+iBlAogICAgc2l6ZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcnCiAgICB9LAogICAgc2VhcmNoS2V5czogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkge30KICAgIH0sCiAgICBsYXp5OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICBtdWx0aXBsZTogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGlzU2hvd0luZm86IHRydWUsCiAgICAgIGFyclZhbDogdGhpcy52YWx1ZSwKICAgICAgdmFsVGVtcDogW10sCiAgICAgIG9wdGlvbnM6IFtdLAogICAgICAvLyDlm57mmL7lpIfpgInpobkKICAgICAgbG9hZGluZzogdHJ1ZSwKICAgICAgcHJvcHM6IHsKICAgICAgICBsYWJlbDogJ25hbWUnLAogICAgICAgIHZhbHVlOiAnaWQnLAogICAgICAgIGNoaWxkcmVuOiAnY2hpbGRyZW4nLAogICAgICAgIGNoZWNrU3RyaWN0bHk6IHRoaXMuY2hlY2tTdHJpY3RseSwKICAgICAgICBsYXp5OiB0aGlzLmxhenksCiAgICAgICAgbGF6eUxvYWQ6IHRoaXMubGF6eUxvYWQKICAgICAgfQogICAgfTsKICB9LAogIHdhdGNoOiB7CiAgICAvLyDpgJrov4d2YWx1Zea/gOWPkWluaXRPcHRpb25zCiAgICB2YWx1ZTogewogICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHZhbCkgewogICAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgIF90aGlzLmNoYW5nZVNlbGVjdGlvbigpOwoKICAgICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgICB9KSkoKTsKICAgICAgfSwKICAgICAgZGVlcDogdHJ1ZSwKICAgICAgaW1tZWRpYXRlOiB0cnVlCiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGFuZ2VTZWxlY3Rpb246IGZ1bmN0aW9uIGNoYW5nZVNlbGVjdGlvbigpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICB2YXIgcmVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfdGhpczIubG9hZGluZyA9IHRydWU7CgogICAgICAgICAgICAgICAgaWYgKCFfdGhpczIudmFsdWUpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA4OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJlZUFQSS5nZXRBbGxQYXJlbnRJbmRleChfdGhpczIua2V5V29yZHMsIF90aGlzMi52YWx1ZSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0Mi5zZW50OwoKICAgICAgICAgICAgICAgIGlmIChyZXMuZGF0YS5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICAgIF90aGlzMi52YWxUZW1wID0gcmVzLmRhdGEubWFwKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0uaWQ7CiAgICAgICAgICAgICAgICAgIH0pLnJldmVyc2UoKTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDk7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX3RoaXMyLnZhbFRlbXAgPSBbXTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxMTsKICAgICAgICAgICAgICAgIHJldHVybiBfdGhpczIuaW5pdE9wdGlvbnMoKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIGlmIChfdGhpczIubGF6eSkgewogICAgICAgICAgICAgICAgICBfdGhpczIuaXNTaG93SW5mbyA9IGZhbHNlOwogICAgICAgICAgICAgICAgICBfdGhpczIuYXJyVmFsID0gX3RvQ29uc3VtYWJsZUFycmF5KF90aGlzMi52YWxUZW1wKTsKCiAgICAgICAgICAgICAgICAgIF90aGlzMi4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIF90aGlzMi5pc1Nob3dJbmZvID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX3RoaXMyLmxvYWRpbmcgPSBmYWxzZTsKCiAgICAgICAgICAgICAgY2FzZSAxMzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGluaXRPcHRpb25zOiBmdW5jdGlvbiBpbml0T3B0aW9ucyhzZWFyY2hLZXkpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHsKICAgICAgICB2YXIgX3JlcywgYXJyTm93LCByZXMsIGxhc3RSZXMsIGxhc3RQYXJlbnQ7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNCQoX2NvbnRleHQ0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoc2VhcmNoS2V5ICE9IG51bGwpIHsKICAgICAgICAgICAgICAgICAgX3RoaXMzLnNlYXJjaEtleXMgPSBzZWFyY2hLZXk7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSAxOwoKICAgICAgICAgICAgICAgIGlmIChfdGhpczMubGF6eSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDEwOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBpZiAoIShfdGhpczMub3B0aW9ucy5sZW5ndGggPT09IDApKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gODsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIHRyZWVBUEkuZ2V0QWxsTm9kZXMoewogICAgICAgICAgICAgICAgICBrZXlXb3JkczogX3RoaXMzLmtleVdvcmRzLAogICAgICAgICAgICAgICAgICB2aXJ0dWFsUm9vdEZsYWc6IGZhbHNlLAogICAgICAgICAgICAgICAgICBzZWFyY2hLZXk6IF90aGlzMy5zZWFyY2hLZXlzLAogICAgICAgICAgICAgICAgICBsYXp5OiBmYWxzZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIF9yZXMgPSBfY29udGV4dDQuc2VudDsKICAgICAgICAgICAgICAgIF90aGlzMy5vcHRpb25zID0gX3Jlcy5kYXRhOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDIwOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMTA6CiAgICAgICAgICAgICAgICAvLyDmh5LliqDovb0KICAgICAgICAgICAgICAgIGFyck5vdyA9IF8uY2xvbmVEZWVwKF90aGlzMy52YWxUZW1wKTsKICAgICAgICAgICAgICAgIGFyck5vdy51bnNoaWZ0KC0xKTsKICAgICAgICAgICAgICAgIGFyck5vdy5wb3AoKTsKICAgICAgICAgICAgICAgIGFyck5vdy5yZXZlcnNlKCk7CiAgICAgICAgICAgICAgICByZXMgPSBbXTsKICAgICAgICAgICAgICAgIGxhc3RSZXMgPSBbXTsKICAgICAgICAgICAgICAgIGxhc3RQYXJlbnQgPSAwOwogICAgICAgICAgICAgICAgX3RoaXMzLm9wdGlvbnMgPSBbXTsKICAgICAgICAgICAgICAgIGFyck5vdy5mb3JFYWNoKCAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICB2YXIgX3JlZiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoZWxlbWVudCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdHJlZUFQSS5nZXRBbGxOb2Rlcyh7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGtleVdvcmRzOiBfdGhpczMua2V5V29yZHMsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZpcnR1YWxSb290RmxhZzogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlYXJjaEtleTogc2VhcmNoS2V5LAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXp5OiB0cnVlLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnRJZDogZWxlbWVudAogICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcyA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzID0gcmVzLmRhdGE7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGxhc3RQYXJlbnQgIT09IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzLmZvckVhY2goZnVuY3Rpb24gKGVsKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGVsLmlkID09PSBlbGVtZW50KSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbC5jaGlsZHJlbi5wdXNoKGxhc3RSZXMpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFzdFJlcyA9IF8uY2xvbmVEZWVwKHJlcyk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsYXN0UGFyZW50ID0gZWxlbWVudDsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgICAgICAgICAgICAgfSkpOwoKICAgICAgICAgICAgICAgICAgcmV0dXJuIGZ1bmN0aW9uIChfeCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9KCkpOwogICAgICAgICAgICAgICAgX3RoaXMzLm9wdGlvbnMgPSByZXM7CgogICAgICAgICAgICAgIGNhc2UgMjA6CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDI1OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgMjI6CiAgICAgICAgICAgICAgICBfY29udGV4dDQucHJldiA9IDIyOwogICAgICAgICAgICAgICAgX2NvbnRleHQ0LnQwID0gX2NvbnRleHQ0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQ0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAyNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNCwgbnVsbCwgW1sxLCAyMl1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8gbGlzdFRvVHJlZShsaXN0KSB7CiAgICAvLyAgIGNvbnN0IGNsb25lRGF0YSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkobGlzdCkpIC8vIOWvuea6kOaVsOaNrua3seW6puWFi+mahgogICAgLy8gICByZXR1cm4gY2xvbmVEYXRhLmZpbHRlcihwYXJlbnQgPT4geyAvLyDlvqrnjq/miYDmnInpobnvvIzlubbmt7vliqBjaGlsZHJlbuWxnuaApwogICAgLy8gICAgIGNvbnN0IGJyYW5jaEFyciA9IGNsb25lRGF0YS5maWx0ZXIoY2hpbGQgPT4gcGFyZW50WydpZCddID09PSBjaGlsZFsncGFyZW50SWQnXSkgLy8g6L+U5Zue5q+P5LiA6aG555qE5a2Q57qn5pWw57uECiAgICAvLyAgICAgYnJhbmNoQXJyLmxlbmd0aCA+IDAgPyBwYXJlbnRbJ2NoaWxkcmVuJ10gPSBicmFuY2hBcnIgOiAnJyAvLyDnu5nniLbnuqfmt7vliqDkuIDkuKpjaGlsZHJlbuWxnuaAp++8jOW5tui1i+WAvAogICAgLy8gICAgIHJldHVybiBwYXJlbnRbJ3BhcmVudElkJ10gPT09IC0xIC8vIOi/lOWbnuesrOS4gOWxggogICAgLy8gICB9KQogICAgLy8gfSwKICAgIGdldEN1cnJlbnRMZXZlbHM6IGZ1bmN0aW9uIGdldEN1cnJlbnRMZXZlbHMocGFyZW50SWQpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNSgpIHsKICAgICAgICB2YXIgcmVzLCBub2RlczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTUkKF9jb250ZXh0NSkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDUucHJldiA9IF9jb250ZXh0NS5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQ1LnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIHRyZWVBUEkuZ2V0QWxsTm9kZXMoewogICAgICAgICAgICAgICAgICBrZXlXb3JkczogX3RoaXM0LmtleVdvcmRzLAogICAgICAgICAgICAgICAgICB2aXJ0dWFsUm9vdEZsYWc6IGZhbHNlLAogICAgICAgICAgICAgICAgICBzZWFyY2hLZXk6IF90aGlzNC5zZWFyY2hLZXlzLAogICAgICAgICAgICAgICAgICBsYXp5OiBfdGhpczQubGF6eSwKICAgICAgICAgICAgICAgICAgcGFyZW50SWQ6IHBhcmVudElkCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQ1LnNlbnQ7CiAgICAgICAgICAgICAgICBub2RlcyA9IHJlcy5kYXRhLm1hcChmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICAgIGlkOiBpdGVtLmlkLAogICAgICAgICAgICAgICAgICAgIG5hbWU6IGl0ZW0ubmFtZSwKICAgICAgICAgICAgICAgICAgICBwYXJlbnRJZDogcGFyZW50SWQsCiAgICAgICAgICAgICAgICAgICAgbGVhZjogaXRlbS5jaGlsZE51bSA9PT0gMCAvLyDliKTmlq3mmK/lkKbkuLrmnKvlsL7oioLngrkKCiAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJyZXR1cm4iLCBub2Rlcyk7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF9jb250ZXh0NS5wcmV2ID0gODsKICAgICAgICAgICAgICAgIF9jb250ZXh0NS50MCA9IF9jb250ZXh0NVsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuYWJydXB0KCJyZXR1cm4iLCBbXSk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDUuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTUsIG51bGwsIFtbMCwgOF1dKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgLy8g5oeS5Yqg6L29CiAgICBsYXp5TG9hZDogZnVuY3Rpb24gbGF6eUxvYWQobm9kZSwgcmVzb2x2ZSkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU2KCkgewogICAgICAgIHZhciBsZXZlbCwgcGFyZW50SWQsIG5vZGVzOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNiQoX2NvbnRleHQ2KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ni5wcmV2ID0gX2NvbnRleHQ2Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBsZXZlbCA9IG5vZGUubGV2ZWw7CiAgICAgICAgICAgICAgICBwYXJlbnRJZCA9IGxldmVsID8gbm9kZS52YWx1ZSA6IC0xOwogICAgICAgICAgICAgICAgX2NvbnRleHQ2LnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNS5nZXRDdXJyZW50TGV2ZWxzKHBhcmVudElkKTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgbm9kZXMgPSBfY29udGV4dDYuc2VudDsKICAgICAgICAgICAgICAgIHJlc29sdmUobm9kZXMpOyAvLyB0aGlzLmNoYW5nZVNlbGVjdGlvbigpCgogICAgICAgICAgICAgICAgX2NvbnRleHQ2Lm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBfY29udGV4dDYucHJldiA9IDk7CiAgICAgICAgICAgICAgICBfY29udGV4dDYudDAgPSBfY29udGV4dDZbImNhdGNoIl0oMik7CiAgICAgICAgICAgICAgICByZXNvbHZlKFtdKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlNiwgbnVsbCwgW1syLCA5XV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICAvLyDmjqXlj6PlhaXlj4LpnIDmsYLkuLrmnIDlkI7kuIDnuqcgaWQKICAgIGhhbmRsZUNoYW5nZTogZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKHZhbCkgewogICAgICB2YXIgbGFzdElkID0gdmFsW3ZhbC5sZW5ndGggLSAxXTsKICAgICAgdGhpcy4kZW1pdCgndXBkYXRlLXZhbHVlJywgbGFzdElkLCB0aGlzLmZpZWxkKTsKICAgIH0sCiAgICBoYW5kbGVGb2N1czogZnVuY3Rpb24gaGFuZGxlRm9jdXModmFsKSB7CiAgICAgIGNvbnNvbGUubG9nKHZhbCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["SimpleTreeSelect.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <el-cascader v-if=\"isShowInfo\" ref=\"cascader\" v-model=\"arrVal\" v-loading=\"loading\" class=\"cascader\" :multiple=\"multiple\" :append-to-body=\"false\" :size=\"size\" :options=\"options\" :props=\"props\" :placeholder=\"placeholder\" clearable=\"\" @change=\"handleChange\" />\r\n</template>\r\n<script>\r\n// cascader没有loading属性\r\nimport treeAPI from '@/api/tree'\r\nimport _ from 'lodash'\r\n\r\nexport default {\r\n  name: 'SimpleTreeSelect',\r\n  props: {\r\n    value: { type: Number, default: () => null }, // 父级 v-model 绑定值（后端返回的 id 值）\r\n    field: { type: String, default: '' },\r\n    keyWords: { type: String, default: '' }, // 搜索级联选项关键字\r\n    placeholder: { type: String, default: '请选择' },\r\n    checkStrictly: { type: Boolean, default: true }, // 是否严格的遵守父子节点不互相关联\r\n    size: { type: String, default: '' },\r\n    searchKeys: { type: Object, default: () => {} },\r\n    lazy: { type: Boolean, default: true },\r\n    multiple: { type: Boolean, default: false }\r\n  },\r\n  data() {\r\n    return {\r\n      isShowInfo: true,\r\n      arrVal: this.value,\r\n      valTemp: [],\r\n      options: [], // 回显备选项\r\n      loading: true,\r\n      props: {\r\n        label: 'name',\r\n        value: 'id',\r\n        children: 'children',\r\n        checkStrictly: this.checkStrictly,\r\n        lazy: this.lazy,\r\n        lazyLoad: this.lazyLoad\r\n      }\r\n    }\r\n  },\r\n  watch: {\r\n    // 通过value激发initOptions\r\n    value: {\r\n      async handler(val) {\r\n        this.changeSelection()\r\n      },\r\n      deep: true,\r\n      immediate: true\r\n    }\r\n  },\r\n  methods: {\r\n    async changeSelection() {\r\n      this.loading = true\r\n      if (this.value) {\r\n        const res = await treeAPI.getAllParentIndex(this.keyWords, this.value)\r\n        if (res.data.length > 0) {\r\n          this.valTemp = res.data.map(item => item.id).reverse()\r\n        }\r\n      } else {\r\n        this.valTemp = []\r\n      }\r\n      await this.initOptions()\r\n\r\n      if (this.lazy) {\r\n        this.isShowInfo = false\r\n        this.arrVal = [...this.valTemp]\r\n        this.$nextTick(() => {\r\n          this.isShowInfo = true\r\n        })\r\n      }\r\n      this.loading = false\r\n    },\r\n    async initOptions(searchKey) {\r\n      if (searchKey != null) {\r\n        this.searchKeys = searchKey\r\n      }\r\n      try {\r\n        if (!this.lazy) { // 不是懒加载\r\n          if (this.options.length === 0) { // 没有加载过,直接加载完\r\n            const res = await treeAPI.getAllNodes({\r\n              keyWords: this.keyWords,\r\n              virtualRootFlag: false,\r\n              searchKey: this.searchKeys,\r\n              lazy: false\r\n            })\r\n            this.options = res.data\r\n          }\r\n        } else { // 懒加载\r\n          var arrNow = _.cloneDeep(this.valTemp)\r\n          arrNow.unshift(-1)\r\n          arrNow.pop()\r\n          arrNow.reverse()\r\n          var res = []\r\n          var lastRes = []\r\n          var lastParent = 0\r\n          this.options = []\r\n          arrNow.forEach(async element => {\r\n            res = await treeAPI.getAllNodes({\r\n              keyWords: this.keyWords,\r\n              virtualRootFlag: false,\r\n              searchKey: searchKey,\r\n              lazy: true,\r\n              parentId: element\r\n            })\r\n            res = res.data\r\n            if (lastParent !== 0) {\r\n              res.forEach(el => {\r\n                if (el.id === element) {\r\n                  el.children.push(lastRes)\r\n                }\r\n              })\r\n            }\r\n            lastRes = _.cloneDeep(res)\r\n            lastParent = element\r\n          })\r\n          this.options = res\r\n        }\r\n      } catch (error) { console.log(error) }\r\n    },\r\n    // listToTree(list) {\r\n    //   const cloneData = JSON.parse(JSON.stringify(list)) // 对源数据深度克隆\r\n    //   return cloneData.filter(parent => { // 循环所有项，并添加children属性\r\n    //     const branchArr = cloneData.filter(child => parent['id'] === child['parentId']) // 返回每一项的子级数组\r\n    //     branchArr.length > 0 ? parent['children'] = branchArr : '' // 给父级添加一个children属性，并赋值\r\n    //     return parent['parentId'] === -1 // 返回第一层\r\n    //   })\r\n    // },\r\n    async getCurrentLevels(parentId) {\r\n      try {\r\n        const res = await treeAPI.getAllNodes({\r\n          keyWords: this.keyWords,\r\n          virtualRootFlag: false,\r\n          searchKey: this.searchKeys,\r\n          lazy: this.lazy,\r\n          parentId: parentId\r\n        })\r\n        const nodes = res.data.map(item => ({\r\n          id: item.id,\r\n          name: item.name,\r\n          parentId: parentId,\r\n          leaf: item.childNum === 0 // 判断是否为末尾节点\r\n        }))\r\n        return nodes\r\n      } catch (error) {\r\n        return []\r\n      }\r\n    },\r\n    // 懒加载\r\n    async lazyLoad(node, resolve) {\r\n      const { level } = node\r\n      const parentId = level ? node.value : -1\r\n      try {\r\n        const nodes = await this.getCurrentLevels(parentId)\r\n        resolve(nodes)\r\n        // this.changeSelection()\r\n      } catch (error) {\r\n        resolve([])\r\n      }\r\n    },\r\n    // 接口入参需求为最后一级 id\r\n    handleChange(val) {\r\n      const lastId = val[val.length - 1]\r\n      this.$emit('update-value', lastId, this.field)\r\n    },\r\n    handleFocus(val) {\r\n      console.log(val)\r\n    }\r\n  }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/components"}]}