{"remainingRequest":"D:\\software\\front\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\front\\front\\src\\components\\theme-picker\\Index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software\\front\\front\\src\\components\\theme-picker\\Index.vue","mtime":1715830118033},{"path":"D:\\software\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715830111371},{"path":"D:\\software\\front\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1715830110683},{"path":"D:\\software\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715830111371},{"path":"D:\\software\\front\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1715830117510}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KDQpjb25zdCB2ZXJzaW9uID0gcmVxdWlyZSgnZWxlbWVudC11aS9wYWNrYWdlLmpzb24nKS52ZXJzaW9uIC8vIGVsZW1lbnQtdWkgdmVyc2lvbiBmcm9tIG5vZGVfbW9kdWxlcw0KY29uc3QgT1JJR0lOQUxfVEhFTUUgPSAnIzQwOUVGRicgLy8gZGVmYXVsdCBjb2xvcg0KaW1wb3J0IENvb2tpZXMgZnJvbSAnanMtY29va2llJw0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBjaGFsazogJycsIC8vIGNvbnRlbnQgb2YgdGhlbWUtY2hhbGsgY3NzDQogICAgICB0aGVtZTogdGhpcy4kc3RvcmUuZ2V0dGVycy51c2VySW5mby50aGVtZUNvbG9yDQogICAgfQ0KICB9LA0KICBjcmVhdGVkKCkgew0KICAgIHRoaXMudXBkYXRlUHJpbWFyeUNvbG9yKHRoaXMudGhlbWUpDQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBhc3luYyB1cGRhdGVQcmltYXJ5Q29sb3IodmFsKSB7DQogICAgICBDb29raWVzLnNldCgndGhlbWUnLCB2YWwsIHsgZXhwaXJlczogMzY1IH0pDQogICAgICBjb25zdCBvbGRWYWwgPSB0aGlzLmNoYWxrID8gdGhpcy50aGVtZSA6IENvb2tpZXMuZ2V0KCd0aGVtZScpID8gQ29va2llcy5nZXQoJ3RoZW1lJykgOiBPUklHSU5BTF9USEVNRQ0KICAgICAgaWYgKHR5cGVvZiB2YWwgIT09ICdzdHJpbmcnKSByZXR1cm4NCiAgICAgIGNvbnN0IHRoZW1lQ2x1c3RlciA9IHRoaXMuZ2V0VGhlbWVDbHVzdGVyKHZhbC5yZXBsYWNlKCcjJywgJycpKQ0KICAgICAgY29uc3Qgb3JpZ2luYWxDbHVzdGVyID0gdGhpcy5nZXRUaGVtZUNsdXN0ZXIob2xkVmFsLnJlcGxhY2UoJyMnLCAnJykpDQoNCiAgICAgIGNvbnN0IGdldEhhbmRsZXIgPSAodmFyaWFibGUsIGlkKSA9PiB7DQogICAgICAgIHJldHVybiAoKSA9PiB7DQogICAgICAgICAgY29uc3Qgb3JpZ2luYWxDbHVzdGVyID0gdGhpcy5nZXRUaGVtZUNsdXN0ZXIoT1JJR0lOQUxfVEhFTUUucmVwbGFjZSgnIycsICcnKSkNCiAgICAgICAgICBjb25zdCBuZXdTdHlsZSA9IHRoaXMudXBkYXRlU3R5bGUodGhpc1t2YXJpYWJsZV0sIG9yaWdpbmFsQ2x1c3RlciwgdGhlbWVDbHVzdGVyKQ0KICAgICAgICAgIGxldCBzdHlsZVRhZyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKQ0KICAgICAgICAgIGlmICghc3R5bGVUYWcpIHsNCiAgICAgICAgICAgIHN0eWxlVGFnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKQ0KICAgICAgICAgICAgc3R5bGVUYWcuc2V0QXR0cmlidXRlKCdpZCcsIGlkKQ0KICAgICAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzdHlsZVRhZykNCiAgICAgICAgICB9DQogICAgICAgICAgc3R5bGVUYWcuaW5uZXJUZXh0ID0gbmV3U3R5bGUNCiAgICAgICAgfQ0KICAgICAgfQ0KDQogICAgICBpZiAoIXRoaXMuY2hhbGspIHsNCiAgICAgICAgY29uc3QgdXJsID0gYGh0dHBzOi8vdW5wa2cuY29tL2VsZW1lbnQtdWlAJHt2ZXJzaW9ufS9saWIvdGhlbWUtY2hhbGsvaW5kZXguY3NzYA0KICAgICAgICBhd2FpdCB0aGlzLmdldENTU1N0cmluZyh1cmwsICdjaGFsaycpDQogICAgICB9DQogICAgICBjb25zdCBjaGFsa0hhbmRsZXIgPSBnZXRIYW5kbGVyKCdjaGFsaycsICdjaGFsay1zdHlsZScpDQogICAgICBjaGFsa0hhbmRsZXIoKQ0KDQogICAgICBjb25zdCBzdHlsZXMgPSBbXS5zbGljZS5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3N0eWxlJykpLmZpbHRlcihzdHlsZSA9PiB7DQogICAgICAgIGNvbnN0IHRleHQgPSBzdHlsZS5pbm5lclRleHQNCiAgICAgICAgcmV0dXJuIG5ldyBSZWdFeHAob2xkVmFsLCAnaScpLnRlc3QodGV4dCkgJiYgIS9DaGFsayBWYXJpYWJsZXMvLnRlc3QodGV4dCkNCiAgICAgIH0pDQogICAgICBzdHlsZXMuZm9yRWFjaChzdHlsZSA9PiB7DQogICAgICAgIGNvbnN0IHsgaW5uZXJUZXh0IH0gPSBzdHlsZQ0KICAgICAgICBpZiAodHlwZW9mIGlubmVyVGV4dCAhPT0gJ3N0cmluZycpIHJldHVybg0KICAgICAgICBzdHlsZS5pbm5lclRleHQgPSB0aGlzLnVwZGF0ZVN0eWxlKGlubmVyVGV4dCwgb3JpZ2luYWxDbHVzdGVyLCB0aGVtZUNsdXN0ZXIpDQogICAgICB9KQ0KDQogICAgICB0aGlzLiRlbWl0KCdjaGFuZ2UnLCB2YWwpDQogICAgfSwNCg0KICAgIHVwZGF0ZVN0eWxlKHN0eWxlLCBvbGRDbHVzdGVyLCBuZXdDbHVzdGVyKSB7DQogICAgICBsZXQgbmV3U3R5bGUgPSBzdHlsZQ0KICAgICAgb2xkQ2x1c3Rlci5mb3JFYWNoKChjb2xvciwgaW5kZXgpID0+IHsNCiAgICAgICAgbmV3U3R5bGUgPSBuZXdTdHlsZS5yZXBsYWNlKG5ldyBSZWdFeHAoY29sb3IsICdpZycpLCBuZXdDbHVzdGVyW2luZGV4XSkNCiAgICAgIH0pDQogICAgICByZXR1cm4gbmV3U3R5bGUNCiAgICB9LA0KDQogICAgZ2V0Q1NTU3RyaW5nKHVybCwgdmFyaWFibGUpIHsNCiAgICAgIHJldHVybiBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHsNCiAgICAgICAgY29uc3QgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCkNCiAgICAgICAgeGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9ICgpID0+IHsNCiAgICAgICAgICBpZiAoeGhyLnJlYWR5U3RhdGUgPT09IDQgJiYgeGhyLnN0YXR1cyA9PT0gMjAwKSB7DQogICAgICAgICAgICB0aGlzW3ZhcmlhYmxlXSA9IHhoci5yZXNwb25zZVRleHQucmVwbGFjZSgvQGZvbnQtZmFjZXtbXn1dK30vLCAnJykNCiAgICAgICAgICAgIHJlc29sdmUoKQ0KICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICB4aHIub3BlbignR0VUJywgdXJsKQ0KICAgICAgICB4aHIuc2VuZCgpDQogICAgICB9KQ0KICAgIH0sDQoNCiAgICBnZXRUaGVtZUNsdXN0ZXIodGhlbWUpIHsNCiAgICAgIGNvbnN0IHRpbnRDb2xvciA9IChjb2xvciwgdGludCkgPT4gew0KICAgICAgICBsZXQgcmVkID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoMCwgMiksIDE2KQ0KICAgICAgICBsZXQgZ3JlZW4gPSBwYXJzZUludChjb2xvci5zbGljZSgyLCA0KSwgMTYpDQogICAgICAgIGxldCBibHVlID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoNCwgNiksIDE2KQ0KDQogICAgICAgIGlmICh0aW50ID09PSAwKSB7DQogICAgICAgICAgLy8gd2hlbiBwcmltYXJ5IGNvbG9yIGlzIGluIGl0cyByZ2Igc3BhY2UNCiAgICAgICAgICByZXR1cm4gW3JlZCwgZ3JlZW4sIGJsdWVdLmpvaW4oJywnKQ0KICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgIHJlZCArPSBNYXRoLnJvdW5kKHRpbnQgKiAoMjU1IC0gcmVkKSkNCiAgICAgICAgICBncmVlbiArPSBNYXRoLnJvdW5kKHRpbnQgKiAoMjU1IC0gZ3JlZW4pKQ0KICAgICAgICAgIGJsdWUgKz0gTWF0aC5yb3VuZCh0aW50ICogKDI1NSAtIGJsdWUpKQ0KDQogICAgICAgICAgcmVkID0gcmVkLnRvU3RyaW5nKDE2KQ0KICAgICAgICAgIGdyZWVuID0gZ3JlZW4udG9TdHJpbmcoMTYpDQogICAgICAgICAgYmx1ZSA9IGJsdWUudG9TdHJpbmcoMTYpDQoNCiAgICAgICAgICByZXR1cm4gYCMke3JlZH0ke2dyZWVufSR7Ymx1ZX1gDQogICAgICAgIH0NCiAgICAgIH0NCg0KICAgICAgY29uc3Qgc2hhZGVDb2xvciA9IChjb2xvciwgc2hhZGUpID0+IHsNCiAgICAgICAgbGV0IHJlZCA9IHBhcnNlSW50KGNvbG9yLnNsaWNlKDAsIDIpLCAxNikNCiAgICAgICAgbGV0IGdyZWVuID0gcGFyc2VJbnQoY29sb3Iuc2xpY2UoMiwgNCksIDE2KQ0KICAgICAgICBsZXQgYmx1ZSA9IHBhcnNlSW50KGNvbG9yLnNsaWNlKDQsIDYpLCAxNikNCg0KICAgICAgICByZWQgPSBNYXRoLnJvdW5kKCgxIC0gc2hhZGUpICogcmVkKQ0KICAgICAgICBncmVlbiA9IE1hdGgucm91bmQoKDEgLSBzaGFkZSkgKiBncmVlbikNCiAgICAgICAgYmx1ZSA9IE1hdGgucm91bmQoKDEgLSBzaGFkZSkgKiBibHVlKQ0KDQogICAgICAgIHJlZCA9IHJlZC50b1N0cmluZygxNikNCiAgICAgICAgZ3JlZW4gPSBncmVlbi50b1N0cmluZygxNikNCiAgICAgICAgYmx1ZSA9IGJsdWUudG9TdHJpbmcoMTYpDQoNCiAgICAgICAgcmV0dXJuIGAjJHtyZWR9JHtncmVlbn0ke2JsdWV9YA0KICAgICAgfQ0KDQogICAgICBjb25zdCBjbHVzdGVycyA9IFt0aGVtZV0NCiAgICAgIGZvciAobGV0IGkgPSAwOyBpIDw9IDk7IGkrKykgew0KICAgICAgICBjbHVzdGVycy5wdXNoKHRpbnRDb2xvcih0aGVtZSwgTnVtYmVyKChpIC8gMTApLnRvRml4ZWQoMikpKSkNCiAgICAgIH0NCiAgICAgIGNsdXN0ZXJzLnB1c2goc2hhZGVDb2xvcih0aGVtZSwgMC4xKSkNCiAgICAgIHJldHVybiBjbHVzdGVycw0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/components/theme-picker","sourcesContent":["<template>\r\n  <el-color-picker v-model=\"theme\" :predefine=\"['#009140', '#1890ff', '#304156','#212121','#11a983', '#13c2c2', '#6959CD', '#f5222d']\" class=\"theme-picker\" popper-class=\"theme-picker-dropdown\" @change=\"updatePrimaryColor\" />\r\n</template>\r\n\r\n<script>\r\nconst version = require('element-ui/package.json').version // element-ui version from node_modules\r\nconst ORIGINAL_THEME = '#409EFF' // default color\r\nimport Cookies from 'js-cookie'\r\nexport default {\r\n  data() {\r\n    return {\r\n      chalk: '', // content of theme-chalk css\r\n      theme: this.$store.getters.userInfo.themeColor\r\n    }\r\n  },\r\n  created() {\r\n    this.updatePrimaryColor(this.theme)\r\n  },\r\n  methods: {\r\n    async updatePrimaryColor(val) {\r\n      Cookies.set('theme', val, { expires: 365 })\r\n      const oldVal = this.chalk ? this.theme : Cookies.get('theme') ? Cookies.get('theme') : ORIGINAL_THEME\r\n      if (typeof val !== 'string') return\r\n      const themeCluster = this.getThemeCluster(val.replace('#', ''))\r\n      const originalCluster = this.getThemeCluster(oldVal.replace('#', ''))\r\n\r\n      const getHandler = (variable, id) => {\r\n        return () => {\r\n          const originalCluster = this.getThemeCluster(ORIGINAL_THEME.replace('#', ''))\r\n          const newStyle = this.updateStyle(this[variable], originalCluster, themeCluster)\r\n          let styleTag = document.getElementById(id)\r\n          if (!styleTag) {\r\n            styleTag = document.createElement('style')\r\n            styleTag.setAttribute('id', id)\r\n            document.head.appendChild(styleTag)\r\n          }\r\n          styleTag.innerText = newStyle\r\n        }\r\n      }\r\n\r\n      if (!this.chalk) {\r\n        const url = `https://unpkg.com/element-ui@${version}/lib/theme-chalk/index.css`\r\n        await this.getCSSString(url, 'chalk')\r\n      }\r\n      const chalkHandler = getHandler('chalk', 'chalk-style')\r\n      chalkHandler()\r\n\r\n      const styles = [].slice.call(document.querySelectorAll('style')).filter(style => {\r\n        const text = style.innerText\r\n        return new RegExp(oldVal, 'i').test(text) && !/Chalk Variables/.test(text)\r\n      })\r\n      styles.forEach(style => {\r\n        const { innerText } = style\r\n        if (typeof innerText !== 'string') return\r\n        style.innerText = this.updateStyle(innerText, originalCluster, themeCluster)\r\n      })\r\n\r\n      this.$emit('change', val)\r\n    },\r\n\r\n    updateStyle(style, oldCluster, newCluster) {\r\n      let newStyle = style\r\n      oldCluster.forEach((color, index) => {\r\n        newStyle = newStyle.replace(new RegExp(color, 'ig'), newCluster[index])\r\n      })\r\n      return newStyle\r\n    },\r\n\r\n    getCSSString(url, variable) {\r\n      return new Promise(resolve => {\r\n        const xhr = new XMLHttpRequest()\r\n        xhr.onreadystatechange = () => {\r\n          if (xhr.readyState === 4 && xhr.status === 200) {\r\n            this[variable] = xhr.responseText.replace(/@font-face{[^}]+}/, '')\r\n            resolve()\r\n          }\r\n        }\r\n        xhr.open('GET', url)\r\n        xhr.send()\r\n      })\r\n    },\r\n\r\n    getThemeCluster(theme) {\r\n      const tintColor = (color, tint) => {\r\n        let red = parseInt(color.slice(0, 2), 16)\r\n        let green = parseInt(color.slice(2, 4), 16)\r\n        let blue = parseInt(color.slice(4, 6), 16)\r\n\r\n        if (tint === 0) {\r\n          // when primary color is in its rgb space\r\n          return [red, green, blue].join(',')\r\n        } else {\r\n          red += Math.round(tint * (255 - red))\r\n          green += Math.round(tint * (255 - green))\r\n          blue += Math.round(tint * (255 - blue))\r\n\r\n          red = red.toString(16)\r\n          green = green.toString(16)\r\n          blue = blue.toString(16)\r\n\r\n          return `#${red}${green}${blue}`\r\n        }\r\n      }\r\n\r\n      const shadeColor = (color, shade) => {\r\n        let red = parseInt(color.slice(0, 2), 16)\r\n        let green = parseInt(color.slice(2, 4), 16)\r\n        let blue = parseInt(color.slice(4, 6), 16)\r\n\r\n        red = Math.round((1 - shade) * red)\r\n        green = Math.round((1 - shade) * green)\r\n        blue = Math.round((1 - shade) * blue)\r\n\r\n        red = red.toString(16)\r\n        green = green.toString(16)\r\n        blue = blue.toString(16)\r\n\r\n        return `#${red}${green}${blue}`\r\n      }\r\n\r\n      const clusters = [theme]\r\n      for (let i = 0; i <= 9; i++) {\r\n        clusters.push(tintColor(theme, Number((i / 10).toFixed(2))))\r\n      }\r\n      clusters.push(shadeColor(theme, 0.1))\r\n      return clusters\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.theme-message,\r\n.theme-picker-dropdown {\r\n  z-index: 99999 !important;\r\n}\r\n\r\n.theme-picker .el-color-picker__trigger {\r\n  height: 30px !important;\r\n  width: 30px !important;\r\n  padding: 2px;\r\n}\r\n\r\n.theme-picker-dropdown .el-color-dropdown__link-btn {\r\n  display: none;\r\n}\r\n</style>\r\n"]}]}