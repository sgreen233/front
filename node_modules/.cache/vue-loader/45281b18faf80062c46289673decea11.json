{"remainingRequest":"D:\\software\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\front\\src\\views\\dialogs\\DlgBatchImport.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software\\front\\src\\views\\dialogs\\DlgBatchImport.vue","mtime":1662381330064},{"path":"D:\\software\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\software\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgY29tbW9uQVBJIGZyb20gJ0AvYXBpL2ZpbGUnDQppbXBvcnQgeyBnZXRUZW1wbGF0ZUZpbGUgfSBmcm9tICdAL3V0aWxzL2NvbW1vbicNCmltcG9ydCBJRUFQSSBmcm9tICdAL2FwaS9pbXBvcnRBbmRFeHBvcnQnDQppbXBvcnQgRGxnQmFzaWMgZnJvbSAnQC9jb21wb25lbnRzL0RsZ0Jhc2ljJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdEbGdCYXRjaEltcG9ydCcsDQogIGNvbXBvbmVudHM6IHsgRGxnQmFzaWMgfSwNCiAgcHJvcHM6IHsNCiAgICBpbXBvcnREaWFsb2c6IHsgdHlwZTogT2JqZWN0LCBkZWZhdWx0OiAoKSA9PiB7IH0gfSwNCiAgICB0ZW1wbGF0ZUZpbGU6IHsNCiAgICAgIHR5cGU6IE9iamVjdCwgZGVmYXVsdDogKCkgPT4geyByZXR1cm4geyBpZDogbnVsbCwgbmFtZTogJycgfSB9DQogICAgfSwNCiAgICAvLyDmmK/lkKbpnIDopoHlhYjmiafooYzlr7zlh7rmk43kvZwNCiAgICBpc05lZWRFeHBvcnQ6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogZmFsc2UgfSwNCiAgICBrZXlXb3JkczogeyB0eXBlOiBTdHJpbmcsIGRlZmF1bHQ6ICcnIH0NCiAgfSwNCiAgZGF0YSgpIHsNCiAgICByZXR1cm4gew0KICAgICAgZmlsZToge30sDQogICAgICBmaWxlRmxhZzogZmFsc2UsDQogICAgICBkaWFsb2dGdWxsOiBmYWxzZSwNCiAgICAgIGNvbWZpbUxvYWRpbmc6IGZhbHNlDQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIG5vRmlsZSgpIHsNCiAgICAgIGlmICghdGhpcy5maWxlLnR5cGUgJiYgdGhpcy5maWxlRmxhZykgcmV0dXJuIHRydWUNCiAgICAgIHJldHVybiBmYWxzZQ0KICAgIH0NCiAgfSwNCiAgbWV0aG9kczogew0KICAgIC8vIFRoZSBwYXJhbWV0ZXIgb2YgdGhlIGhvb2sgYmVmb3JlIHVwbG9hZGluZyBhIGZpbGUgaXMgdGhlIHVwbG9hZGVkIGZpbGUuDQogICAgLy8gSWYgZmFsc2Ugb3IgcHJvbWlzZSBpcyByZXR1cm5lZCBhbmQgcmVqZWN0ZWQsIHRoZSB1cGxvYWQgd2lsbCBzdG9wLg0KICAgIC8vIOS4iuS8oOaWh+S7tuWJjeiwg+eUqOeahOmSqeWtkOWHveaVsA0KICAgIGJlZm9yZVVwbG9hZChmaWxlKSB7DQogICAgICBjb25zdCBmaWxlVHlwZXMgPSBbJ3hscycsICd4bHN4J10NCiAgICAgIGNvbnN0IHNwbGl0QXJyID0gZmlsZS5uYW1lLnNwbGl0KCcuJykNCiAgICAgIGNvbnN0IGZpbGVUeXBlID0gc3BsaXRBcnJbc3BsaXRBcnIubGVuZ3RoIC0gMV0NCiAgICAgIGNvbnN0IGlzTHRTaXplID0gZmlsZS5zaXplIC8gMTAyNCAvIDEwMjQgPCB0aGlzLkNPTlNUQU5ULkZJTEVfTUFYX1NJWkUNCg0KICAgICAgaWYgKCFmaWxlVHlwZXMuaW5jbHVkZXMoZmlsZVR5cGUpKSB7DQogICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKCfkuIrkvKDmlofku7blj6rog73mmK8geGxzL3hsc3gg5qC85byPIScpDQogICAgICB9DQogICAgICBpZiAoIWlzTHRTaXplKSB7DQogICAgICAgIHJldHVybiB0aGlzLiRtZXNzYWdlLmVycm9yKGDkuIrkvKDlm77niYflpKflsI/kuI3og73otoXov4cgJHt0aGlzLkNPTlNUQU5ULkZJTEVfTUFYX1NJWkV9IE1CIWApDQogICAgICB9DQogICAgICB0aGlzLmZpbGVGbGFnID0gZmFsc2UNCiAgICAgIHRoaXMuZmlsZSA9IGZpbGUNCiAgICB9LA0KICAgIC8vIOS4iuS8oOaWh+S7tuaVsOmHj+i2hei/h+mZkOWItuaXtuinpuWPkeeahOmSqeWtkOWHveaVsA0KICAgIC8vIEhvb2sgd2hlbiB0aGUgbnVtYmVyIG9mIGZpbGVzIGV4Y2VlZHMgdGhlIGxpbWl0DQogICAgaGFuZGxlRXhjZWVkKGZpbGVzLCBmaWxlTGlzdCkgew0KICAgICAgdGhpcy4kbWVzc2FnZS53YXJuaW5nKCflvZPliY3pmZDliLbpgInmi6kgMSDkuKrmlofku7bvvIzor7fliKDpmaTlkI7nu6fnu63kuIrkvKAnKQ0KICAgIH0sDQogICAgLy8g5YWz6Zet5by556qXDQogICAgLy8gQ2xvc2UgdGhlIHBvcC11cCB3aW5kb3cNCiAgICBjbG9zZURpYWxvZygpIHsNCiAgICAgIHRoaXMuaW1wb3J0RGlhbG9nLnNob3cgPSBmYWxzZQ0KICAgIH0sDQogICAgLy8gRG93bmxvYWQgdGhlIHRlbXBsYXRlLCBqdWRnZSB3aGljaCBpbnRlcmZhY2UgdG8gY2FsbCBhY2NvcmRpbmcgdG8gZGlmZmVyZW50IGJlbGxvbmdwYWdlIGZpZWxkcywNCiAgICAvLyBhbmQgb2J0YWluIHRoZSB0ZW1wbGF0ZXMgYmVsb25naW5nIHRvIGRpZmZlcmVudCBwYWdlcw0KICAgIGFzeW5jIGRvd25sb2FkVGVtcGxhdGUoKSB7DQogICAgICBjb25zdCB0ZW1wbGF0ZUZpbGUgPSBnZXRUZW1wbGF0ZUZpbGUodGhpcy5rZXlXb3JkcywgJy54bHN4JykNCiAgICAgIHRyeSB7DQogICAgICAgIHRoaXMuaW1wb3J0RGlhbG9nLnNob3cgPSBmYWxzZQ0KICAgICAgICB0aGlzLmZ1bGxTY3JlZW5Mb2FkaW5nKCkNCiAgICAgICAgY29uc3QgY29udGVudCA9IGF3YWl0IGNvbW1vbkFQSS5kb3dubG9hZEZpbGUodGVtcGxhdGVGaWxlLmlkKQ0KICAgICAgICB0aGlzLmZ1bGxTY3JlZW5Mb2FkaW5nKCkuY2xvc2UoKQ0KICAgICAgICB0aGlzLmRvd25sb2FkRmlsZShjb250ZW50LCB0ZW1wbGF0ZUZpbGUubmFtZSkNCiAgICAgIH0gY2F0Y2ggKGVycm9yKSB7DQogICAgICAgIHRoaXMuZnVsbFNjcmVlbkxvYWRpbmcoKS5jbG9zZSgpDQogICAgICB9DQogICAgfSwNCiAgICAvLyBPdmVycmlkZSB0aGUgZGVmYXVsdCB1cGxvYWQgYmVoYXZpb3IgYW5kIGN1c3RvbWl6ZSB0aGUgaW1wbGVtZW50YXRpb24gb2YgdXBsb2FkDQogICAgLy8gQWNjb3JkaW5nIHRvIGRpZmZlcmVudCBiZWxsb25ncGFnZSBmaWVsZHMsIGRldGVybWluZSB3aGljaCBwYWdlJ3MgdXBsb2FkIGludGVyZmFjZSB0byBjYWxsLA0KICAgIC8vIG9yIGNoYW5nZSBpdCB0byBlbWl0IGV2ZW50IHRvIHByb2Nlc3MgdGhlIGV2ZW50IG9uIGVhY2ggcGFnZSwgZGVwZW5kaW5nIG9uIHRoZSByZXF1aXJlbWVudHMNCiAgICAvLyDnoa7orqTkuIrkvKANCiAgICBhc3luYyBzdWJtaXQoKSB7DQogICAgICBpZiAoIXRoaXMuZmlsZS50eXBlKSB7DQogICAgICAgIHJldHVybiAodGhpcy5maWxlRmxhZyA9IHRydWUpDQogICAgICB9DQogICAgICB0cnkgew0KICAgICAgICB0aGlzLmNvbWZpbUxvYWRpbmcgPSB0cnVlDQogICAgICAgIHRoaXMuaW1wb3J0RGlhbG9nLnNob3cgPSBmYWxzZQ0KICAgICAgICB0aGlzLmZ1bGxTY3JlZW5Mb2FkaW5nKCkNCiAgICAgICAgYXdhaXQgSUVBUEkuaW1wb3J0SW5mbyh0aGlzLmtleVdvcmRzLCB0aGlzLmZpbGUpDQogICAgICAgIHRoaXMuY29tZmltTG9hZGluZyA9IGZhbHNlDQogICAgICAgIHRoaXMuZnVsbFNjcmVlbkxvYWRpbmcoKS5jbG9zZSgpDQogICAgICAgIHRoaXMuJG1lc3NhZ2Uuc3VjY2Vzcygn5a+85YWl5oiQ5YqfJykNCiAgICAgICAgdGhpcy4kcGFyZW50LiRyZWZzLmRhdGFUYWJsZUxpc3QuJHJlZnMudGFibGUuY2xlYXJTZWxlY3Rpb24oKQ0KICAgICAgICB0aGlzLiRwYXJlbnQuJHJlZnMuZGF0YVRhYmxlTGlzdC5pbml0RGF0YUxpc3QoKQ0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsNCiAgICAgICAgdGhpcy5mdWxsU2NyZWVuTG9hZGluZygpLmNsb3NlKCkNCiAgICAgIH0NCiAgICAgIHRoaXMuZmlsZSA9IHt9DQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["DlgBatchImport.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkBA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DlgBatchImport.vue","sourceRoot":"src/views/dialogs","sourcesContent":["<template>\r\n  <DlgBasic :dialog=\"importDialog\" :digbasic-submit=\"submit\">\r\n    <template slot=\"mainForm\">\r\n      <el-upload class=\"upload-demo\" drag action :limit=\"1\" :show-file-list=\"true\" :http-request=\"()=>{}\" :on-exceed=\"handleExceed\" :before-upload=\"beforeUpload\" :on-remove=\"()=>file={}\">\r\n        <i class=\"el-icon-upload\" />\r\n        <div class=\"el-upload__text\">将文件拖到此处，或<em>点击上传</em></div>\r\n        <div v-show=\"noFile\" slot=\"tip\" class=\"el-upload__tip\" style=\"color:red\">请上传文件！</div>\r\n        <div v-if=\"isNeedExport\" slot=\"tip\" class=\"el-upload__tip\">请先进行<span class=\"download\">“导出”</span>或<span class=\"download\">“全部导出”</span>操作获取模板</div>\r\n        <div slot=\"tip\" class=\"el-upload__tip\">\r\n          <span v-show=\"!isNeedExport\" class=\"download\" @click=\"downloadTemplate\">下载模板</span>\r\n          <span>导入文件不能超过5M，仅允许导入“xls”或“xlsx”格式文件</span>\r\n        </div>\r\n      </el-upload>\r\n    </template>\r\n  </DlgBasic>\r\n</template>\r\n\r\n<script>\r\nimport commonAPI from '@/api/file'\r\nimport { getTemplateFile } from '@/utils/common'\r\nimport IEAPI from '@/api/importAndExport'\r\nimport DlgBasic from '@/components/DlgBasic'\r\n\r\nexport default {\r\n  name: 'DlgBatchImport',\r\n  components: { DlgBasic },\r\n  props: {\r\n    importDialog: { type: Object, default: () => { } },\r\n    templateFile: {\r\n      type: Object, default: () => { return { id: null, name: '' } }\r\n    },\r\n    // 是否需要先执行导出操作\r\n    isNeedExport: { type: Boolean, default: false },\r\n    keyWords: { type: String, default: '' }\r\n  },\r\n  data() {\r\n    return {\r\n      file: {},\r\n      fileFlag: false,\r\n      dialogFull: false,\r\n      comfimLoading: false\r\n    }\r\n  },\r\n  computed: {\r\n    noFile() {\r\n      if (!this.file.type && this.fileFlag) return true\r\n      return false\r\n    }\r\n  },\r\n  methods: {\r\n    // The parameter of the hook before uploading a file is the uploaded file.\r\n    // If false or promise is returned and rejected, the upload will stop.\r\n    // 上传文件前调用的钩子函数\r\n    beforeUpload(file) {\r\n      const fileTypes = ['xls', 'xlsx']\r\n      const splitArr = file.name.split('.')\r\n      const fileType = splitArr[splitArr.length - 1]\r\n      const isLtSize = file.size / 1024 / 1024 < this.CONSTANT.FILE_MAX_SIZE\r\n\r\n      if (!fileTypes.includes(fileType)) {\r\n        return this.$message.error('上传文件只能是 xls/xlsx 格式!')\r\n      }\r\n      if (!isLtSize) {\r\n        return this.$message.error(`上传图片大小不能超过 ${this.CONSTANT.FILE_MAX_SIZE} MB!`)\r\n      }\r\n      this.fileFlag = false\r\n      this.file = file\r\n    },\r\n    // 上传文件数量超过限制时触发的钩子函数\r\n    // Hook when the number of files exceeds the limit\r\n    handleExceed(files, fileList) {\r\n      this.$message.warning('当前限制选择 1 个文件，请删除后继续上传')\r\n    },\r\n    // 关闭弹窗\r\n    // Close the pop-up window\r\n    closeDialog() {\r\n      this.importDialog.show = false\r\n    },\r\n    // Download the template, judge which interface to call according to different bellongpage fields,\r\n    // and obtain the templates belonging to different pages\r\n    async downloadTemplate() {\r\n      const templateFile = getTemplateFile(this.keyWords, '.xlsx')\r\n      try {\r\n        this.importDialog.show = false\r\n        this.fullScreenLoading()\r\n        const content = await commonAPI.downloadFile(templateFile.id)\r\n        this.fullScreenLoading().close()\r\n        this.downloadFile(content, templateFile.name)\r\n      } catch (error) {\r\n        this.fullScreenLoading().close()\r\n      }\r\n    },\r\n    // Override the default upload behavior and customize the implementation of upload\r\n    // According to different bellongpage fields, determine which page's upload interface to call,\r\n    // or change it to emit event to process the event on each page, depending on the requirements\r\n    // 确认上传\r\n    async submit() {\r\n      if (!this.file.type) {\r\n        return (this.fileFlag = true)\r\n      }\r\n      try {\r\n        this.comfimLoading = true\r\n        this.importDialog.show = false\r\n        this.fullScreenLoading()\r\n        await IEAPI.importInfo(this.keyWords, this.file)\r\n        this.comfimLoading = false\r\n        this.fullScreenLoading().close()\r\n        this.$message.success('导入成功')\r\n        this.$parent.$refs.dataTableList.$refs.table.clearSelection()\r\n        this.$parent.$refs.dataTableList.initDataList()\r\n      } catch (error) {\r\n        this.fullScreenLoading().close()\r\n      }\r\n      this.file = {}\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n@import \"~@/assets/css/variables.scss\";\r\n\r\n::v-deep .el-dialog__body {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.el-upload__tip {\r\n  display: flex;\r\n  .download {\r\n    margin-right: 5px;\r\n    color: $--color-primary;\r\n    cursor: pointer;\r\n  }\r\n}\r\n.view-dialog {\r\n  ::v-deep .el-dialog__body {\r\n    max-height: unset;\r\n    height: calc(100vh - 108px);\r\n  }\r\n}\r\n</style>\r\n"]}]}