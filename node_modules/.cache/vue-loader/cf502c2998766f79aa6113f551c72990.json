{"remainingRequest":"D:\\software\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\front\\src\\components\\SvgIcon.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software\\front\\src\\components\\SvgIcon.vue","mtime":1636596374386},{"path":"D:\\software\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\software\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBpc0V4dGVybmFsIH0gZnJvbSAnQC91dGlscy92YWxpZGF0ZScNCmV4cG9ydCBkZWZhdWx0IHsNCiAgbmFtZTogJ1N2Z0ljb24nLA0KICBwcm9wczogew0KICAgIGljb25DbGFzczogeyB0eXBlOiBTdHJpbmcsIHJlcXVpcmVkOiB0cnVlIH0sDQogICAgY2xhc3NOYW1lOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJycgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIGlzRXh0ZXJuYWwoKSB7DQogICAgICByZXR1cm4gaXNFeHRlcm5hbCh0aGlzLmljb25DbGFzcykNCiAgICB9LA0KICAgIGljb25OYW1lKCkgew0KICAgICAgcmV0dXJuIGAjaWNvbi0ke3RoaXMuaWNvbkNsYXNzfWANCiAgICB9LA0KICAgIHN2Z0NsYXNzKCkgew0KICAgICAgaWYgKHRoaXMuY2xhc3NOYW1lKSB7DQogICAgICAgIHJldHVybiAnc3ZnLWljb24gJyArIHRoaXMuY2xhc3NOYW1lICsgJyAnICsgdGhpcy5pY29uQ2xhc3MNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIHJldHVybiAnc3ZnLWljb24gJyArIHRoaXMuaWNvbkNsYXNzDQogICAgICB9DQogICAgfSwNCiAgICBzdHlsZUV4dGVybmFsSWNvbigpIHsNCiAgICAgIHJldHVybiB7DQogICAgICAgIG1hc2s6IGB1cmwoJHt0aGlzLmljb25DbGFzc30pIG5vLXJlcGVhdCA1MCUgNTAlYCwNCiAgICAgICAgJy13ZWJraXQtbWFzayc6IGB1cmwoJHt0aGlzLmljb25DbGFzc30pIG5vLXJlcGVhdCA1MCUgNTAlYA0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["SvgIcon.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SvgIcon.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div v-if=\"isExternal\" :style=\"styleExternalIcon\" class=\"svg-external-icon svg-icon\" v-on=\"$listeners\" />\r\n  <svg v-else :class=\"svgClass\" aria-hidden=\"true\" v-on=\"$listeners\">\r\n    <use :xlink:href=\"iconName\" />\r\n  </svg>\r\n</template>\r\n<script>\r\nimport { isExternal } from '@/utils/validate'\r\nexport default {\r\n  name: 'SvgIcon',\r\n  props: {\r\n    iconClass: { type: String, required: true },\r\n    className: { type: String, default: '' }\r\n  },\r\n  computed: {\r\n    isExternal() {\r\n      return isExternal(this.iconClass)\r\n    },\r\n    iconName() {\r\n      return `#icon-${this.iconClass}`\r\n    },\r\n    svgClass() {\r\n      if (this.className) {\r\n        return 'svg-icon ' + this.className + ' ' + this.iconClass\r\n      } else {\r\n        return 'svg-icon ' + this.iconClass\r\n      }\r\n    },\r\n    styleExternalIcon() {\r\n      return {\r\n        mask: `url(${this.iconClass}) no-repeat 50% 50%`,\r\n        '-webkit-mask': `url(${this.iconClass}) no-repeat 50% 50%`\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.svg-icon {\r\n  width: 1em;\r\n  height: 1em;\r\n  vertical-align: -0.15em;\r\n  fill: currentColor;\r\n  overflow: hidden;\r\n}\r\n\r\n.svg-external-icon {\r\n  background-color: currentColor;\r\n  mask-size: cover !important;\r\n  display: inline-block;\r\n}\r\n</style>\r\n"]}]}