{"remainingRequest":"D:\\software\\front\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\front\\front\\src\\components\\DataTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software\\front\\front\\src\\components\\DataTree.vue","mtime":1715830118030},{"path":"D:\\software\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715830111371},{"path":"D:\\software\\front\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1715830110683},{"path":"D:\\software\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715830111371},{"path":"D:\\software\\front\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1715830117510}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgdHJlZUFQSSBmcm9tICdAL2FwaS90cmVlJw0KaW1wb3J0IGFkYXB0aXZlQ2FyZCBmcm9tICdAL2RpcmVjdGl2ZS9lbC1jYXJkJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdEYXRhVHJlZScsDQogIGRpcmVjdGl2ZXM6IHsgYWRhcHRpdmVDYXJkIH0sDQogIHByb3BzOiB7DQogICAgZGVmYXVsdFByb3BzOiB7IC8vIOazqOaEj+i/memHjOeahOm7mOiupOWAvOayoeacieeUqA0KICAgICAgdHlwZTogT2JqZWN0LA0KICAgICAgZGVmYXVsdDogKCkgPT4gew0KICAgICAgICByZXR1cm4gew0KICAgICAgICAgIHRpdGxlOiB7IG1haW5UaXRsZTogJycsIHN1YlRpdGxlOiAnJyB9LA0KICAgICAgICAgIGNoZWNrRmxhZzogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiBmYWxzZSB9LA0KICAgICAgICAgIGxhenk6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogZmFsc2UgfSwNCiAgICAgICAgICB2aXJ0dWFsUm9vdEZsYWc6IHsgdHlwZTogQm9vbGVhbiwgZGVmYXVsdDogdHJ1ZSB9LA0KICAgICAgICAgIGtleVdvcmQ6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAnJyB9LA0KICAgICAgICAgIGluaXRTZWFyY2hXb3JkczogeyAvLyDliJ3lp4vml7bmn6Xor6LnmoTkuInkuKrlhbPplK7or40NCiAgICAgICAgICAgIHNlYXJjaEtleTogeyB9LA0KICAgICAgICAgICAgcmVnS2V5OiB7IH0sDQogICAgICAgICAgICBhbmRvcjogeyB9DQogICAgICAgICAgfQ0KDQogICAgICAgIH0NCiAgICAgIH0NCiAgICB9DQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIHRyZWVEYXRhOiBbXSwNCiAgICAgIGRlZmF1bHREYXRhUHJvcHM6IHsNCiAgICAgICAgbGFiZWw6ICduYW1lJywNCiAgICAgICAgY2hpbGRyZW46ICdjaGlsZHJlbicsDQogICAgICAgIGlzTGVhZjogJ2lzTGVhZicNCiAgICAgIH0sDQogICAgICBsb2FkaW5nOiBmYWxzZSwNCiAgICAgIG1hcHM6IG5ldyBNYXAoKQ0KICAgIH0NCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICAvLyB2YXJpYWJsZXMoKSB7DQogICAgLy8gICByZXR1cm4gdmFyaWFibGVzDQogICAgLy8gfSwNCiAgICBrZXlXb3JkKCkgew0KICAgICAgcmV0dXJuIHRoaXMuZGVmYXVsdFByb3BzLmtleVdvcmQgPyB0aGlzLmRlZmF1bHRQcm9wcy5rZXlXb3JkIDogbnVsbA0KICAgIH0sDQogICAgdGl0bGUoKSB7DQogICAgICByZXR1cm4gdGhpcy5kZWZhdWx0UHJvcHMudGl0bGUgPyB0aGlzLmRlZmF1bHRQcm9wcy50aXRsZSA6IG51bGwNCiAgICB9LA0KICAgIGxhenkoKSB7DQogICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMuZGVmYXVsdFByb3BzLCAnbGF6eScpKSB7DQogICAgICAgIHJldHVybiB0aGlzLmRlZmF1bHRQcm9wcy5sYXp5DQogICAgICB9DQogICAgICByZXR1cm4gdHJ1ZQ0KICAgIH0sDQogICAgY2hlY2tGbGFnKCkgew0KICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0aGlzLmRlZmF1bHRQcm9wcywgJ2NoZWNrRmxhZycpKSB7DQogICAgICAgIHJldHVybiB0aGlzLmRlZmF1bHRQcm9wcy5jaGVja0ZsYWcNCiAgICAgIH0NCiAgICAgIHJldHVybiBmYWxzZQ0KICAgIH0sDQogICAgc29ydCgpIHsNCiAgICAgIHJldHVybiB0aGlzLmRlZmF1bHRQcm9wcy5zb3J0ID8gdGhpcy5kZWZhdWx0UHJvcHMuc29ydCA6IHsgcHJvcGVydGllczogJ3RoZU9yZGVyJywgZGlyZWN0aW9uOiAnQVNDJyB9DQogICAgfSwNCiAgICB2aXJ0dWFsUm9vdEZsYWcoKSB7DQogICAgICBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHRoaXMuZGVmYXVsdFByb3BzLCAndmlydHVhbFJvb3RGbGFnJykpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuZGVmYXVsdFByb3BzLnZpcnR1YWxSb290RmxhZw0KICAgICAgfQ0KICAgICAgcmV0dXJuIGZhbHNlDQogICAgfSwNCiAgICBpbml0U2VhcmNoV29yZHMoKSB7DQogICAgICByZXR1cm4gdGhpcy5kZWZhdWx0UHJvcHMuaW5pdFNlYXJjaFdvcmRzID8gdGhpcy5kZWZhdWx0UHJvcHMuaW5pdFNlYXJjaFdvcmRzIDogeyB9DQogICAgfQ0KICB9LA0KICBjcmVhdGVkKCkgew0KICAgIHRoaXMuaW5pdERhdGFUcmVlKCkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIC8vIOWIneWni+aHkuWKoOi9vQ0KICAgIGxhenlMb2FkKHRyZWUsIHJlc29sdmUpIHsNCiAgICAgIGlmICh0cmVlLmtleSkgew0KICAgICAgICB0cmVlQVBJLmdldEFsbE5vZGVzKHsNCiAgICAgICAgICBrZXlXb3JkczogdGhpcy5rZXlXb3JkLA0KICAgICAgICAgIHZpcnR1YWxSb290RmxhZzogdGhpcy52aXJ0dWFsUm9vdEZsYWcsDQogICAgICAgICAgc2VhcmNoS2V5OiB0aGlzLnNlYXJjaEtleSwNCiAgICAgICAgICBsYXp5OiB0cnVlLA0KICAgICAgICAgIHBhcmVudElkOiB0cmVlLmtleSwNCiAgICAgICAgICBzb3J0OiB0aGlzLnNvcnQNCiAgICAgICAgfSkudGhlbihyZXMgPT4gew0KICAgICAgICAgIHRoaXMubWFwcy5zZXQodHJlZS5rZXksIHsgdHJlZSwgcmVzb2x2ZSB9KQ0KICAgICAgICAgIHJlc29sdmUocmVzLmRhdGEpDQogICAgICAgIH0pDQogICAgICB9DQogICAgfSwNCiAgICAvLyDliJ3lp4vljJYv5Yi35paw5qCRDQogICAgYXN5bmMgaW5pdERhdGFUcmVlKHBhcmVudElkKSB7DQogICAgICB0aGlzLmxvYWRpbmcgPSB0cnVlDQogICAgICBpZiAoIXBhcmVudElkKSB7DQogICAgICAgIHBhcmVudElkID0gLTENCiAgICAgIH0NCiAgICAgIHRyeSB7DQogICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IHRyZWVBUEkuZ2V0QWxsTm9kZXMoew0KICAgICAgICAgIGtleVdvcmRzOiB0aGlzLmtleVdvcmQsDQogICAgICAgICAgdmlydHVhbFJvb3RGbGFnOiB0aGlzLnZpcnR1YWxSb290RmxhZywNCiAgICAgICAgICBzZWFyY2hLZXk6IHRoaXMuc2VhcmNoS2V5LA0KICAgICAgICAgIGxhenk6IHRoaXMubGF6eSwNCiAgICAgICAgICBwYXJlbnRJZDogcGFyZW50SWQsDQogICAgICAgICAgc29ydDogdGhpcy5zb3J0DQogICAgICAgIH0pDQogICAgICAgIHRoaXMudHJlZURhdGEgPSByZXMuZGF0YQ0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsgdGhpcy5sb2FkaW5nID0gZmFsc2UgfQ0KICAgICAgdGhpcy5sb2FkaW5nID0gZmFsc2UNCiAgICB9LA0KICAgIC8vIOeCueWHu+iKgueCueS6i+S7tg0KICAgIGhhbmRsZU5vZGVDbGljayhyb3cpIHsNCiAgICAgIHRoaXMuJGVtaXQoJ25vZGUtY2xpY2snLCByb3cpDQogICAgfQ0KICB9DQp9DQo="},{"version":3,"sources":["DataTree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAkfile":"DataTree.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <el-card v-adaptive-card :class=\"title ? '' : 'card-notitle'\" shadow=\"never\">\r\n    <template v-if=\"title\" slot=\"header\">\r\n      <span>{{ title.mainTitle }}</span>\r\n      <span v-if=\"title.subTitle\">&nbsp;|&nbsp;<strong>{{ title.subTitle || \"全部\" }}</strong></span>\r\n    </template>\r\n    <!--  <div v-if=\"title\" id=\"table-box-title\" slot=\"header\">\r\n      <span>{{ title }}</span>\r\n      <span v-show=\"subtitle\">\r\n        &nbsp;|&nbsp;\r\n        <strong>{{ subtitle }}</strong>\r\n      </span>\r\n    </div> -->\r\n    <el-tree ref=\"dataTree\" v-adaptive-card v-loading=\"loading\" :lazy=\"lazy\" :load=\"lazyLoad\" highlight-current node-key=\"id\" :show-checkbox=\"checkFlag\" :expand-on-node=\"false\" :default-expanded-keys=\"[-1]\" :data=\"treeData\" :props=\"defaultDataProps\" @node-click=\"handleNodeClick\" />\r\n  </el-card>\r\n</template>\r\n\r\n<script>\r\nimport treeAPI from '@/api/tree'\r\nimport adaptiveCard from '@/directive/el-card'\r\n\r\nexport default {\r\n  name: 'DataTree',\r\n  directives: { adaptiveCard },\r\n  props: {\r\n    defaultProps: { // 注意这里的默认值没有用\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          title: { mainTitle: '', subTitle: '' },\r\n          checkFlag: { type: Boolean, default: false },\r\n          lazy: { type: Boolean, default: false },\r\n          virtualRootFlag: { type: Boolean, default: true },\r\n          keyWord: { type: String, default: '' },\r\n          initSearchWords: { // 初始时查询的三个关键词\r\n            searchKey: { },\r\n            regKey: { },\r\n            andor: { }\r\n          }\r\n\r\n        }\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      treeData: [],\r\n      defaultDataProps: {\r\n        label: 'name',\r\n        children: 'children',\r\n        isLeaf: 'isLeaf'\r\n      },\r\n      loading: false,\r\n      maps: new Map()\r\n    }\r\n  },\r\n  computed: {\r\n    // variables() {\r\n    //   return variables\r\n    // },\r\n    keyWord() {\r\n      return this.defaultProps.keyWord ? this.defaultProps.keyWord : null\r\n    },\r\n    title() {\r\n      return this.defaultProps.title ? this.defaultProps.title : null\r\n    },\r\n    lazy() {\r\n      if (Object.prototype.hasOwnProperty.call(this.defaultProps, 'lazy')) {\r\n        return this.defaultProps.lazy\r\n      }\r\n      return true\r\n    },\r\n    checkFlag() {\r\n      if (Object.prototype.hasOwnProperty.call(this.defaultProps, 'checkFlag')) {\r\n        return this.defaultProps.checkFlag\r\n      }\r\n      return false\r\n    },\r\n    sort() {\r\n      return this.defaultProps.sort ? this.defaultProps.sort : { properties: 'theOrder', direction: 'ASC' }\r\n    },\r\n    virtualRootFlag() {\r\n      if (Object.prototype.hasOwnProperty.call(this.defaultProps, 'virtualRootFlag')) {\r\n        return this.defaultProps.virtualRootFlag\r\n      }\r\n      return false\r\n    },\r\n    initSearchWords() {\r\n      return this.defaultProps.initSearchWords ? this.defaultProps.initSearchWords : { }\r\n    }\r\n  },\r\n  created() {\r\n    this.initDataTree()\r\n  },\r\n  methods: {\r\n    // 初始懒加载\r\n    lazyLoad(tree, resolve) {\r\n      if (tree.key) {\r\n        treeAPI.getAllNodes({\r\n          keyWords: this.keyWord,\r\n          virtualRootFlag: this.virtualRootFlag,\r\n          searchKey: this.searchKey,\r\n          lazy: true,\r\n          parentId: tree.key,\r\n          sort: this.sort\r\n        }).then(res => {\r\n          this.maps.set(tree.key, { tree, resolve })\r\n          resolve(res.data)\r\n        })\r\n      }\r\n    },\r\n    // 初始化/刷新树\r\n    async initDataTree(parentId) {\r\n      this.loading = true\r\n      if (!parentId) {\r\n        parentId = -1\r\n      }\r\n      try {\r\n        const res = await treeAPI.getAllNodes({\r\n          keyWords: this.keyWord,\r\n          virtualRootFlag: this.virtualRootFlag,\r\n          searchKey: this.searchKey,\r\n          lazy: this.lazy,\r\n          parentId: parentId,\r\n          sort: this.sort\r\n        })\r\n        this.treeData = res.data\r\n      } catch (error) { this.loading = false }\r\n      this.loading = false\r\n    },\r\n    // 点击节点事件\r\n    handleNodeClick(row) {\r\n      this.$emit('node-click', row)\r\n    }\r\n  }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n::v-deep .el-card__body {\r\n  padding: 5px 12px;\r\n}\r\n.card-notitle {\r\n  border: unset;\r\n  transition: unset;\r\n}\r\n.el-scrollbar .el-scrollbar__wrap {\r\n  overflow-x: hidden;\r\n}\r\n.el-tree {\r\n  overflow: auto;\r\n}\r\n#table-box-title {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n}\r\n</style>\r\n"]}]}