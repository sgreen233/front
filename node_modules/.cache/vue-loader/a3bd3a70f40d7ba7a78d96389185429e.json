{"remainingRequest":"D:\\software\\front\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\front\\front\\src\\layout\\components\\tags-view\\Index.vue?vue&type=style&index=0&id=bdf06902&lang=scss&scoped=true&","dependencies":[{"path":"D:\\software\\front\\front\\src\\layout\\components\\tags-view\\Index.vue","mtime":1715830118039},{"path":"D:\\software\\front\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1715830112594},{"path":"D:\\software\\front\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1715830117510},{"path":"D:\\software\\front\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":1715830115271},{"path":"D:\\software\\front\\front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1715830116699},{"path":"D:\\software\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715830111371},{"path":"D:\\software\\front\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1715830117510}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQokdGFnc1ZpZXdIZWlnaHQ6IDM0cHg7DQoudGFncy12aWV3LWNvbnRhaW5lciB7DQogIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgaGVpZ2h0OiAkdGFnc1ZpZXdIZWlnaHQ7DQogIHdpZHRoOiAxMDAlOw0KICAudGFncy12aWV3LXdyYXBwZXIgew0KICAgIC50YWdzLXZpZXctaXRlbSB7DQogICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogICAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgICBjdXJzb3I6IHBvaW50ZXI7DQogICAgICBoZWlnaHQ6IGNhbGMoI3skdGFnc1ZpZXdIZWlnaHR9IC0gNHB4KTsNCiAgICAgIGxpbmUtaGVpZ2h0OiAyOHB4Ow0KICAgICAgY29sb3I6ICM0OTUwNjA7DQogICAgICBwYWRkaW5nOiAwIDhweDsNCiAgICAgIGZvbnQtc2l6ZTogMTJweDsNCiAgICAgIG1hcmdpbi10b3A6IDRweDsNCiAgICAgICY6Zmlyc3Qtb2YtdHlwZSB7DQogICAgICAgIG1hcmdpbi1sZWZ0OiAxNXB4Ow0KICAgICAgfQ0KICAgICAgJjpsYXN0LW9mLXR5cGUgew0KICAgICAgICBtYXJnaW4tcmlnaHQ6IDE1cHg7DQogICAgICB9DQogICAgICAmLmFjdGl2ZSB7DQogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7DQogICAgICB9DQogICAgfQ0KICB9DQogIC5jb250ZXh0bWVudSB7DQogICAgbWFyZ2luOiAwOw0KICAgIGJhY2tncm91bmQ6ICNmZmY7DQogICAgei1pbmRleDogMzAwMDsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgbGlzdC1zdHlsZS10eXBlOiBub25lOw0KICAgIHBhZGRpbmc6IDVweCAwOw0KICAgIGJvcmRlci1yYWRpdXM6IDRweDsNCiAgICBmb250LXNpemU6IDEycHg7DQogICAgZm9udC13ZWlnaHQ6IDQwMDsNCiAgICBjb2xvcjogIzMzMzsNCiAgICBib3gtc2hhZG93OiAycHggMnB4IDNweCAwIHJnYmEoMCwgMCwgMCwgMC4zKTsNCiAgICBsaSB7DQogICAgICBtYXJnaW46IDA7DQogICAgICBwYWRkaW5nOiA3cHggMTZweDsNCiAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICAgICY6aG92ZXIgew0KICAgICAgICBiYWNrZ3JvdW5kOiAjZWVlOw0KICAgICAgfQ0KICAgIH0NCiAgfQ0KICAuaGFtYnVyZ2VyLWNvbnRhaW5lciB7DQogICAgbGluZS1oZWlnaHQ6ICR0YWdzVmlld0hlaWdodDsNCiAgICBoZWlnaHQ6IDEwMCU7DQogICAgZmxvYXQ6IGxlZnQ7DQogICAgcGFkZGluZzogMCAxMHB4Ow0KICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kIDAuM3M7DQogICAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDsNCiAgICAmOmhvdmVyIHsNCiAgICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4wMjUpOw0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["Index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Index.vue","sourceRoot":"src/layout/components/tags-view","sourcesContent":["<template>\r\n  <header id=\"tags-view-container\" class=\"tags-view-container\">\r\n    <scroll-pane ref=\"scrollPane\" class=\"tags-view-wrapper\">\r\n      <hamburger id=\"hamburger-container\" :is-active=\"sideBar.opened\" class=\"hamburger-container\" :title=\"sideBar.opened ? '收起侧栏' : '展开侧栏'\" @toggleClick=\"toggleSideBar\" />\r\n      <router-link v-for=\"tag in visitedViews\" ref=\"tag\" :key=\"tag.path\" :class=\"isActive(tag) ? 'active' : ''\" :to=\"{ path: tag.path, query: tag.query, fullPath: tag.fullPath }\" class=\"tags-view-item\" @click.middle.native=\"closeSelectedTag(tag)\" @contextmenu.prevent.native=\"openMenu(tag, $event)\">\r\n        {{ tag.title }}\r\n        <span v-if=\"!tag.meta.affix\" class=\"el-icon-close\" @click.prevent.stop=\"closeSelectedTag(tag)\" />\r\n      </router-link>\r\n    </scroll-pane>\r\n    <!-- <ul v-show=\"visible\" :style=\"{ left: left + 'px', top: top + 'px' }\" class=\"contextmenu\">\r\n      <li @click=\"refreshSelectedTag(selectedTag)\">刷新</li>\r\n      <li v-if=\"!(selectedTag.meta && selectedTag.meta.affix)\" @click=\"closeSelectedTag(selectedTag)\">\r\n        关闭\r\n      </li>\r\n      <li @click=\"closeOthersTags(selectedTag)\">关闭其他</li>\r\n      <li @click=\"closeAllTags(selectedTag)\">关闭全部</li>\r\n    </ul> -->\r\n  </header>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport ScrollPane from './ScrollPane'\r\nimport path from 'path'\r\nimport Hamburger from '@/layout/Hamburger'\r\n\r\nexport default {\r\n  components: { ScrollPane, Hamburger },\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      top: 0,\r\n      left: 0,\r\n      homeViews: {},\r\n      selectedTag: {},\r\n      affixTags: []\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapGetters(['sideBar', 'device', 'user', 'avatar', 'sex']),\r\n    visitedViews() {\r\n      var visit = this.$store.state.tagsView.visitedViews\r\n      visit = visit.filter((i) => {\r\n        if (!((i.name === 'Login') || (i.name === 'Register') || (i.name === 'Forget'))) {\r\n          return i\r\n        }\r\n      })\r\n      return visit\r\n    },\r\n    routes() {\r\n      return this.$store.state.permission.routes\r\n    }\r\n  },\r\n  watch: {\r\n    $route() {\r\n      this.addTags()\r\n      this.moveToCurrentTag()\r\n    },\r\n    visible(value) {\r\n      if (value) {\r\n        document.body.addEventListener('click', this.closeMenu)\r\n      } else {\r\n        document.body.removeEventListener('click', this.closeMenu)\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    // 页面刷新前缓存和赋值\r\n    this.beforeUnload()\r\n    this.initTags()\r\n    this.addTags()\r\n  },\r\n  methods: {\r\n    beforeUnload() {\r\n      // 监听页面刷新\r\n      window.addEventListener('beforeunload', () => {\r\n        // visitedViews数据结构太复杂无法直接JSON.stringify处理，先转换需要的数据\r\n        const tabViews = this.visitedViews.map(item => {\r\n          return {\r\n            fullPath: item.fullPath,\r\n            hash: item.hash,\r\n            meta: { ...item.meta },\r\n            name: item.name,\r\n            params: { ...item.params },\r\n            path: item.path,\r\n            query: { ...item.query },\r\n            title: item.title\r\n          }\r\n        })\r\n        sessionStorage.setItem('tabViews', JSON.stringify(tabViews))\r\n      })\r\n      // 页面初始化加载判断缓存中是否有数据\r\n      const oldViews = JSON.parse(sessionStorage.getItem('tabViews')) || []\r\n      if (oldViews.length > 0) {\r\n        this.$store.state.tagsView.visitedViews = oldViews\r\n        sessionStorage.clear()\r\n      }\r\n    },\r\n    toggleSideBar() {\r\n      this.$store.dispatch('app/toggleSideBar')\r\n    },\r\n    isActive(route) {\r\n      return route.path === this.$route.path\r\n    },\r\n    filterAffixTags(routes, basePath = '/') {\r\n      let tags = []\r\n      routes.forEach(route => {\r\n        if (route.meta && route.meta.affix) {\r\n          const tagPath = path.resolve(basePath, route.path)\r\n          tags.push({\r\n            fullPath: tagPath,\r\n            path: tagPath,\r\n            name: route.name,\r\n            meta: { ...route.meta }\r\n          })\r\n        }\r\n        if (route.children) {\r\n          const tempTags = this.filterAffixTags(route.children, route.path)\r\n          if (tempTags.length >= 1) {\r\n            tags = [...tags, ...tempTags]\r\n          }\r\n        }\r\n      })\r\n      return tags\r\n    },\r\n    initTags() {\r\n      const affixTags = (this.affixTags = this.filterAffixTags(this.routes))\r\n      // eslint-disable-next-line no-unused-vars\r\n      for (const tag of affixTags) {\r\n        if (tag.name) {\r\n          this.$store.dispatch('tagsView/addVisitedView', tag)\r\n        }\r\n      }\r\n    },\r\n    addTags() {\r\n      const { name } = this.$route\r\n      if (name) {\r\n        this.$store.dispatch('tagsView/addView', this.$route)\r\n      }\r\n      return false\r\n    },\r\n    moveToCurrentTag() {\r\n      const tags = this.$refs.tag\r\n      this.$nextTick(() => {\r\n        // eslint-disable-next-line no-unused-vars\r\n        for (const tag of tags) {\r\n          if (tag.to.path === this.$route.path) {\r\n            this.$refs.scrollPane.moveToTarget(tag)\r\n            // when query is different then update\r\n            if (tag.to.fullPath !== this.$route.fullPath) {\r\n              this.$store.dispatch('tagsView/updateVisitedView', this.$route)\r\n            }\r\n            break\r\n          }\r\n        }\r\n      })\r\n    },\r\n    refreshSelectedTag(view) {\r\n      this.$store\r\n        .dispatch('tagsView/delCachedView', view)\r\n        .then(() => {\r\n          const { fullPath } = view\r\n          this.$nextTick(() => {\r\n            // this.$router.replace({\r\n            //   path: '/redirect' + fullPath\r\n            // })\r\n            this.$router.push({\r\n              path: fullPath,\r\n              replace: true\r\n            })\r\n          })\r\n        })\r\n        .catch(error => error)\r\n    },\r\n    closeSelectedTag(view) {\r\n      this.$store\r\n        .dispatch('tagsView/delView', view)\r\n        .then(({ visitedViews }) => {\r\n          if (this.isActive(view)) {\r\n            this.toLastView(visitedViews, view)\r\n          }\r\n        })\r\n        .catch(error => error)\r\n    },\r\n    closeOthersTags(view) {\r\n      this.$router.push(view)\r\n      this.$store\r\n        .dispatch('tagsView/delOthersViews', view)\r\n        .then(() => {\r\n          this.moveToCurrentTag()\r\n        })\r\n        .catch(error => error)\r\n    },\r\n    closeAllTags(view) {\r\n      this.$store\r\n        .dispatch('tagsView/delAllViews')\r\n        .then(({ visitedViews }) => {\r\n          if (this.affixTags.some(tag => tag.path === view.path)) {\r\n            return\r\n          }\r\n          this.toLastView(visitedViews, view)\r\n        })\r\n        .catch(error => error)\r\n    },\r\n    toLastView(visitedViews, view) {\r\n      const latestView = visitedViews.slice(-1)[0]\r\n      if (latestView) {\r\n        this.$router.push(latestView)\r\n      } else {\r\n        // now the default is to redirect to the home page if there is no tags-view,\r\n        // you can adjust it according to your needs.\r\n        if (view.name === 'Dashboard') {\r\n          // to reload home page\r\n          this.$router.replace({ path: '/redirect' + view.fullPath })\r\n        } else {\r\n          this.$router.push('/')\r\n        }\r\n      }\r\n    },\r\n    openMenu(tag, e) {\r\n      const menuMinWidth = 210\r\n      const offsetLeft = this.$el.getBoundingClientRect().left // container margin left\r\n      const offsetWidth = this.$el.offsetWidth // container width\r\n      const maxLeft = offsetWidth - menuMinWidth // left boundary\r\n      const left = e.clientX - offsetLeft + 15 // 15: margin right\r\n\r\n      if (left > maxLeft) {\r\n        this.left = maxLeft\r\n      } else {\r\n        this.left = left\r\n      }\r\n\r\n      this.top = 34\r\n      this.visible = true\r\n      this.selectedTag = tag\r\n    },\r\n    closeMenu() {\r\n      this.visible = false\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n$tagsViewHeight: 34px;\r\n.tags-view-container {\r\n  position: relative;\r\n  height: $tagsViewHeight;\r\n  width: 100%;\r\n  .tags-view-wrapper {\r\n    .tags-view-item {\r\n      display: inline-block;\r\n      position: relative;\r\n      cursor: pointer;\r\n      height: calc(#{$tagsViewHeight} - 4px);\r\n      line-height: 28px;\r\n      color: #495060;\r\n      padding: 0 8px;\r\n      font-size: 12px;\r\n      margin-top: 4px;\r\n      &:first-of-type {\r\n        margin-left: 15px;\r\n      }\r\n      &:last-of-type {\r\n        margin-right: 15px;\r\n      }\r\n      &.active {\r\n        background-color: #fff;\r\n      }\r\n    }\r\n  }\r\n  .contextmenu {\r\n    margin: 0;\r\n    background: #fff;\r\n    z-index: 3000;\r\n    position: absolute;\r\n    list-style-type: none;\r\n    padding: 5px 0;\r\n    border-radius: 4px;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    color: #333;\r\n    box-shadow: 2px 2px 3px 0 rgba(0, 0, 0, 0.3);\r\n    li {\r\n      margin: 0;\r\n      padding: 7px 16px;\r\n      cursor: pointer;\r\n      &:hover {\r\n        background: #eee;\r\n      }\r\n    }\r\n  }\r\n  .hamburger-container {\r\n    line-height: $tagsViewHeight;\r\n    height: 100%;\r\n    float: left;\r\n    padding: 0 10px;\r\n    cursor: pointer;\r\n    transition: background 0.3s;\r\n    -webkit-tap-highlight-color: transparent;\r\n    &:hover {\r\n      background: rgba(0, 0, 0, 0.025);\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n//reset element css of el-icon-close\r\n.tags-view-wrapper {\r\n  .tags-view-item {\r\n    .el-icon-close {\r\n      width: 16px;\r\n      height: 16px;\r\n      vertical-align: 2px;\r\n      border-radius: 50%;\r\n      text-align: center;\r\n      transition: all 0.3s cubic-bezier(0.645, 0.045, 0.355, 1);\r\n      transform-origin: 100% 50%;\r\n      &:before {\r\n        transform: scale(0.6);\r\n        display: inline-block;\r\n        vertical-align: -3px;\r\n      }\r\n      &:hover {\r\n        background-color: #b4bccc;\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}