{"remainingRequest":"D:\\software\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!D:\\software\\front\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\software\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\front\\src\\components\\DataTableHeader.vue?vue&type=template&id=16db8b71&scoped=true&","dependencies":[{"path":"D:\\software\\front\\src\\components\\DataTableHeader.vue","mtime":1699598993245},{"path":"D:\\software\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\front\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"D:\\software\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}