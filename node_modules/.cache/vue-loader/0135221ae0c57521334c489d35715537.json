{"remainingRequest":"D:\\software\\front\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\front\\front\\src\\components\\DataTableHeader.vue?vue&type=style&index=0&id=16db8b71&scoped=true&lang=scss&","dependencies":[{"path":"D:\\software\\front\\front\\src\\components\\DataTableHeader.vue","mtime":1715830118029},{"path":"D:\\software\\front\\front\\node_modules\\css-loader\\dist\\cjs.js","mtime":1715830112594},{"path":"D:\\software\\front\\front\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1715830117510},{"path":"D:\\software\\front\\front\\node_modules\\postcss-loader\\src\\index.js","mtime":1715830115271},{"path":"D:\\software\\front\\front\\node_modules\\sass-loader\\dist\\cjs.js","mtime":1715830116699},{"path":"D:\\software\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715830111371},{"path":"D:\\software\\front\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1715830117510}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCjo6di1kZWVwIC5lbC1jYXJkX19ib2R5IHsNCiAgcGFkZGluZzogMDsNCn0NCg0KLmNydWQtb3B0cyB7DQogIGRpc3BsYXk6IGZsZXg7DQogIGFsaWduLWl0ZW1zOiBjZW50ZXI7DQogIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjsNCiAgbWFyZ2luLWJvdHRvbTogMTBweDsNCn0NCi5jaGVja2JveC1pdGVtOm50aC1sYXN0LW9mLXR5cGUoMSkgew0KICBtYXJnaW4tcmlnaHQ6IDMwcHg7DQp9DQo="},{"version":3,"sources":["DataTableHeader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqWA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"DataTableHeader.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <!--搜索框-->\r\n    <slot v-if=\"showSearchPanel\" name=\"searchPanel\" />\r\n    <!--上方按钮插槽-->\r\n    <div v-if=\"showTopButtons\" class=\"crud-opts\">\r\n      <el-row type=\"flex\" justify=\"space-between\">\r\n        <!--左侧插槽-->\r\n        <slot name=\"left\" />\r\n        <el-button v-if=\"button.create.show\" size=\"mini\" :type=\"button.create.type\" icon=\"el-icon-plus\" @click=\"$emit('append-click')\">{{ button.create.name }}</el-button>\r\n        <el-button v-if=\"button.update.show\" size=\"mini\" :type=\"button.update.type\" icon=\"el-icon-edit\" :disabled=\"selectedColumns.length != 1\" @click=\"edit(selectedColumns[0])\">{{ button.update.name }}</el-button>\r\n        <el-button v-if=\"button.delete.show\" :type=\"button.delete.type\" icon=\"el-icon-delete\" size=\"mini\" :disabled=\"selectedColumns.length < 1\" @click=\"remove(selectedColumns)\">{{ button.delete.name }}</el-button>\r\n        <el-tooltip class=\"item\" effect=\"dark\" content=\"直接点击会导出当前全部内容，否则请先选择需要导出的项目后再点击。\" placement=\"top\">\r\n          <el-button v-if=\"button.export.show\" size=\"mini\" :type=\"button.export.type\" icon=\"el-icon-upload\" @click=\"exportData\">{{ button.export.name }}</el-button>\r\n        </el-tooltip>\r\n        <el-button v-if=\"button.more1.show\" size=\"mini\" :type=\"button.more1.type\" icon=\"el-icon-circle-plus-outline\" @click=\"more1Click(selectedColumns)\">{{ button.more1.name }}</el-button>\r\n        <el-button v-if=\"button.more2.show\" size=\"mini\" :type=\"button.more2.type\" icon=\"el-icon-s-promotion\" @click=\"more2Click(selectedColumns)\">{{ button.more2.name }}</el-button>\r\n        <div v-if=\"button.batchCreate.show\" style=\"padding-left:10px;padding-right:10px;\">\r\n          <el-upload ref=\"upload\" v-model=\"fileList\" action :file-list=\"fileList\" :show-file-list=\"false\" :http-request=\"handleUpload\">\r\n            <el-button size=\"small\" icon=\"el-icon-upload\" :type=\"button.batchCreate.type\">{{ button.batchCreate.name }}</el-button>\r\n          </el-upload>\r\n        </div>\r\n        <div v-if=\"button.audit.show\" style=\"padding-left:10px;padding-right:10px;\">\r\n          <el-dropdown ref=\"auditButton\" split-button size=\"mini\" :type=\"button.audit.type\" :disabled=\"selectedColumns.length < 1\" @command=\"auditDropdownSelect\" @click=\"auditDropdownClick(selectedColumns)\">{{ auditButtonName }}\r\n            <el-dropdown-menu slot=\"dropdown\">\r\n              <el-dropdown-item v-if=\"button.audit.showPass\" :command=\"CONSTANT.AUDIT_STATUS.PASS\">批量审核通过</el-dropdown-item>\r\n              <el-dropdown-item v-if=\"button.audit.showNotPass\" :command=\"CONSTANT.AUDIT_STATUS.NOTPASS\">批量审核不通过</el-dropdown-item>\r\n              <el-dropdown-item v-if=\"button.audit.showSave\" :command=\"CONSTANT.AUDIT_STATUS.SAVE\">批量打回</el-dropdown-item>\r\n              <el-dropdown-item v-if=\"button.audit.showBack\" :command=\"CONSTANT.AUDIT_STATUS.BACK\">批量审核退回</el-dropdown-item>\r\n            </el-dropdown-menu>\r\n          </el-dropdown>\r\n        </div>\r\n      </el-row>\r\n      <!--列表上方的业务模块插槽-->\r\n      <slot name=\"topOperate\" />\r\n      <!--右侧-->\r\n      <slot name=\"right\" />\r\n      <el-button-group v-if=\"button.buttonGroup.show\">\r\n        <el-button v-if=\"button.search.show\" size=\"mini\" icon=\"el-icon-search\" title=\"搜索\" @click=\"showSearch\" />\r\n        <el-button size=\"mini\" icon=\"el-icon-refresh\" title=\"刷新\" @click=\"initData\" />\r\n        <el-popover placement=\"bottom-end\" width=\"100\" trigger=\"click\">\r\n          <el-button slot=\"reference\" size=\"mini\" title=\"选择性展示\" icon=\"el-icon-s-grid\" />\r\n          <el-checkbox v-model=\"checkAll\" :disabled=\"!indeterminate\" :indeterminate=\"indeterminate\" @change=\"handleCheckAllChange\">全选</el-checkbox>\r\n          <el-checkbox v-for=\"item in allTableColumns\" :key=\"item.id\" v-model=\"item.firstVisible\" class=\"checkbox-item\" @change=\"handleCheckSingleChange(item)\">{{ item.showName }}</el-checkbox>\r\n        </el-popover>\r\n      </el-button-group>\r\n    </div>\r\n    <el-card shadow=\"never\">\r\n      <slot slot=\"header\" name=\"cardTitle\" />\r\n      <slot name=\"body\" />\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport IEAPI from '@/api/importAndExport'\r\nimport { getTemplateFile, arrangeButton } from '@/utils/common'\r\nimport fileAPI from '@/api/file'\r\nimport { getTableColumns } from '@/utils/tableColumns'\r\nimport CONSTANT from '@/constant'\r\n\r\nexport default {\r\n  name: 'DataTableHeader',\r\n  props: {\r\n    defaultProps: {\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          keyWord: { edit: '', view: '' }, // 关键词，包括view和edit，默认edit\r\n          buttonProps: { update: { show: false }}, // 控制树结构上方的按钮\r\n          allTableColumns: [],\r\n          searchPanel: false, // 初始是否出现搜索按钮\r\n          showTopButtons: true // 是否显示顶部按钮}}\r\n          // defaultProps每一项和默认值无用，写清楚方便后面查询调用\r\n        }\r\n      }\r\n    },\r\n    selectedColumns: { type: Array, default: () => [] }\r\n  },\r\n  data() {\r\n    return {\r\n      fileList: [],\r\n      // treeTableData: [],\r\n      tableColumnItem: [],\r\n      // auditList: [], // 审核checkbox容器\r\n      checkAll: true,\r\n      indeterminate: false,\r\n      // loading: true,\r\n      // isAllSelect: false,\r\n      auditButtonName: '',\r\n      showSearchPanel: false,\r\n      thisEvents: ''\r\n    }\r\n  },\r\n  computed: {\r\n    keyWord() {\r\n      var key = {}\r\n      this.$set(key, 'edit', this.defaultProps.keyWord.edit)\r\n      if (!Object.prototype.hasOwnProperty.call(this.defaultProps.keyWord, 'view')) {\r\n        this.$set(key, 'view', key.edit)\r\n      } else {\r\n        this.$set(key, 'view', this.defaultProps.keyWord.view)\r\n      }\r\n      return key\r\n    },\r\n    specialExportKey() {\r\n      if (Object.prototype.hasOwnProperty.call(this.defaultProps, 'specialExportKey')) {\r\n        return this.defaultProps.specialExportKey ? this.defaultProps.specialExportKey : ''\r\n      }\r\n      return ''\r\n    },\r\n    searchPanel() {\r\n      if (Object.prototype.hasOwnProperty.call(this.defaultProps, 'searchPanel')) {\r\n        return this.defaultProps.searchPanel\r\n      }\r\n      return false\r\n    },\r\n    showTopButtons() {\r\n      if (Object.prototype.hasOwnProperty.call(this.defaultProps, 'showTopButtons')) {\r\n        return this.defaultProps.showTopButtons\r\n      }\r\n      return true\r\n    },\r\n    buttonProps() {\r\n      return this.defaultProps.buttonProps ? this.defaultProps.buttonProps : { update: { show: true }, create: { show: true }, delete: { show: true }, export: { show: true }, up: { show: true }, down: { show: true }}\r\n    },\r\n    allTableColumns() {\r\n      return this.defaultProps.allTableColumns ? Object.values(this.defaultProps.allTableColumns) : getTableColumns(0)\r\n    },\r\n    button() {\r\n      var btn = {\r\n        visible: { show: false, name: '查看详情', type: 'info' },\r\n        create: { show: false, name: '新增', type: 'primary' },\r\n        batchCreate: { show: false, name: '导入', type: 'primary' },\r\n        update: { show: false, name: '修改', type: 'info' },\r\n        delete: { show: false, name: '删除', type: 'danger' },\r\n        search: { show: false, name: '查询' },\r\n        up: { show: false, name: '上移', type: 'warning' },\r\n        down: { show: false, name: '下移', type: 'warning' },\r\n        export: { show: false, name: '导出', type: 'warning' },\r\n        // batchExport: { show: false, name: '全部导出', type:'warning' },\r\n        more1: { show: false, name: '更多操作1', type: 'info' },\r\n        more2: { show: false, name: '更多操作2', type: 'info' },\r\n        audit: { show: false, name: '审核', type: 'primary', showPass: true, showNotPass: true, showSave: true, showBack: true },\r\n        buttonGroup: { show: true }\r\n      }\r\n      return arrangeButton(this.buttonProps, btn)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.thisEvents = JSON.parse(JSON.stringify(this._events))\r\n  },\r\n  async created() {\r\n    await this.createDynamicTableColumns()\r\n\r\n    if (this.button.audit.show) {\r\n      if (this.button.audit.showPass) {\r\n        this.auditDropdownSelect(CONSTANT.AUDIT_STATUS.PASS)\r\n      } else if (this.button.audit.showNotPass) {\r\n        this.auditDropdownSelect(CONSTANT.AUDIT_STATUS.NotPASS)\r\n      } else if (this.button.audit.showSave) {\r\n        this.auditDropdownSelect(CONSTANT.AUDIT_STATUS.SAVE)\r\n      } else if (this.button.audit.showBack) {\r\n        this.auditDropdownSelect(CONSTANT.AUDIT_STATUS.BACK)\r\n      }\r\n    }\r\n    // this.$emit('init-click')\r\n  },\r\n  methods: {\r\n    // #region 动态生成头部列\r\n    async createDynamicTableColumns() {\r\n      this.allTableColumns.forEach((e) => {\r\n        if (!Object.prototype.hasOwnProperty.call(e, 'firstVisible')) {\r\n          this.$set(e, 'firstVisible', true)\r\n        }\r\n      })\r\n      await this.initTBLVisibles()\r\n    },\r\n    // 动态生成和配置列\r\n    initTBLVisibles() {\r\n      const obj = this.getIndexInfo()\r\n      const index = obj.index\r\n      if (index >= 0) {\r\n        // 生成配置项显隐性\r\n        this.allTableColumns.forEach((item, i) => {\r\n          item.firstVisible = obj.arr[index].list[i]\r\n        })\r\n      }\r\n      Object.assign(this.tableColumnItem, this.allTableColumns.filter(e => e.firstVisible))\r\n      Object.assign(this.$parent.tableColumnItem, this.tableColumnItem)\r\n    },\r\n    // #endregion\r\n    showSearch() {\r\n      this.showSearchPanel = !this.showSearchPanel\r\n      this.$emit('show-search', this.showSearchPanel)\r\n    },\r\n    // 刷新\r\n    async initData() {\r\n      this.$emit('init-click')\r\n    },\r\n    // 新增\r\n    async append(row) {\r\n      this.$emit('append-click', row)\r\n    },\r\n    // 修改\r\n    async edit(row) {\r\n      this.$emit('edit-click', row)\r\n    },\r\n    // 更多内容1\r\n    async more1Click(row) {\r\n      this.$emit('more1-click', row)\r\n    },\r\n    // 更多内容2\r\n    async more2Click(row) {\r\n      this.$emit('more2-click', row)\r\n    },\r\n    // 导入数据\r\n    async handleUpload(para) {\r\n      this.fullScreenLoading = true\r\n      const params = {\r\n        files: [para.file],\r\n        tabName: this.keyWord.view,\r\n        importFlag: true,\r\n        userId: this.$store.getters.userInfo.id,\r\n        relId: 0,\r\n        initSearchWords: JSON.stringify(this.$parent.initSearchWords)\r\n      }\r\n      try {\r\n        await fileAPI.upload(params)\r\n      } catch (error) {\r\n        this.$message.warning('文件上传失败' + error)\r\n      }\r\n      this.fullScreenLoading = false\r\n      this.$emit('upload-finish')\r\n    },\r\n    // 审核\r\n    audit(row) {\r\n      this.$emit('audit-click', row)\r\n    },\r\n    // 审核状态选择\r\n    auditDropdownSelect(command) {\r\n      switch (command) {\r\n        case CONSTANT.AUDIT_STATUS.PASS:\r\n          this.auditButtonName = '批量审核通过'\r\n          return\r\n        case CONSTANT.AUDIT_STATUS.NOTPASS:\r\n          this.auditButtonName = '批量审核不通过'\r\n          return\r\n        case CONSTANT.AUDIT_STATUS.SAVE:\r\n          this.auditButtonName = '批量打回'\r\n          return\r\n        case CONSTANT.AUDIT_STATUS.BACK:\r\n          this.auditButtonName = '批量审核退回'\r\n          return\r\n      }\r\n    },\r\n    // 审核按钮点击\r\n    auditDropdownClick(row) {\r\n      this.$emit('audit-click', row, this.auditButtonName)\r\n    },\r\n    // 删除\r\n    remove(row) {\r\n      if (row.length > 0) {\r\n        this.$confirm('此操作将删除选中行, 是否继续?', '提示', {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消'\r\n        }).then(async _ => {\r\n          this.$emit('delete-click', row)\r\n        }).catch(error => error)\r\n      }\r\n    },\r\n    // 导出数据\r\n    async exportData() {\r\n      if (!Object.prototype.hasOwnProperty.call(this.thisEvents, 'export-click')) {\r\n        await this._exportData()\r\n      } else {\r\n        this.$emit('export-click')\r\n      }\r\n    },\r\n    async _exportData() {\r\n      this.fullScreenLoading()\r\n      var key = this.specialExportKey\r\n      if (key.length === 0) {\r\n        key = this.keyWord.view\r\n      }\r\n      const { name } = getTemplateFile(key, '.xls')\r\n      try {\r\n        var content = null\r\n        content = await IEAPI.exportInfo(key, this.selectedColumns, this.allTableColumns, this.$parent.usedSearchWords)\r\n        this.downloadFile(content, name)\r\n        this.fullScreenLoading().close()\r\n      } catch (error) {\r\n        console.log(error)\r\n        this.fullScreenLoading().close()\r\n      }\r\n    },\r\n    // #region 处理显示列的部分显示或隐藏\r\n    // 全选\r\n    handleCheckAllChange() {\r\n      this.checkAll = true\r\n      this.allTableColumns.forEach((e) => { this.$set(e, 'firstVisible', true) })\r\n      this.indeterminate = false\r\n      this.saveTableColumns()\r\n    },\r\n    // 单个框的选择\r\n    handleCheckSingleChange(item) {\r\n      this.tableColumnItem = this.allTableColumns.filter((e) => e.firstVisible)\r\n      const length = this.tableColumnItem.length\r\n      const totalLength = this.allTableColumns.length\r\n      if (length && length === totalLength) {\r\n        this.checkAll = true\r\n        this.indeterminate = false\r\n      } else if (length && length < totalLength) {\r\n        this.indeterminate = true\r\n        this.checkAll = true\r\n      } else {\r\n        item.firstVisible = true\r\n        this.$message.warning('至少选择一项展示')\r\n      }\r\n      this.saveTableColumns()\r\n    },\r\n    saveTableColumns() {\r\n      const obj = this.getIndexInfo()\r\n      const index = obj.index\r\n      // 表头项配置显隐性数组\r\n      const visibles = this.allTableColumns.map(e => e.firstVisible)\r\n      if (index >= 0) {\r\n        obj.arr[index].list = visibles\r\n      } else {\r\n        obj.arr.push({\r\n          keywords: obj.keywords,\r\n          userId: this.$store.getters.userInfo.id,\r\n          list: visibles\r\n        })\r\n      }\r\n      // 将操作设置保存至本地\r\n      localStorage.setItem(`${obj.user}`, JSON.stringify(obj.arr))\r\n      this.tableColumnItem = { ...this.allTableColumns.filter((e) => e.firstVisible) }\r\n      this.$parent.tableColumnItem = { ...this.tableColumnItem }\r\n    },\r\n    getIndexInfo() {\r\n      const obj = { keywords: '', user: '', arr: [], index: -1 }\r\n      // obj.keywords = this.keyWord.view\r\n      obj.keywords = this.$parent._uid\r\n      obj.user = 'user_' + this.$store.getters.userInfo.id\r\n      // 查看本地是否已经存储了该用户该张表的信息\r\n      const savedItem = JSON.parse(localStorage.getItem(`${obj.user}`))\r\n      obj.arr = savedItem || []\r\n      obj.index = obj.arr.findIndex(item => item.keywords === obj.keywords)\r\n      return obj\r\n    }\r\n    // #endregion\r\n  }\r\n}\r\n</script>\r\n<style scoped lang=\"scss\">\r\n::v-deep .el-card__body {\r\n  padding: 0;\r\n}\r\n\r\n.crud-opts {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin-bottom: 10px;\r\n}\r\n.checkbox-item:nth-last-of-type(1) {\r\n  margin-right: 30px;\r\n}\r\n</style>\r\n"]}]}