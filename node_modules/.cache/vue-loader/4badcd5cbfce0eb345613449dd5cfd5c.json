{"remainingRequest":"D:\\software\\front\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\front\\front\\src\\components\\DataTableTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software\\front\\front\\src\\components\\DataTableTree.vue","mtime":1715830118030},{"path":"D:\\software\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715830111371},{"path":"D:\\software\\front\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":1715830110683},{"path":"D:\\software\\front\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1715830111371},{"path":"D:\\software\\front\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":1715830117510}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["DataTableTree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAufile":"DataTableTree.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <DataTableHeader ref=\"dataTBLMother\" :default-props=\"defaultProps.defaultDTHProps\" :selected-columns.sync=\"selectedColumns\" @init-click=\"initDataTree\" @append-click=\"appendClick\" @edit-click=\"editClick\" @delete-click=\"deleteClick\" @upload-finish=\"uploadFinish\">\r\n    <template slot=\"body\">\r\n      <el-card shadow=\"never\">\r\n        <slot slot=\"header\" name=\"cardTitle\" />\r\n        <template v-if=\"title\" slot=\"header\">\r\n          <span>{{ title.mainTitle }}</span>\r\n          <span v-if=\"title.subTitle\">&nbsp;|&nbsp;<strong>{{ title.subTitle || \"全部\" }}</strong></span>\r\n        </template>\r\n        <el-table ref=\"dataTree\" v-adaptive :lazy=\"lazy\" :load=\"lazyLoad\" height=\"100%\" border :data=\"treeTableData\" :tree-props=\"{children: 'children', hasChildren: 'hasChildren'}\" row-key=\"id\" highlight-current-row :default-expand-all=\"expandFlag\" :expand-row-keys=\"['-1']\" @current-change=\"handleNodeClick\" @select=\"handleSelection\" @selection-change=\"handleSelectionChange\" @select-all=\"handleSelectionAll\">\r\n          <el-table-column v-if=\"checkFlag\" type=\"selection\" fixed width=\"55px\" />\r\n          <el-table-column v-for=\"(item, index) in tableColumnItem\" :key=\"index\" :show-overflow-tooltip=\"true\" :label=\"item.showName\" :width=\"item.width\" align=\"left\">\r\n            <template #default=\"scope\">\r\n              <span v-if=\"item.tableColumnName === 'icon'\">\r\n                <svg-icon :icon-class=\"scope.row[item.tableColumnName]\" />\r\n              </span>\r\n              <!-- 判断是否是日期格式 -->\r\n              <span v-else-if=\"item.tableColumnName.endsWith('Time')\">{{ scope.row[item.tableColumnName] | filterDateTime }}</span>\r\n              <!-- 列表自定义显示的内容 >-->\r\n              <slot v-else-if=\"item.tableColumnName.startsWith('customize-')\" :name=\"item.tableColumnName.replace('customize-','')\" :row=\"scope.row\" />\r\n              <span v-else>{{ scope.row[item.tableColumnName] || '--' }}</span>\r\n            </template>\r\n          </el-table-column>\r\n          <el-table-column v-if=\"operateFlag\" fixed=\"right\" label=\"操作\" :width=\"operateWidth\">\r\n            <template #default=\"scope\">\r\n              <el-button type=\"primary\" icon=\"el-icon-plus\" size=\"mini\" title=\"新增下级\" @click=\"appendClick(scope.row)\" />\r\n              <el-button v-if=\"button.update.show\" type=\"info\" icon=\"el-icon-edit\" size=\"mini\" :title=\"button.update.name\" @click=\"editClick(scope.row)\" />\r\n              <el-button v-if=\"button.delete.show\" type=\"danger\" icon=\"el-icon-delete\" size=\"mini\" :title=\"button.delete.name\" @click=\"remove([scope.row])\" />\r\n              <el-button v-if=\"button.up.show\" type=\"warning\" icon=\" el-icon-top\" size=\"mini\" :title=\"button.up.name\" @click=\"changeNodes('up',scope.row)\" />\r\n              <el-button v-if=\"button.down.show\" type=\"warning\" icon=\" el-icon-bottom\" size=\"mini\" :title=\"button.down.name\" @click=\"changeNodes('down',scope.row)\" />\r\n            </template>\r\n          </el-table-column>\r\n        </el-table>\r\n      </el-card>\r\n    </template>\r\n  </DataTableHeader>\r\n</template>\r\n<script>\r\n\r\nimport DataTableHeader from '@/components/DataTableHeader'\r\nimport treeAPI from '@/api/tree'\r\nimport adaptive from '@/directive/el-table'\r\nimport moment from 'moment'\r\n\r\n// 懒加载，新增第一个节点不展开，不出现小箭头，暂时未解决\r\n// 遗留思路，新增第一个节点，让上级节点出现小箭头\r\nexport default {\r\n  name: 'DataTableTree',\r\n  components: { DataTableHeader },\r\n  directives: { adaptive },\r\n  filters: {\r\n    filterDateTime(val) {\r\n      return moment(val).format('YYYY-MM-DD HH:mm')\r\n    }\r\n  },\r\n  props: {\r\n    defaultProps: { // 注意这里的默认值没有用\r\n      type: Object,\r\n      default: () => {\r\n        return {\r\n          keyWord: { },\r\n          title: { },\r\n          allTableColumns: { },\r\n          bottomOffset: 0,\r\n          someFlags: {\r\n            expandFlag: false,\r\n            checkFlag: false,\r\n            lazy: true,\r\n            operateFlag: true,\r\n            virtualRootFlag: false\r\n          },\r\n          initSearchWords: { // 初始时查询的三个关键词\r\n            searchKey: { },\r\n            regKey: { },\r\n            andor: { }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      operateWidth: 230,\r\n      treeTableData: [],\r\n      selectedColumns: [],\r\n      // 列表显示的属性项\r\n      tableColumnItem: [],\r\n\r\n      checkAll: true,\r\n      indeterminate: false,\r\n      addDisabled: false,\r\n      loading: true,\r\n      isAllSelect: false,\r\n\r\n      maps: new Map(),\r\n      thisEvents: ''\r\n    }\r\n  },\r\n  computed: {\r\n    // variables() {\r\n    //   return variables\r\n    // },\r\n    button() {\r\n      return this.$refs.dataTBLMother.button\r\n    },\r\n    keyWord() {\r\n      return this.$refs.dataTBLMother.keyWord\r\n    },\r\n    title() {\r\n      return this.defaultProps.title ? this.defaultProps.title : null\r\n    },\r\n    expandFlag() {\r\n      if (Object.prototype.hasOwnProperty.call(this.defaultProps, 'someFlags')) {\r\n        if (Object.prototype.hasOwnProperty.call(this.defaultProps.someFlags, 'expandFlag')) {\r\n          return this.defaultProps.someFlags.expandFlag\r\n        }\r\n      }\r\n      return false\r\n    },\r\n    checkFlag() {\r\n      if (Object.prototype.hasOwnProperty.call(this.defaultProps, 'someFlags')) {\r\n        if (Object.prototype.hasOwnProperty.call(this.defaultProps.someFlags, 'checkFlag')) {\r\n          return this.defaultProps.someFlags.checkFlag\r\n        }\r\n      }\r\n      return true\r\n    },\r\n    lazy() {\r\n      if (Object.prototype.hasOwnProperty.call(this.defaultProps, 'someFlags')) {\r\n        if (Object.prototype.hasOwnProperty.call(this.defaultProps.someFlags, 'lazy')) {\r\n          return this.defaultProps.someFlags.lazy\r\n        }\r\n      }\r\n      return true\r\n    },\r\n    operateFlag() {\r\n      if (Object.prototype.hasOwnProperty.call(this.defaultProps, 'someFlags')) {\r\n        if (Object.prototype.hasOwnProperty.call(this.defaultProps.someFlags, 'operateFlag')) {\r\n          return this.defaultProps.someFlags.operateFlag\r\n        }\r\n      }\r\n      return true\r\n    },\r\n    virtualRootFlag() {\r\n      if (Object.prototype.hasOwnProperty.call(this.defaultProps, 'someFlags')) {\r\n        if (Object.prototype.hasOwnProperty.call(this.defaultProps.someFlags, 'virtualRootFlag')) {\r\n          return this.defaultProps.someFlags.virtualRootFlag\r\n        }\r\n      }\r\n      return false\r\n    },\r\n    initSearchWords() {\r\n      return this.defaultProps.initSearchWords ? this.defaultProps.initSearchWords : { }\r\n    },\r\n    sort() {\r\n      return this.defaultProps.sort ? this.defaultProps.sort : { properties: 'theOrder', direction: 'ASC' }\r\n    },\r\n    bottomOffset() {\r\n      return this.defaultProps.bottomOffset ? this.defaultProps.bottomOffset : 0\r\n    }\r\n  },\r\n  mounted() {\r\n    this.thisEvents = JSON.parse(JSON.stringify(this._events))\r\n    let num = 1\r\n    const arr = [\r\n      this.button.delete.show,\r\n      this.button.update.show,\r\n      this.button.up.show,\r\n      this.button.down.show\r\n    ]\r\n    num = arr.reduce((acc, cur) => {\r\n      acc = cur ? acc + 1 : acc\r\n      return acc\r\n    }, 1)\r\n    var width = num * 46\r\n    if (width < 60) {\r\n      width = 60\r\n    }\r\n    this.operateWidth = width\r\n\r\n    setTimeout(() => { this.initDataTree() }, 500)\r\n  },\r\n  methods: {\r\n    // #region 初始化以及加载\r\n    // 懒加载\r\n    async lazyLoad(tree, treeNode, resolve) {\r\n      if (tree.id === -1) {\r\n        this.initDataTree()\r\n      } else {\r\n        var view = this.keyWord.view\r\n        const res = await treeAPI.getAllNodes({\r\n          keyWords: view,\r\n          parentId: tree.id,\r\n          virtualRootFlag: this.virtualRootFlag,\r\n          searchKey: this.searchKey,\r\n          lazy: true,\r\n          preName: tree.allNodeNames,\r\n          sort: this.sort\r\n        })\r\n        this.maps.set(tree.id, { tree, treeNode, resolve })\r\n        resolve(res.data)\r\n      }\r\n    },\r\n    // 加载部分树\r\n    updatePartTree(row) {\r\n      if (this.lazy) {\r\n        var nowMaps\r\n        if (this.maps.size > 0) {\r\n          nowMaps = this.maps.get(row.parentId)\r\n        }\r\n        if (nowMaps === undefined) {\r\n          this.lazyLoad({ id: -1, allNodeNames: '' }, null, null)\r\n        } else {\r\n          this.lazyLoad(nowMaps.tree, nowMaps.treeNode, nowMaps.resolve)\r\n        }\r\n      } else {\r\n        this.initDataTree()\r\n      }\r\n    },\r\n    // 初始化/刷新树（无论懒加载与否，初始时都会调用）\r\n    async initDataTree(parentId = -1) {\r\n      this.loading = true\r\n      try {\r\n        var view = this.keyWord.view\r\n        var parentNode = { id: parentId, allNodeNames: '' }\r\n        const res = await treeAPI.getAllNodes({\r\n          keyWords: view,\r\n          parentId: parentNode.id,\r\n          virtualRootFlag: this.virtualRootFlag,\r\n          searchKey: this.searchKey,\r\n          lazy: this.lazy,\r\n          preName: parentNode.allNodeNames,\r\n          sort: this.sort\r\n        })\r\n        this.treeTableData = res.data\r\n      } catch (error) {\r\n        this.loading = false\r\n        console.log(error)\r\n      }\r\n      this.loading = false\r\n    },\r\n    // #endregion\r\n\r\n    // #region 选择相关\r\n    // 监听选中的事件\r\n    handleSelection(selection, row) {\r\n      // this.$refs['dataTBLMother'].handleSelection(selection, row)\r\n      if (selection.indexOf(row) !== -1) {\r\n        this.selectChange(selection, row, true, true)\r\n      } else {\r\n        this.selectChange(selection, row, false, true)\r\n      }\r\n      this.$emit('update:selectedColumns', selection)\r\n    },\r\n    // 监听选中的事件\r\n    handleSelectionChange(selection) {\r\n      this.selectedColumns = selection\r\n    },\r\n    // 全选\r\n    handleSelectionAll(selection) {\r\n      this.isAllSelect = !this.isAllSelect\r\n      if (this.isAllSelect) {\r\n        selection.forEach(val => {\r\n          this.selectChange(selection, val, true, false)\r\n        })\r\n      } else {\r\n        this.$refs['dataTree'].clearSelection()\r\n        selection = []\r\n      }\r\n      this.$emit('update:selectedColumns', selection)\r\n    },\r\n    selectChange(selection, row, isChecked, notAll) {\r\n      if (row.children && row.children.length) {\r\n        row.children.forEach(val => {\r\n          this.$refs['dataTree'].toggleRowSelection(val, isChecked)\r\n          if (notAll) {\r\n            isChecked\r\n              ? selection.push(val)\r\n              : selection.splice(selection.indexOf(val), 1)\r\n          }\r\n          if (row.children && row.children.length) {\r\n            this.selectChange(selection, val, isChecked, notAll)\r\n          }\r\n        })\r\n      }\r\n    },\r\n    // #endregion\r\n    // 按钮新增\r\n    async appendClick(row) {\r\n      this.$emit('append-click', row)\r\n    },\r\n    // 按钮修改\r\n    async editClick(row) {\r\n      this.$emit('edit-click', row)\r\n    },\r\n    // 按钮删除\r\n    async deleteClick(row) {\r\n      if (Object.prototype.hasOwnProperty.call(this.thisEvents, 'delete-click')) {\r\n        this.$emit('delete-click', row)\r\n      } else {\r\n        this.loading = true\r\n        await treeAPI.delManyNode(this.keyWord.edit, row)\r\n        this.$refs['dataTree'].clearSelection()\r\n        this.updatePartTree(row[0])\r\n        this.$message.success('删除成功！')\r\n        this.loading = false\r\n      }\r\n    },\r\n    // 删除\r\n    remove(row) {\r\n      this.$refs['dataTBLMother'].remove(row)\r\n    },\r\n    // 移动节点\r\n    async changeNodes(direction, node) {\r\n      this.loading = true\r\n      const resp = await treeAPI.getAllBrotherIndex(this.keyWord.edit, node.id)\r\n      const nodes = resp.data\r\n      const index = nodes.findIndex(item => item.id === node.id)\r\n      if (direction === 'up' && index === 0) {\r\n        this.$message.warning('当前节点是第一个节点，无法上移！')\r\n      } else if (direction === 'down' && index === nodes.length - 1) {\r\n        this.$message.warning('当前节点是最后一个节点，无法下移！')\r\n      } else {\r\n        const changeId = direction === 'up' ? nodes[index - 1].id : nodes[index + 1].id\r\n        await treeAPI.changeTwoNodes(this.keyWord.edit, node.id, changeId)\r\n        await this.updatePartTree(node)\r\n        this.$message.success('移动成功！')\r\n      }\r\n      this.loading = false\r\n    },\r\n    // 监听点击某一行事件\r\n    handleNodeClick(val) {\r\n      this.$emit('node-click', val)\r\n    },\r\n    uploadFinish() {\r\n      this.initDataTree()\r\n    }\r\n  }\r\n}\r\n</script>\r\n"]}]}