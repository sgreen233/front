{"remainingRequest":"D:\\software\\front\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\software\\front\\src\\components\\wang-editor\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\software\\front\\src\\components\\wang-editor\\index.vue","mtime":1701338187296},{"path":"D:\\software\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\front\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"D:\\software\\front\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\software\\front\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgRSBmcm9tICd3YW5nZWRpdG9yJw0KaW1wb3J0IGNvbW1vbkFQSSBmcm9tICdAL2FwaS9maWxlJw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6ICdFZGl0b3InLCAgDQogIHByb3BzOiB7DQogICAgdmFsdWU6IHsgdHlwZTogU3RyaW5nLCBkZWZhdWx0OiAnJyB9LA0KICAgIHBsYWNlaG9sZGVyOiB7IHR5cGU6IFN0cmluZywgZGVmYXVsdDogJ+ivt+i+k+WFpeato+aWhycgfSwNCiAgICBpc0Rpc2FibGVkOiB7IHR5cGU6IEJvb2xlYW4sIGRlZmF1bHQ6IGZhbHNlIH0sDQogICAgaXNDbGVhcjogeyB0eXBlOiBCb29sZWFuLCBkZWZhdWx0OiBmYWxzZSB9DQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsgICAgICANCiAgICAgIGVkaXRvcjogJycgICAgICANCiAgICB9DQogIH0sDQogIHdhdGNoOiB7DQogICAgaXNDbGVhcih2YWwpIHsNCiAgICAgIC8vIOinpuWPkea4hemZpOaWh+acrOWfn+WGheWuuQ0KICAgICAgaWYgKHZhbCkgew0KICAgICAgICB0aGlzLmVkaXRvci50eHQuY2xlYXIoKQ0KICAgICAgICB0aGlzLmluZm9fID0gbnVsbA0KICAgICAgfQ0KICAgIH0sDQogICAgdmFsdWUodmFsdWUpIHsNCiAgICAgIGlmICh2YWx1ZSAhPT0gdGhpcy5lZGl0b3IudHh0Lmh0bWwoKSkgew0KICAgICAgICB0aGlzLmVkaXRvci50eHQuaHRtbCh0aGlzLnZhbHVlKQ0KICAgICAgfQ0KICAgIH0NCiAgICAvLyB2YWx1ZeS4uue8lui+keahhui+k+WFpeeahOWGheWuue+8jOi/memHjOaIkeebkeWQrOS6huS4gOS4i+WAvO+8jOW9k+eItue7hOS7tuiwg+eUqOW+l+aXtuWAme+8jOWmguaenOe7mXZhbHVl6LWL5YC85LqG77yM5a2Q57uE5Lu25bCG5Lya5pi+56S654i257uE5Lu26LWL57uZ55qE5YC8DQogIH0sDQogIG1vdW50ZWQoKSB7DQogICAgdGhpcy5zZXRFZGl0b3IoKQ0KICB9LA0KICBtZXRob2RzOiB7DQogICAgc2V0RWRpdG9yKCkgew0KICAgICAgdGhpcy5lZGl0b3IgPSBuZXcgRSh0aGlzLiRyZWZzLmVkaXRvcikNCiAgICAgIHRoaXMuZWRpdG9yLmNvbmZpZy5tZW51cyA9IFsNCiAgICAgICAgJ2hlYWQnLCAvLyDmoIfpopgNCiAgICAgICAgJ2JvbGQnLCAvLyDnspfkvZMNCiAgICAgICAgJ2ZvbnRTaXplJywgLy8g5a2X5Y+3DQogICAgICAgICdmb250TmFtZScsIC8vIOWtl+S9kw0KICAgICAgICAnaXRhbGljJywgLy8g5pac5L2TDQogICAgICAgICd1bmRlcmxpbmUnLCAvLyDkuIvliJLnur8NCiAgICAgICAgJ3N0cmlrZVRocm91Z2gnLCAvLyDliKDpmaTnur8NCiAgICAgICAgJ2luZGVudCcsIC8vIOe8qei/mw0KICAgICAgICAnbGluZUhlaWdodCcsIC8vIOihjOmrmA0KICAgICAgICAnZm9yZUNvbG9yJywgLy8g5paH5a2X6aKc6ImyDQogICAgICAgICdiYWNrQ29sb3InLCAvLyDog4zmma/popzoibINCiAgICAgICAgJ2xpbmsnLCAvLyDmj5LlhaXpk77mjqUNCiAgICAgICAgJ2xpc3QnLCAvLyDliJfooagNCiAgICAgICAgJ2p1c3RpZnknLCAvLyDlr7npvZDmlrnlvI8NCiAgICAgICAgJ3F1b3RlJywgLy8g5byV55SoDQogICAgICAgICdlbW90aWNvbicsIC8vIOihqOaDhQ0KICAgICAgICAnaW1hZ2UnLCAvLyDmj5LlhaXlm77niYcNCiAgICAgICAgJ3RhYmxlJywgLy8g5o+S5YWl6KGo5qC8DQogICAgICAgICdzcGxpdExpbmUnLCAvLyDmj5LlhaXliIblibLnur8NCiAgICAgICAgJ3VuZG8nLCAvLyDmkqTplIANCiAgICAgICAgJ3JlZG8nLCAvLyDmgaLlpI0NCiAgICAgICAgJ2Z1bGxzY3JlZW4nIC8vIOWFqOWxjw0KICAgICAgXQ0KICAgICAgdGhpcy5lZGl0b3IuY29uZmlnLnBsYWNlaG9sZGVyID0gdGhpcy5wbGFjZWhvbGRlcg0KICAgICAgdGhpcy5lZGl0b3IuY29uZmlnLnVwbG9hZEltZ01heFNpemUgPSAxMCAqIDEwMjQgKiAxMDI0IC8vIOWwhuWbvueJh+Wkp+Wwj+mZkOWItuS4uiAxME0NCiAgICAgIC8vIGVkaXRvci5jb25maWcudXBsb2FkRmlsZU5hbWUgPSAnZmlsZScgLy8g5ZCO56uv5o6l5Y+X5LiK5Lyg5paH5Lu255qE5Y+C5pWw5ZCNDQogICAgICAvLyBlZGl0b3IuY29uZmlnLnVwbG9hZEltZ1BhcmFtcyA9IHsNCiAgICAgIC8vICAgcmVsYXRpb25JZDogMCwNCiAgICAgIC8vICAgdHlwZTogMA0KICAgICAgLy8gfSAvLyDkuIrkvKDlm77niYfml7blj6/oh6rlrprkuYnkvKDpgJLkuIDkupvlj4LmlbDvvIzlj4LmlbDkvJrooqvmt7vliqDliLAgZm9ybURhdGEg5Lit77yM5LiA6LW35LiK5Lyg5Yiw5pyN5Yqh56uvDQogICAgICB0aGlzLmVkaXRvci5jb25maWcudXBsb2FkSW1nTWF4TGVuZ3RoID0gNiAvLyDpmZDliLbkuIDmrKHmnIDlpJrkuIrkvKAgMSDlvKDlm77niYcNCiAgICAgIHRoaXMuZWRpdG9yLmNvbmZpZy5zaG93TGlua0ltZyA9IGZhbHNlIC8vIOmakOiXj+e9kee7nOWbvueJh+S4iuS8oA0KICAgICAgLy8g6Ieq5a6a5LmJ5LiK5Lyg5pa55rOVDQogICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgc3BhY2UtYmVmb3JlLWZ1bmN0aW9uLXBhcmVuDQogICAgICB0aGlzLmVkaXRvci5jb25maWcuY3VzdG9tVXBsb2FkSW1nID0gYXN5bmMgKHJlc3VsdEZpbGVzLCBpbnNlcnRJbWdGbikgPT4gew0KICAgICAgICAvLyByZXN1bHRGaWxlcyDmmK8gaW5wdXQg5Lit6YCJ5Lit55qE5paH5Lu25YiX6KGoDQogICAgICAgIGZvciAodmFyIGZpbGUgb2YgcmVzdWx0RmlsZXMpIHsNCiAgICAgICAgICBjb25zdCBwYXJhbXMgPSB7DQogICAgICAgICAgICBmaWxlOiBmaWxlLA0KICAgICAgICAgICAgcmVsYXRpb25JZDogMCwNCiAgICAgICAgICAgIHR5cGU6IDAsDQogICAgICAgICAgICBzb3VyY2U6IDANCiAgICAgICAgICB9DQogICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgY29tbW9uQVBJLmNvbW1vblVwbG9hZChwYXJhbXMpDQogICAgICAgICAgY29uc3QgaW1nVXJsID0gcmVzLmRhdGEudXJsDQogICAgICAgICAgLy8gaW5zZXJ0SW1nRm4g5piv6I635Y+W5Zu+54mHIHVybCDlkI7vvIzmj5LlhaXliLDnvJbovpHlmajnmoTmlrnms5UNCiAgICAgICAgICBpbnNlcnRJbWdGbihpbWdVcmwpDQogICAgICAgIH0NCiAgICAgIH0NCiAgICAgIHRoaXMuZWRpdG9yLmNvbmZpZy51cGxvYWRJbWdIb29rcyA9IHsNCiAgICAgICAgZmFpbDogKHhociwgZWRpdG9yLCByZXN1bHQpID0+IHsNCiAgICAgICAgICAvLyDmj5LlhaXlm77niYflpLHotKXlm57osIMNCiAgICAgICAgICBjb25zb2xlLmxvZyhyZXN1bHQpDQogICAgICAgIH0sDQogICAgICAgIHN1Y2Nlc3M6ICh4aHIsIGVkaXRvciwgcmVzdWx0KSA9PiB7DQogICAgICAgICAgLy8g5Zu+54mH5LiK5Lyg5oiQ5Yqf5Zue6LCDDQogICAgICAgICAgY29uc29sZS5sb2cocmVzdWx0KQ0KICAgICAgICB9LA0KICAgICAgICB0aW1lb3V0OiAoeGhyLCBlZGl0b3IpID0+IHsNCiAgICAgICAgICAvLyDnvZHnu5zotoXml7bnmoTlm57osIMNCiAgICAgICAgICBjb25zb2xlLmxvZygn572R57uc6LaF5pe2JykNCiAgICAgICAgfSwNCiAgICAgICAgZXJyb3I6ICh4aHIsIGVkaXRvcikgPT4gew0KICAgICAgICAgIC8vIOWbvueJh+S4iuS8oOmUmeivr+eahOWbnuiwgw0KICAgICAgICAgIGNvbnNvbGUubG9nKCfkuIrkvKDplJnor68nKQ0KICAgICAgICB9LA0KICAgICAgICAvLyDlm57mmL4NCiAgICAgICAgY3VzdG9tSW5zZXJ0OiAoaW5zZXJ0SW1nLCByZXN1bHQsIGVkaXRvcikgPT4gew0KICAgICAgICAgIC8vIOWbvueJh+S4iuS8oOaIkOWKn++8jOaPkuWFpeWbvueJh+eahOWbnuiwgw0KICAgICAgICAgIC8vIHJlc3VsdOS4uuS4iuS8oOWbvueJh+aIkOWKn+eahOaXtuWAmei/lOWbnueahOaVsOaNru+8jOi/memHjOaIkeaJk+WNsOS6huS4gOS4i+WPkeeOsOWQjuWPsOi/lOWbnueahOaYr2RhdGHvvJpbe3VybDoi6Lev5b6E55qE5b2i5byPIn0sLi4uXQ0KICAgICAgICAgIGluc2VydEltZyhyZXN1bHQuZGF0YS51cmwpIC8vIOS4uuaPkuWFpeWbvueJh+eahOWHveaVsA0KICAgICAgICB9DQogICAgICB9DQogICAgICB0aGlzLmVkaXRvci5jb25maWcub25jaGFuZ2UgPSBodG1sID0+IHsNCiAgICAgICAgdGhpcy4kZW1pdCgnaW5wdXQnLCBodG1sKQ0KICAgICAgfQ0KICAgICAgdGhpcy5lZGl0b3IuY3JlYXRlKCkNCiAgICAgIHRoaXMuZWRpdG9yLnR4dC5odG1sKHRoaXMudmFsdWUpDQogICAgICBpZiAodGhpcy5pc0Rpc2FibGVkKSB0aGlzLmVkaXRvci5kaXNhYmxlKCkNCiAgICB9DQogIH0NCn0NCg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/wang-editor","sourcesContent":["<template>\r\n  <div class=\"editor-box\">\r\n    <div ref=\"editor\" class=\"editor\"  />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport E from 'wangeditor'\r\nimport commonAPI from '@/api/file'\r\n\r\nexport default {\r\n  name: 'Editor',  \r\n  props: {\r\n    value: { type: String, default: '' },\r\n    placeholder: { type: String, default: '请输入正文' },\r\n    isDisabled: { type: Boolean, default: false },\r\n    isClear: { type: Boolean, default: false }\r\n  },\r\n  data() {\r\n    return {      \r\n      editor: ''      \r\n    }\r\n  },\r\n  watch: {\r\n    isClear(val) {\r\n      // 触发清除文本域内容\r\n      if (val) {\r\n        this.editor.txt.clear()\r\n        this.info_ = null\r\n      }\r\n    },\r\n    value(value) {\r\n      if (value !== this.editor.txt.html()) {\r\n        this.editor.txt.html(this.value)\r\n      }\r\n    }\r\n    // value为编辑框输入的内容，这里我监听了一下值，当父组件调用得时候，如果给value赋值了，子组件将会显示父组件赋给的值\r\n  },\r\n  mounted() {\r\n    this.setEditor()\r\n  },\r\n  methods: {\r\n    setEditor() {\r\n      this.editor = new E(this.$refs.editor)\r\n      this.editor.config.menus = [\r\n        'head', // 标题\r\n        'bold', // 粗体\r\n        'fontSize', // 字号\r\n        'fontName', // 字体\r\n        'italic', // 斜体\r\n        'underline', // 下划线\r\n        'strikeThrough', // 删除线\r\n        'indent', // 缩进\r\n        'lineHeight', // 行高\r\n        'foreColor', // 文字颜色\r\n        'backColor', // 背景颜色\r\n        'link', // 插入链接\r\n        'list', // 列表\r\n        'justify', // 对齐方式\r\n        'quote', // 引用\r\n        'emoticon', // 表情\r\n        'image', // 插入图片\r\n        'table', // 插入表格\r\n        'splitLine', // 插入分割线\r\n        'undo', // 撤销\r\n        'redo', // 恢复\r\n        'fullscreen' // 全屏\r\n      ]\r\n      this.editor.config.placeholder = this.placeholder\r\n      this.editor.config.uploadImgMaxSize = 10 * 1024 * 1024 // 将图片大小限制为 10M\r\n      // editor.config.uploadFileName = 'file' // 后端接受上传文件的参数名\r\n      // editor.config.uploadImgParams = {\r\n      //   relationId: 0,\r\n      //   type: 0\r\n      // } // 上传图片时可自定义传递一些参数，参数会被添加到 formData 中，一起上传到服务端\r\n      this.editor.config.uploadImgMaxLength = 6 // 限制一次最多上传 1 张图片\r\n      this.editor.config.showLinkImg = false // 隐藏网络图片上传\r\n      // 自定义上传方法\r\n      // eslint-disable-next-line space-before-function-paren\r\n      this.editor.config.customUploadImg = async (resultFiles, insertImgFn) => {\r\n        // resultFiles 是 input 中选中的文件列表\r\n        for (var file of resultFiles) {\r\n          const params = {\r\n            file: file,\r\n            relationId: 0,\r\n            type: 0,\r\n            source: 0\r\n          }\r\n          const res = await commonAPI.commonUpload(params)\r\n          const imgUrl = res.data.url\r\n          // insertImgFn 是获取图片 url 后，插入到编辑器的方法\r\n          insertImgFn(imgUrl)\r\n        }\r\n      }\r\n      this.editor.config.uploadImgHooks = {\r\n        fail: (xhr, editor, result) => {\r\n          // 插入图片失败回调\r\n          console.log(result)\r\n        },\r\n        success: (xhr, editor, result) => {\r\n          // 图片上传成功回调\r\n          console.log(result)\r\n        },\r\n        timeout: (xhr, editor) => {\r\n          // 网络超时的回调\r\n          console.log('网络超时')\r\n        },\r\n        error: (xhr, editor) => {\r\n          // 图片上传错误的回调\r\n          console.log('上传错误')\r\n        },\r\n        // 回显\r\n        customInsert: (insertImg, result, editor) => {\r\n          // 图片上传成功，插入图片的回调\r\n          // result为上传图片成功的时候返回的数据，这里我打印了一下发现后台返回的是data：[{url:\"路径的形式\"},...]\r\n          insertImg(result.data.url) // 为插入图片的函数\r\n        }\r\n      }\r\n      this.editor.config.onchange = html => {\r\n        this.$emit('input', html)\r\n      }\r\n      this.editor.create()\r\n      this.editor.txt.html(this.value)\r\n      if (this.isDisabled) this.editor.disable()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.editor {\r\n  ::v-deep .w-e-toolbar,\r\n  ::v-deep .w-e-text-container {\r\n    border-color: #ccc !important;\r\n  }\r\n}\r\n</style>\r\n"]}]}